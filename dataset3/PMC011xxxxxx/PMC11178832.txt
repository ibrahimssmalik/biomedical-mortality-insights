
==== Front
Sci Rep
Sci Rep
Scientific Reports
2045-2322
Nature Publishing Group UK London

38877083
63167
10.1038/s41598-024-63167-9
Article
A comprehensive generalization of the Friendship Paradox to weights and attributes
Evtushenko Anna anna@infosci.cornell.edu

1
Kleinberg Jon 12
1 https://ror.org/05bnh6r87 grid.5386.8 0000 0004 1936 877X Department of Information Science, Cornell University, Ithaca, NY USA
2 https://ror.org/05bnh6r87 grid.5386.8 0000 0004 1936 877X Department of Computer Science, Cornell University, Ithaca, NY USA
14 6 2024
14 6 2024
2024
14 137303 2 2024
26 5 2024
© The Author(s) 2024
2024
https://creativecommons.org/licenses/by/4.0/ Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.
The Friendship Paradox is a simple and powerful statement about node degrees in a graph. However, it only applies to undirected graphs with no edge weights, and the only node characteristic it concerns is degree. Since many social networks are more complex than that, it is useful to generalize this phenomenon, if possible, and a number of papers have proposed different generalizations. Here, we unify these generalizations in a common framework, retaining the focus on undirected graphs and allowing for weighted edges and for numeric node attributes other than degree to be considered, since this extension allows for a clean characterization and links to the original concepts most naturally. While the original Friendship Paradox and the Weighted Friendship Paradox hold for all graphs, considering non-degree attributes actually makes the extensions fail around 50% of the time, given random attribute assignment. We provide simple correlation-based rules to see whether an attribute-based version of the paradox holds. In addition to theory, our simulation and data results show how all the concepts can be applied to synthetic and real networks. Where applicable, we draw connections to prior work to make this an accessible and comprehensive paper that lets one understand the math behind the Friendship Paradox and its basic extensions.

Subject terms

Applied mathematics
Computational science
Computer science
issue-copyright-statement© Springer Nature Limited 2024
==== Body
pmcIntroduction

The Friendship Paradox is a non-plural term, so it may initially be surprising that it actually comes in two versions: where friends’ degrees are aggregated at the network level, naturally called “network-level,” and where friends’ degrees are aggregated at the node level, naturally called “node-level.” To introduce the phenomenon broadly, the Friendship Paradox claims that in a simple connected undirected finite graph, the mean second-order degree, calculated at either the network or the node level, is no less than the first-order degree, with equality achieved only if the graph is regular1.

It may be easy to get confused by the exact mechanics of the two phenomena from that broad introduction alone, so as part of this paper we formalize the concepts with algebra and make things straightforward to compute; this also makes introducing extensions easier. We call the network-level version the “list” version, and the node-level version the “singular” version—both names tie directly to how things are computed. To make it easy to see whether a phenomenon holds or fails, we look at the “gap” between a mean second-order quantity and a mean first-order quantity as the single computation result. A version of the Friendship Paradox (including extensions) fails if its respective gap is negative and holds otherwise. The size of the gap doesn’t affect that, so we are mostly concerned with the gap sign.

The original Friendship Paradox (which we also refer to as the FP) looks at node degrees and friend degrees. It is most often considered for undirected graphs, which is our focus too. (Directed versions of FP have been studied as well2,3, but they are much less tractable; to make our paper comprehensive, we explore this in the Supplementary Information.)

The first extension of the basic phenomenon allows one to look beyond degrees and instead consider arbitrary numeric node attributes. It is natural, for instance, to ask whether the fact that friends have larger degrees, on average, may also somehow imply or be correlated with them potentially having more likes on their photos, with “total number of likes on one’s photos” being an example of a numeric node attribute. In the literature, this extension is called the Generalized Friendship Paradox (GFP)4, and its relevance to comparisons of non-degree attributes between people in social contexts has been considered by several papers5,6. To make the generalization more explicit, here we can refer to this concept as the Attribute-based Friendship Paradox (AFP). It also comes in a list version and in a singular version, which we refer to as the LAFP and SAFP, and which have been studied by4 and7,8 respectively. We use the word attribute to denote the node characteristic we are looking at in all cases—in the case of AFP, the attribute is arbitrary; in the case of FP, the attribute is equal to node degree.

We can also suggest that each edge weight in a graph doesn’t have to be equal to 1 (like it does in a simple graph), but is instead a positive integer. The distinction between the list and singular forms of the Friendship Paradox naturally carries over to the weighted case, and so in our framework we define both the LWFP and the SWFP. In this case, edge weights would naturally be taken into account, and the attributes would be equal to the weighted degrees. Edge weights would also be used in second-order calculations. The singular version of WFP has been studied in3.

Finally, if we allow for edges to be weighted and for attributes to be unequal to degrees, we get two versions of the Weighted Attribute-based Friendship Paradox, a formulation that brings together aspects of these different generalizations. The attributes would be arbitrary, and edge weights would be considered in second-order calculations.

First, we introduce and discuss the two original versions of the Friendship Paradox, LFP and SFP. Then, we allow for edges to be weighted and discuss LWFP and SWFP. Finally, we allow attributes to be arbitrary on top of that and discuss LWAFP and SWAFP. In the interest of space, we discuss the unweighted attribute-based versions LAFP and SAFP in the Supplementary Information; LWAFP and SWAFP work perfectly well for the cases of no edge weights if we just take all edge weights to be 1. Because LWAFP and SWAFP consider an extension to both edge weights and attributes at once, we also call these two versions the Extended Friendship Paradox, or LEFP and SEFP. As mentioned, these work for the case of no edge weights; we will also discuss how to apply them to the case of no arbitrary node attributes.

To reiterate, the two original forms of the paradox combined with two independent sources of generalization—attributes and edge weights—mean that we have eight versions of the paradox in total: the original two (LFP and SFP), the attribute-based extensions (LAFP and SAFP), the weighted extensions (LWFP and SWFP), and the weighted attribute-based extensions (LWAFP and SWAFP). Given the lines of prior work that considered attributes and edge weights separately, our framework aims to bring it all together both with common nomenclature for these variants, and with the two general versions of the paradox—LEFP and SEFP, equivalent to LWAFP and SWAFP—but we will find a midway stop to talk about LWFP and SWFP useful. We aim for this paper to be a one-stop venue for understanding the generalized phenomena from both a theory and a data perspective. Note that despite “Friendship” in the name, these algebraic concepts apply to networks across domains. Inherent high clustering of social networks does have certain implications, though, which we consider when looking at data.

When discussing the two original versions of the Friendship Paradox, we are looking at simple connected undirected finite graphs. When working with the extensions that consider edge weights, we are looking at weighted undirected connected finite graphs, meaning that each edge weight is specified to be a positive integer (and all edge weights can still be 1). To make it explicit, all the graphs we consider still only have at most one edge between two nodes and do not have self-loops.

Many real-world networks are often not connected, but it is easy to see how the gaps can be calculated for the giant connected component (remove everything but the giant component) or for multiple components (iterate over nodes and their friends as usual). The only issue would arise for isolated nodes when looking at singular versions of the paradox: here, we couldn’t find, say, the average degree of a node’s friends because we’d have to be dividing by 0. In practice, we usually disregard isolates when looking at both the singular and the list versions of the paradox.

To deal with real-world cases where the edge weights are positive but not necessarily integers, it is simplest to multiply each edge weight by a constant that would make each edge weight an integer (the least common multiple of all the edge weight denominators would work as such a constant). This would not affect the gap sign or whether the paradox holds. Here we do assume that each initial edge weight is a rational number or can be approximated by a rational number (any degree of precision would work). Our arguments for the extensions can be generalized to explicitly allow for any positive (including irrational) edge weights, but restricting edge weights to be positive integers allows for simpler definitions and proofs which we favor due to accessibility. That said, the numbered gap equations and the correlation rules work for positive real weights too.

Understanding the extensions and knowing how to use them for “simpler” cases (e.g. no arbitrary node attributes) and for more complicated cases (e.g. irrational edge weights, disconnected graphs) lets us cover many applications of the basic premise of “the friends’ quantity is larger than the nodes’ quantity” to undirected networks from any domain.

In section “Friendship Paradox (FP)”, we formalize the two original versions of the Friendship Paradox for undirected graphs and prove that they always hold. In section “Weighted Friendship Paradox (WFP)”, we allow for edge weights to be positive integers and prove that the two new versions also always hold. In section “Extended Friendship Paradox (EFP)”, we add arbitrary node attributes on top of that, formalize the two extensions and prove under what conditions they hold and fail. To illustrate how things work, we apply the two extensions to a 3-node network in section “Applying the extensions to one small network”; we both consider and disregard provided edge weights and arbitrary attributes and see how the extensions accommodate that, for a total of 8 gap values. (We cover the example very briefly in the main text, with much more detail in the Supplementary Information.) We look at simulation results in section “Simulation” and at data results in section “Data”. In the Supplementary Information, we consider FP for directed graphs and show that the 4 basic directed versions—list and singular, in-degree- and out-degree-based— do not hold in very simple cases.

In what follows, we define n as the number of nodes in a graph; the nodes are indexed 1 through n. The weight of the edge between nodes i and j is defined as eij=eji. (For completeness, eij=eji=0 if i and j aren’t connected by an edge.) The number of neighbors i has (the number of edges i is part of) is denoted di for both unweighted and weighted graphs and is known as the degree of node i, and N(i) is the set of neighbors (or friends) of i. The sum of weights of edges that i is part of, ∑j∈N(i)eij, is denoted wi for both unweighted and weighted graphs and is known as the weighted degree of node i. Clearly, for unweighted graphs, wi=∑j∈N(i)eij=∑j∈N(i)1=di.

If all di are equal in a graph, we call the graph regular. If all wi are equal, we call the graph “weighted-regular.” If the edge weights in a graph are not all 1, the graph can be regular but not “weighted-regular” and vice versa, whereas if the edge weights are all 1, regularity is of course equivalent to “weighted-regularity.” See the Supplementary Information for an example of a graph which is “weighted-regular” but not regular.

A numeric attribute of i is denoted ai. When we say that a graph “has no attributes” or that we are not considering attributes, we will take ai=wi for each i. This will reduce to ai=di for unweighted graphs (the original Friendship Paradox), but will take non-trivial edge weights into account when they are present.

Finally, we will refer to the degree sequence, the weighted degree sequence, and the attribute sequence of a graph. These are lists of their associated values (e.g. the degree sequence is a list of degrees) indexed in the same way the nodes are.

Friendship Paradox (FP)

The Friendship Paradox is colloquially expressed as “your friends have more friends than you do” after the title of Scott Feld’s paper1. It’s a statement about nodes’ degrees and friends’ degrees. There are two natural formalizations of the statement and we provide and prove both below.

List version: LFP

Formal definition of the LFP gap

List second-order degree of node i is the list of degrees of i’s friends; the length of such a list is di. To get the mean second-order degree (list version) of the graph as a whole, we concatenate (join) all such lists and take the mean of that; we will express that mean as a fraction. To get the numerator, we sum each list and then sum the sums, and the denominator is the sum of the lengths of all the lists, for a final value of ∑i=1n∑j∈N(i)dj∑i=1ndi as the graph’s mean second-order degree (list version). The LFP gap is the difference between the mean second-order degree (list version) and the “mean first-order degree” (which is just mean degree) in a graph. That is expressed as:1 gLFP=∑i=1n∑j∈N(i)dj∑i=1ndi-1n∑i=1ndi

In the expression above, nodes indexed i are “seeds” taking stock of their friends’ degrees. We can take a different approach and instead see how many times a friend’s degree is featured in a seed’s list second-order degree. A friend with degree dj is featured in dj seeds’ calculations. The gap can thus be rewritten as:gLFP=∑j=1ndj2∑i=1ndi-1n∑i=1ndi

Changing j to i and finding a common denominator, this is modified to:gLFP=∑i=1ndi2-1n∑i=1ndi2∑i=1ndi

We will say that LFP fails if gLFP is negative and holds otherwise.

gLFP=0 for regular graphs and positive for all non-regular graphs

We claim that the gap is non-negative across our domain (with equality achieved for regular graphs): gLFP≥0.

First note that the gap is indeed zero for regular graphs where every node has degree d, since the concatenated list of “list second-order degrees” is of the form [d,d…d] (all nodes’ friends have degree d) for a mean of d, and the list of nodes’ degrees looks the same, with the only difference being that it may be shorter, for a mean of d. Now assume that the graph is non-regular. Since we are interested in the gap sign, let’s look just at the numerator of gLFP:numerator ofgLFP=∑i=1ndi2-1n∑i=1ndi2

Reindex the degrees so that the following is true:d1≥d2≥⋯≥dn

Now we can see that the numerator of gLFP is positive by Chebyshev’s sum inequality. The inequality is strict precisely because not all degrees are the same.

Chebyshev’s sum inequality. If a1≥a2≥⋯≥an and b1≥b2≥⋯≥bn, then 1n∑i=1naibi≥1n∑i=1nai1n∑i=1nbi, with equality achieved if at least one of the sequences is constant9.

Recall that LFP fails if gLFP is negative and holds otherwise. Thus LFP always holds.

Intuitively, the average friends’ degree being higher than the average degree here is due to the fact that if node i’s degree is higher (say 10), i has 10 friends, and those 10 friends each add di=10 to the second-order list, resulting in 10 being present 10 times, while a lower degree of 5 would only be present 5 times. So, nodes with higher-than-average degrees are over-represented in the friends’ degree fraction (the mean second-order degree (list version)), and nodes with lower-than-average degrees are thus under-represented. Since each node contributes equally to the first-order calculation of the average degree in a graph, this makes the second-order mean higher. This intuitive argument, if helpful, is easiest to apply to this most basic version of the Friendship Paradox, LFP. In the other cases, we will just rely on algebra to see things.

Singular version: SFP

Formal definition of the SFP gap

Singular second-order degree of node i is the mean of the degrees of i’s friends, expressed as a fraction ∑j∈N(i)djdi (or, the mean of i’s list second-order degree). The mean second-order degree (singular version) of the graph as a whole is the mean of such fractions for all nodes in a graph, expressed as 1n∑i=1n1di∑j∈N(i)dj. The SFP gap is the difference between the mean second-order degree (singular version) and the mean degree in a graph. That is expressed as:2 gSFP=1n∑i=1n1di∑j∈N(i)dj-1n∑i=1ndi

The term ∑i=1n1di∑j∈N(i)dj deserves more attention. Note that if nodes x and y are connected by an edge, that edge contributes dxdy+dydx to this term. If x and y are not connected by an edge, they do not influence each other’s second-order values. Let’s define the set of edges of the graph as E. We can now rewrite the gap as:gSFP=1n∑(x,y)∈Edxdy+dydx-1n∑i=1ndi

We will say that SFP fails if gSFP is negative and holds otherwise.

gSFP=0 for regular graphs and positive for all non-regular graphs

We claim that the gap is non-negative across our domain (with equality achieved for regular graphs): gSFP≥0.

First note that the gap is indeed zero for regular graphs where every node has degree d, since for each node, its singular second-order degree and its first-order degree are both equal to d, and so the second-order mean and the first-order mean are also both equal to d for a difference of 0. Now assume that the graph is non-regular.

Following Kramer et al.10, take the last definition of the gap:gSFP=1n∑(x,y)∈Edxdy+dydx-1n∑i=1ndi

First note that for any r∈R, r+1r≥2 by the AM-GM inequality. The inequality states that p+q2≥pq for any real p and q with equality achieved if p=q, and we take p=r and q=1r.

Taking r=dxdy and 1r=dydx, we can say:1n∑(x,y)∈Edxdy+dydx≥1n2·|E|

Since the graph is non-regular and connected, for at least one edge (x, y), dx≠dy and the AM-GM inequality is strict dxdy+dydx>2, so we can strengthen the overall inequality too:1n∑(x,y)∈Edxdy+dydx>1n2·|E|

Note that the right-hand side is equal precisely to the mean degree. So,1n∑(x,y)∈Edxdy+dydx>1n∑i=1ndi

and1n∑(x,y)∈Edxdy+dydx-1n∑i=1ndi=gSFP>0

Recall that SFP fails if gSFP is negative and holds otherwise. Thus SFP always holds.

Weighted Friendship Paradox (WFP)

Here, we allow for edges to be weighted, each weight being a positive integer, and see how that affects first- and second-order values and our calculations. Conceptually, we will try to stay as close as possible to the original versions of the paradox.

In the original FP, we used degree as the node attribute. In the weighted version, we use weighted degree, or the sum of the weights of the edges a node is part of. Also, if eij>eik, we want j to matter more than k in i’s second-order calculations. To make phrasing more straightforward and closer to that of the Extended FP (next section), we will refer to weighted degree as the attribute of i, but still denote it wi.

The list second-order attribute of node i would still be the list of attributes of i’s friends, but now, if j is a friend of i, wj would be present on the list eij times and not necessarily once. The length of such a list for i would be equal to the sum of the weights of the edges i is part of, or wi. The singular second-order attribute would still be the mean of the list second-order attribute.

So, we can define the LWFP gap, the difference between the mean second-order attribute (list version) and the mean attribute, as:3 gLWFP=∑i=1n∑j∈N(i)eijwj∑i=1nwi-1n∑i=1nwi

And the SWFP gap, the difference between the mean second-order attribute (singular version) and the mean attribute, as:4 gSWFP=1n∑i=1n1wi∑j∈N(i)eijwj-1n∑i=1nwi

The WFP gaps are 0 for “weighted-regular” graphs and positive otherwise

We claim that both gaps are 0 for “weighted-regular” graphs, i.e. graphs where all wi are equal, and positive otherwise, similar to the original FP.

To see why that is the case, it will actually be helpful to rewrite both gap formulas. Define Nw(i) as the weighted neighborhood of i, which is the set of i’s friends except that each friend j is represented eij times. We can see that the gap expressions become:gLWFP=∑i=1n∑j∈Nw(i)wj∑i=1nwi-1n∑i=1nwigSWFP=1n∑i=1n1wi∑j∈Nw(i)wj-1n∑i=1nwi

Now, compare these expressions to Eqs. (1) and (2) for LFP and SFP gaps. The LWFP expression is almost identical to the LFP expression if we replace w with d, and same for the singular version of WFP. But the weighted expressions deal with Nw(i) instead of N(i). To get around that, consider the following: we are only interested in seeds and friends, not the full structure of a network. For each seed i, for each of its friends j such that eij>1, we can split edge (i, j) into eij new edges, and we can attach j to the first edge, and copies of j to the other edges. Now, the neighborhood we are looking at in WFP calculations is N(i). We can still use wi (now equal to di given that each edge weight is 1) in the calculations, and we will still use each friend’s attribute wj. We have thus transformed our LWFP and SWFP equations into something that is algebraically identical to Eqs. (1) and (2). For FP, we showed that the gaps are 0 if all di are the same and positive otherwise. Since algebraically we get our LWFP and SWFP expressions by replacing d with w in the FP equations, we know that the LWFP and SWFP gaps are zero if all wi are the same (i.e. if the graph is “weighted-regular”), and positive otherwise.

Extended Friendship Paradox (EFP)

We were already talking about node attributes in section “Weighted Friendship Paradox (WFP)”. There, the attributes were equal to weighted degrees. Now, we can relax that and say that each attribute is arbitrary and denoted ai. To get the gap formulations, we only need to replace the first-order quantities (that we are averaging) with ai, but we will build the gap formulas from scratch to make things very clear. EFP is equivalent to the Weighted Attribute-based Friendship Paradox (WAFP). (To see how an attribute-based FP without edge weights is defined, see the Supplementary Information.)

The attributes are indexed the same way as degrees and weighted degrees, and all these sequences have the same length, so we can precisely define a (weighted degree)-attribute correlation which will be useful. Note though that if sequence x consists of all the same values, the correlation between x and y (denoted rx,y) is undefined, so we need to look at the case where all weighted degrees are equal and the case where all attributes are equal—meaning the two cases where the (weighted degree)-attribute correlation is undefined—separately. When the correlation between x and y is defined, it is equal to rx,y=∑i=1n(xi-x¯)(yi-y¯)∑i=1n(xi-x¯)2∑i=1n(yi-y¯)2.

List version: LEFP

Formal definition of the LEFP gap

The list second-order attribute of node i is the list of attributes of its friends weighted by edge weight eij for each friend j; in other words, for each friend j, i takes aj and appends it to its own list eij times instead of just once. The length of such a list is ∑j∈N(i)eij, the weighted degree of i.

To get the mean second-order attribute (list version) of the graph as a whole, we take all such lists and take the mean of that; we will express that mean as a fraction. To get the numerator, we sum each list and then sum the sums, and the denominator is the sum of the lengths of all the lists. The LEFP gap is the difference between the mean second-order attribute (list version) and the mean attribute in a graph. That is expressed as:5 gLEFP=∑i=1n∑j∈N(i)eijaj∑i=1n∑j∈N(i)eij-1n∑i=1nai

Let’s change ∑j∈N(i)eij in the denominator to wi:gLEFP=∑i=1n∑j∈N(i)eijaj∑i=1nwi-1n∑i=1nai

In the expression above, nodes indexed i are “seeds” taking stock of their friends’ degrees. We can take a different approach and instead see how many times a friend’s degree is featured in a seed’s list second-order attribute. A friend with weighted degree wj (and attribute aj) is featured in seeds’ calculations wj times (some of these times might be for the same seed). The gap can thus be rewritten as:gLEFP=∑j=1najwj∑i=1nwi-1n∑i=1nai

Changing j to i and finding a common denominator, this is modified to:gLEFP=∑i=1naiwi-1n∑i=1nai∑i=1nwi∑i=1nwi

We will say that LEFP fails if gLEFP is negative and holds otherwise.

gLEFP=0 for “weighted-regular” graphs and for graphs with no attribute variation

First note that the gap is 0 if the weighted degree sequence or the attribute sequence is constant. This is clear from a direct application of Chebyshev’s sum inequality described above: if a1=a2=⋯=an or w1=w2=⋯=wn, then 1n∑i=1naiwi=1n∑i=1nai1n∑i=1nwi and the numerator of gLEFP is 0.

Now we can further assume that both weighted degrees and attributes have variation, meaning that the (weighted degree)-attribute correlation rw,a is defined.

The sign of rw,a determines the sign of gLEFP for other graphs

Note that if we subtract a constant c from each node’s attribute, the gap value doesn’t change, since each element in the second-order list and the first-order list drops by c, and so the difference between the second-order mean and the first-order mean stays the same. Let’s subtract the mean of the attribute sequence from each attribute. Now the attribute sequence mean, which we will denote a¯, is 0, and the gap didn’t change.

Taking a¯=0, our gap formula becomes:gLEFP=1∑i=1nwi∑i=1nwiai

with a positive coefficient 1∑i=1nwi.

The (weighted degree)-attribute correlation rw,a, given a¯=0, is:rw,a(a¯=0)=∑i=1nai(wi-w¯)∑i=1nai2∑i=1n(wi-w¯)2

with a positive denominator.

The sign of the correlation is thus determined by the sign of the numerator:∑i=1nai(wi-w¯)

From here, we get∑i=1naiwi-∑i=1naiw¯=∑i=1naiwi-w¯∑i=1nai=∑i=1naiwi-w¯0=∑i=1nwiai

So, the sign of rw,a is equal to the sign of ∑i=1nwiai. Since gLEFP is ∑i=1nwiai multiplied by a positive number, the sign of rw,a is equal to the sign of gLEFP.

Recall that LEFP fails if gLEFP is negative and holds otherwise. LEFP holds in cases when rw,a is undefined (when the weighted degrees are all the same and/or the attributes are all the same). If rw,a is defined, LEFP fails if rw,a<0 and holds otherwise. Note that the gap being 0 does not make a statement about a graph’s “weighted-regularity” (or regularity like it does in the case of the original FP versions), since the LEFP gap is also 0 when rw,a=0.

LEFP when not considering attributes

If we don’t have arbitrary attributes and want to implement LWFP via LEFP, we may want to replace attributes with degrees in Eq. (5), since degrees are used in FP. That would be incorrect. Instead, we need to replace each attribute ai with the sum of weights of edges that i is part of, or i's weighted degree wi. See section “Weighted Friendship Paradox (WFP)” for details on how WFP is set up. Using regular degrees as first-order values but using edge weights in second-order-value calculations is not LWFP or LFP which do not fail—it is a case of LWAFP with degrees as attributes, and the gap sign is equal to the sign of rw,d. See the Supplementary Information for an example of a graph where this correlation is negative and LWAFP fails.

LEFP failure when considering attributes

When we don’t consider attributes and instead use weighted degrees as first-order values, the correlation rw,a reduces to rw,w and the paradox doesn’t fail. If we do have arbitrary attributes, we can estimate how often the list version of the extended paradox may fail. Imagine you have a graph with a fixed weighted degree sequence w. Take and an arbitrary attribute assignment a. Suppose rw,a is positive. Here, LEFP holds. Now flip the sign of all the attributes. This flips the sign of the correlation and the gap—LEFP fails. If the initial rw,a is negative, the flipped version leads to rw,a being positive. While zero rw,a correlation is possible too, and the opposite of that attribute sequence would also lead to a correlation of zero (and to both gaps being zero meaning the paradox holds), and it’s possible to have constant attribute sequences or weighted degree sequences for which the gap is zero (and so the flipped-attributes gap is zero too), these cases are rare. Thus this thought experiment shows that LEFP, when considering arbitrary attributes, may fail in around 50% cases in theory. When we deal with real-world data, this number may be very different since the attributes may be positively or negatively correlated with weighted degrees.

Singular version: SEFP

Formal definition of the SEFP gap

The easiest way to get the singular second-order attribute of node i is to take the mean of the list second-order attribute of node i, which is a list of node i’s friends attributes where each aj is represented eij times. The length of this list is equal to ∑j∈N(i)eij and its mean is expressed as ∑j∈N(i)eijaj∑j∈N(i)eij. The mean second-order attribute (singular version) of the graph as a whole is the mean of such fractions for all nodes in a graph, expressed as 1n∑i=1n1∑j∈N(i)eij∑j∈N(i)eijaj. The SEFP gap is the difference between the mean second-order attribute (singular version) and the mean attribute in a graph. That is expressed as:6 gSEFP=1n∑i=1n1∑j∈N(i)eij∑j∈N(i)eijaj-1n∑i=1nai

Let’s change ∑j∈N(i)eij to wi:gSEFP=1n∑i=1n1wi∑j∈N(i)eijaj-1n∑i=1nai

In the expression above, index i refers to nodes (seeds) and index j to i’s friends, and we look at the seeds’ calculations of their second-order attributes. But we can also do the opposite and see how each node j’s attribute features in its friends’ second-order values. aj’s coefficient in the second-order mean is equal to 1n times a cumbersome quantity, the weighted sum of j’s friends’ reciprocal weighted degrees:gSEFP=1n∑j=1naj∑k∈N(j)ejkwk-1n∑j=1naj

We call ∑j∈N(i)eijwj, the weighted sum of i’s friends’ reciprocal weighted degrees, γi (gamma). (For an unweighted graph, a corresponding quantity encountered in literature is delta, the sum of i’s friends’ reciprocal degrees, ∑j∈N(i)1dj=δi8. Gamma reduces to delta if all edge weights are 1.) We can now rewrite the previous expression as:gSEFP=1n∑j=1nγjaj-1n∑j=1naj

Let’s reindex j to i for a final formulation:7 gSEFP=1n∑i=1nγiai-1n∑i=1nai

We will say that SEFP fails if gSEFP is negative and holds otherwise.

gSEFP=0 for “weighted-regular” graphs and for graphs with no attribute variation

If all weighted degrees are the same and equal to w, each γi is equal to ∑j∈N(i)eijwj=∑j∈N(i)eijw=1w∑j∈N(i)eij=1wwi=ww=1. Looking at Eq. (7), this makes the gap 0.

If all attributes the same and equal to a, using Eq. (7), we havegSEFP=1n∑i=1nγia-1n∑i=1na=1na∑i=1nγi-n

The sign of the gap is equal to the sign of ∑i=1nγi-n. The sum of gammas ∑i=1nγi is equal to ∑i=1n∑j∈N(i)eijwj. In this sum of sums, the final coefficient of term 1wj is wj, since each of j’s friends k uses 1wj in their calculation of γk (their gamma) ejk times, and the sum of ejk over all such nodes k is wj. Since this argument applies to every j’s reciprocal weighted degree 1wj, the sum of all gammas is equal to ∑j=1nwj1wj=∑j=1n1=n. Thus ∑j=1nγj-n is equal to 0, the sign of the SEFP gap is “none” and the gap itself is 0.

Note also that if a graph is not “weighted-regular” (a case we just looked at), we have variation in gammas. We provide the proof in the Supplementary Information. Once we have established that there is variation in gammas, we can further assume that rγ,a is defined.

The sign of rγ,a determines the sign of gSEFP for other graphs

We saw before that subtracting the mean of the attribute sequence from each attribute makes the new attribute sequence mean 0 and doesn’t change the gap. Taking a¯=0, our gap formula becomes:gSEFP=1n∑i=1nγiai

with a positive coefficient 1n.

The correlation rγ,a, given a¯=0, is:rγ,a(a¯=0)=∑i=1nai(γi-γ¯)∑i=1nai2∑i=1n(γi-γ¯)2

with a positive denominator.

The sign of the correlation is thus determined by the sign of the numerator:∑i=1nai(γi-γ¯)

From here, we get∑i=1naiγi-∑i=1naiγ¯=∑i=1naiγi-γ¯∑i=1nai=∑i=1naiγi-γ¯0=∑i=1nγiai

So, the sign of rγ,a is equal to the sign of ∑i=1nγiai. Since gSEFP is ∑i=1nγiai multiplied by a positive number, the sign of rγ,a is equal to the sign of gSEFP.

Recall that SEFP fails if gSEFP is negative and holds otherwise. SEFP holds in cases when rγ,a is undefined (when the weighted degrees are all the same and/or the attributes are all the same). If rγ,a is defined, SEFP fails if rγ,a<0 and holds otherwise. Note that the gap being 0 does not make a statement about a graph’s “weighted-regularity” (or regularity like it does in the case of the original FP versions), since the SEFP gap is also 0 when when rγ,a=0.

SEFP when not considering attributes

If we don’t have arbitrary attributes and want to implement SWFP via SEFP, we, similarly to the logic in section “LEFP when not considering attributes”, need to use weighted degrees, and not simply degrees, in place of attributes. See the Supplementary Information for an example where SWAFP with degrees as attributes fails, which is equivalent to rγ,d being negative.

SEFP failure when considering attributes

When when we don’t consider attributes, SEFP reduces to SWFP which doesn’t fail according to the logic from section “The gaps are 0 for “weighted-regular” graphs and positive otherwise”. If we do have arbitrary attributes, we can estimate how often the singular version of the extended paradox may fail similar to how we did it for LEFP in section “LEFP failure when considering attributes”. Imagine you have a graph with a fixed weighted degree sequence w and thus a fixed gamma sequence γ. Take an arbitrary attribute assignment a. Suppose rγ,a is positive. Here, SEFP holds. Now flip the sign of all the attributes. This flips the sign of the correlation and the gap—SEFP fails. If the initial rγ,a is negative, the flipped version leads to rγ,a being positive. While zero rγ,a correlation is possible too, and the opposite of that attribute sequence would also lead to a correlation of zero (and to both gaps being zero meaning the paradox holds), and it’s possible to have constant attribute sequences or weighted degree sequences for which the gap is zero (and so the flipped-attributes gap is zero too), these cases are rare. Thus this thought experiment shows that SEFP, when considering arbitrary attributes, may fail in around 50% cases in theory. When we deal with real-world data, this number may be very different since the attributes may be positively or negatively correlated with gammas.

How reductions work

Now that we have defined LEFP and SEFP, we want to be able to apply it to all kinds of graphs, whether or not they have edge weights or arbitrary attributes defined.

It is easiest to use Eqs. (5) and (6) for gap calculations.

Most importantly, if no arbitrary attributes are present, each attribute ai in the equations should be equal to the sum of weights of edges that i is part of, which is equal to wi and not di. (wi will reduce to di for the case of no edge weights).

When no edge weights are defined, simply define them all to be 1.

It’s also interesting to see what happens to the two correlation-based rules when we don’t consider arbitrary attributes or edge weights.

We know that rw,a determines the sign of gLWAFP and rγ,a determines the sign of gSWAFP.

If we don’t consider edge weights, we see that rd,a determines the sign of gLAFP and rδ,a determines the sign of gSAFP. (Delta of i is the sum of the reciprocal degrees of i’s friends, ∑j∈N(i)1dj.)

If we don’t consider arbitrary attributes, we see that rw,w determines the sign of gLWFP and rγ,w determines the sign of gSWFP. Since rw,w=1 every time it’s defined, and since LWFP holds whenever rw,w is not defined (when the graph is “weighted-regular”), we see that LWFP always holds (which we also know from algebra in section “The gaps are 0 for “weighted-regular” graphs and positive otherwise”). Conversely, since we know from that same section that SWFP always holds, we see that rγ,w, when defined, is always positive, which is a non-trivial result.

If we don’t consider edge weights or arbitrary attributes, we see that rd,d determines the sign of gLFP and rδ,d determines the sign of gSFP. Like above, this tells us that LFP always holds and that rδ,d, when defined, is positive.

Because weighted degrees can be defined virtually independently from degrees (via assigning arbitrary weights to edges), there is no direct relationship between rd,a and rw,a, or rδ,a and rγ,a. Similarly, rd,a being positive (gLAFP being positive) doesn’t necessarily imply that rδ,a is positive (gSAFP being positive). The same can be said for the weighted FP counterparts of these phenomena. We did show in a previous paper that rd,δ being 1 would naturally create a sign dependency between rd,a and rδ,a, and in fact they would be equal8. We showed that the graphs for which rd,δ was 1 were difficult to describe in any other way, for example in terms of “looks.” A similar statement can be made for the WAFP versions, with rw,γ=1 implying that rw,a and rγ,a have the same sign and are in fact equal.

Applying the extensions to one small network

It may be helpful to see how things work on a very small example in Fig. 1:Figure 1 This is a weighted undirected graph G on 3 nodes. The weight of each edge, when not 1, is listed on the edge. The nodes are labeled A through C. Each node has a numeric attribute ai associated with it, and it’s listed in blue next to each node.

We can look at all the data presented, or we can ignore edge weights and/or node attributes. We want to apply an extension (LEFP or SEFP) in every case. To keep track of what we are disregarding, we will use the names Friendship Paradox (an extension applied to the graph without weights or attributes), Attribute-based Friendship Paradox (an extension applied to the graph without weights), Weighted Friendship Paradox (an extension applied to the graph without attributes) and Weighted Attribute-based Friendship Paradox (EFP) (an extension applied to the graph as is).

We saw in sections “Friendship Paradox (FP)” and Weighted Friendship Paradox (WFP)” that FP and WFP always hold. When considering attributes, though (whether or not we also consider edge weights), the paradox may fail depending on the signs of the correlations specified in section “Extended Friendship Paradox (EFP)”. To illustrate this, in our example, the four versions that can fail do fail, but this is clearly not always the case.

We only provide the gap sizes (and signs) in this section—for an extended argument, see the Supplementary Information.

gLFP=16, gSFP=13; gLAFP=-14 which follows rd,a being negative at -0.866; gSAFP=-12 which follows rδ,a being negative at -0.866; gLWFP=13, gSWFP=59; gLWAFP=-13 which follows rw,a being negative at -1; gSWAFP=-59 which follows rγ,a being negative at -0.944.

Simulation

Since we are not interested in gap sizes and since the non-attribute-based versions of the paradox do not fail, we are mainly considering attribute-based versions here: WAFP (EFP) where we also look at edge weights, and AFP where we don’t look at edge weights. We are interested in how increasing the expected value of an attribute-based correlation (say, rw,a) affects how often the associated version of the paradox (in this case, LWAFP) fails. While degrees, weighted degrees, deltas and gammas aren’t necessarily highly correlated, raising/lowering rd,a in our construction affects rw,a, rδ,a and rγ,a similarly, so we will focus on changing rd,a since degree is the most intuitive concept out of the four and changing attributes in one way is simpler than in four ways.

This simulation is not meant to be exhaustive, but merely illustrative. For each calculation, we will also confirm that the sign of the correlation we are looking at matches the sign of its associated gap.

We use a Gn,p random graph generator with graph size n=1000 and edge probability p=150 (p=150 was initially selected to get sparser—more computationally efficient—graphs that are still often connected for n=1000, but we later discovered another good reason to settle on this, which we mention below). Because our domain is connected graphs, we discard disconnected graphs produced by Gn,p. (We would also discard regular graphs and graphs that end up being “weighted-regular” once we assign edge weights, but in practice, we found neither disconnected, nor connected regular, nor connected “weighted-regular” graphs and so did not need to discard them.)

We think of an edge weight as the strength of a connection between two nodes. While it’s plausible that if one person has strong ties (edge weight ≫1) with two people, the two people also have a tie stronger than 1 (an extension of the strong triadic closure property11), to keep things simple, we assign weights to existing network edges independently and distribute them uniformly between 1 and 10 (restricting to integers).

We do 1000 runs of the simulation. A run includes creating n=1000 nodes, labelling them 1 through 1000, determining which edges exist, confirming the graph is connected and not regular, determining the weight of each edge, confirming the graph is not “weighted-regular”, and drawing an attribute sequence a of size 1000 from a standard normal distribution with mean 0 and s.d. 1 (N(0,1)). For each condition listed below, we alter that sequence to make rd,a smaller or larger, and calculate the four gaps (gLAFP, gSAFP, gLWAFP, and gSWAFP) and the four associated correlations (rd,a, rδ,a, rw,a, and rγ,a). To summarize things across 1000 cases, for each condition we keep track of the 4 mean correlations and the proportion of cases where each of the paradoxes fails.

Simulation conditions

In condition 0, each of our attributes remains as is (drawn from N(0,1)). The expected degree-attribute correlation is 0 and so we expect LAFP to fail in around 50% of the 1000 cases. (Recall that it’s the LAFP gap sign that is equal to the rd,a sign.)

In positive-numbered conditions j (j∈{1,2,…100}), attribute ai is the sum of the original number drawn from N(0,1) and j100di. As we move towards higher-indexed conditions, the degree-attribute correlation rd,a increases in expectation. We expect LAFP to fail less often.

In negative-numbered conditions j (j∈{-1,-2,…-100}), attribute ai is similarly the sum of the original number drawn from N(0,1) and j100di. Here, as we move towards lower-indexed conditions, rd,a decreases in expectation. We expect LAFP to fail more often.

Making rd,a higher or lower will also affect rδ,a, rw,a, and rγ,a. All four parameters are highly correlated in our construction. rd,δ has mean 0.973 and s.d. 0.0013 across the 1000 networks, rw,γ has mean 0.966 and s.d. 0.0017, and rd,w has mean 0.884 and s.d. 0.006.

(Notably, when using Gn,p, the degree-delta correlation rd,δ depends on the choice of n and p. All things being equal, higher n (bigger graph) raises rd,δ, and all things being equal, higher p (denser graph) raises rd,δ. But raising either makes correlation and gap computations take longer. We have found n=1000 and p=150 to have a good balance of high rd,δ (and high rw,γ) and reasonable computation times).

Simulation results

The first thing to note is that all 1000 networks we generated were connected and not regular or “weighted-regular,” so we didn’t have to discard anything. Secondly, across the 201 conditions, we never had a 0 gap (as a reminder, the gap would be 0 if its associated correlation was precisely 0, if the graph was regular (AFP) or “weighted-regular” (WAFP), or if all the attributes were the same). We also never encountered a scenario where the gap sign was different from the sign of its associated correlation which confirms our theoretical findings.

Overall, our predictions thatas we increase the expected degree-attribute correlation, LAFP, SAFP, LWAFP and SWAFP fail less often

as we decrease the expected degree-attribute correlation, the opposite happens

were correct. See the results in Fig. 2.Figure 2 The proportion of cases in which each paradox fails resembles a step function with j as the argument—that is why in the top panel we restrict j to [-3,3] so the shift is more apparent. Since positive j implies a positive degree-attribute correlation which, in our construction, is tightly linked to other correlations being positive, and correlation needs to be just slightly greater than or equal to 0 for an attribute-based version of the paradox to hold, it makes sense that the gaps become positive and the proportion of failure drops to 0 in a step-like fashion. A contributing factor is that given our construction, the standard deviation of the 1000 correlations for each condition is low (<0.035 and highest at j=0). See the Supplementary Information for a plot of the standard deviation. (Note also that in the top panel, the minute details of the lines’ behavior around 0 are due to randomness which is highest at j=0. Here, the lines seemingly all cross around − 0.5, but that isn’t the case in each run of the simulation. We expect the proportion of failure to be 0.5 at j=0 for each line, but it’s not guaranteed to be precisely that in a simulation).

The correlation spread is highest at j=0 when the attributes are independent of the degrees: the standard deviation is around 0.032 for rd,a, rδ,a, rw,a and rγ,a. It’s interesting to see the relationship between correlation values and gap values for that specific example of j=0 (where attributes are distributed normally), since the correlations (plotted on the x-axis) would both vary and have different signs. See the results of that in Fig. 3 (we plot 100 points of each kind instead of 1000). All 4000 LFP, SFP, LWFP and SWFP gaps are positive. LAFP fails in 503 out of 1000 cases (the gap is negative), SAFP fails in 511, LWAFP fails in 484 and SWAFP fails in 490. None of the gaps are zero. This confirms our logic in sections “LEFP failure when considering attributes” and “SEFP failure when considering attributes” where we concluded that attribute-based versions fail around 50% of the time given random attribute assignment.Figure 3 We created a standard normal attribute sequence for each of the 1000 G1000,150 networks and found rd,a, rδ,a, rw,a and rγ,a, and the LAFP, SAFP, LWAFP and SWAFP gap sizes for each. The LAFP gap signs follow the rd,a signs, the SAFP gap signs follow the rδ,a signs, the LWAFP gap signs follow the rw,a signs, and SWAFP gap signs follow the rγ,a signs. Furthermore, the correlation between the x-axis quantity and the y-axis quantity is 0.9994 for all four pairs (the exact values are slightly different). But the correlation may not be as high for less symmetric cases such as real-world data. While we aren’t interested in gap sizes on their own, it is interesting to see a strong linear relationship between them and their associated correlations in this specific case. Note: for illustration purposes we only plot the results for 100 networks out of 1000.

Data

Our simulation results are very straightforward because our construction is very simple. Real-world data is messier and it’s interesting to see how gap sizes and their associated correlations behave in those cases. Here again, we are only interested in the gap sizes insofar as they relate to correlations and so focus on LAFP, SAFP, LWAFP, and SWAFP, but we'd also like to report that all the LFP, SFP, LWFP, and SWFP gaps we find in the data discussed below are positive.

Facebook100

We have found the Facebook100 dataset useful in the past (see12,13 for details on this data). Each of the 100 networks is a 2005 snapshot of Facebook friendships within a US university. Each network is connected; the average network size is 12083.16; each network has an average degree and the average average degree across the networks is 76.78. Nodes are people. They have attributes such as gender (“female,” “male,” or “not reported”), graduation year (including “not reported”) and other (anonymized) attributes such as high school and major. The average proportion of nodes with no reported gender is 0.0767 across the 100 networks. The average proportion of nodes with no reported year of graduation is 0.137 across the 100 networks. Facebook100 is useful because it gives us a chance to create something like Fig. 3, but for real-world data where the graph size and other parameters change, but the context stays the same.

The only thing Facebook100 does not have is edge weights since Facebook friendships are not weighted. Using the principle of homophily, we can suppose that people with the same graduation year may have stronger ties and assign to edges between two such people a weight of 2. Any other two nodes connected by an edge (including pairs where both nodes have unreported year of graduation) would have an edge of weight 1. Across the 100 networks, the average proportion of edges that get a weight of 2 is 0.457.

We’d also like to create a numeric attribute for each node, since the existing attributes are not reported for all the nodes and/or are categorical in nature. We will use “prop_own,” the proportion of a node’s friends that share its gender value (including “not reported”). Each network would have an average attribute and the average average attribute across the 100 networks is 0.496.

We computed rd,a, rδ,a, rw,a and rγ,a, and the LAFP, SAFP, LWAFP and SWAFP gap sizes for each network and created Fig. 4 which is analogous to Fig. 3. The 400 LFP, SFP, LWFP and SWFP gaps are all positive as well. LAFP fails (the gap is negative) in 60 out of 100 cases, SAFP fails in 66, LWAFP fails in 50 and SWAFP fails in 49. None of the gaps are zero. The failure rate is not quite 50% like we would see with simulated networks and pure random attribute assignment where expected rd,a, rδ,a, rw,a and rγ,a would all be zero. For Facebook100 and our attribute construction, average rd,a=-0.0124, average rδ,a=-0.0148, average rw,a=-0.00269 and average rγ,a=-0.000119. Clearly, if these averages were higher or lower, we’d expect the associated paradox to fail less/more often.Figure 4 Gap sizes and their associated correlations for the Facebook100 data. Like in Fig. 3 that looked at random graphs, the LAFP gap signs follow the rd,a signs, the SAFP gap signs follow the rδ,a signs, the LWAFP gap signs follow the rw,a signs, and SWAFP gap signs follow the rγ,a signs. But here the correlation between the x-axis quantity and the y-axis quantity is lower than 0.9994 (but still very high): 0.986 for rd,a and gLAFP (red circles), 0.983 for rδ,a and gSAFP (blue triangles), 0.990 for rw,a and gLWAFP (green circles), 0.986 for rγ,a and gSWAFP (black triangles).

Figure 4 shows that the gap and its associated correlation are themselves highly correlated even in a real-world example. One should note, though, that in principle the gap-correlation correlation could be much lower than 1 (if the networks in question come from different contexts, etc.). As an example, take the network in Fig. 1. As we saw in section “Applying the extensions to one small network”, the LAFP gap is equal to -14 for this network, and the degree-attribute correlation rd,a is equal to -0.866. Now, alter that network by changing the attribute of node A (aA) from 2 to 3 and by adding node D that has attribute 0 and is attached only to B. (See the Supplementary Information for an image of this network.) The new LAFP gap is equal to mean([0,3,1,0,0,0])-mean([3,0,1,0])=-13 and the new rd,a is equal to -0.471. Now, the vector of gaps for these two networks, (-14,-13), and the vector of rd,a’s for these two networks, (-0.866,-0.471), have correlation -1. What’s important is that within any single network, the attribute-based gap signs are equal to the signs of their associated correlations as we showed in the theory part of the paper (section “Extended Friendship Paradox (EFP)”).

Configuration model

An important way in which a real social network is different from one generated by Gn,p is the presence of homophily/clustering. We can find a “middle ground” between a random network and a Facebook100 network by removing the social structure from the Facebook100 network with a configuration model.

A configuration model takes in a sequence of nodes and a node-indexed degree sequence and creates edges between nodes such that each node has the degree specified in the degree sequence. Using that, we can retain nodes’ degrees but make their friendships more random. Note that the configuration model may generate self-loops and parallel edges. We will remove self-loops and duplicate edges, and then check that the graph is still connected. If it’s not, we will redo the procedure. If it is, we will settle on this graph and create a new degree sequence from it (some degrees may be lower since we may have removed some edges).

We still want the graph to be weighted, and we want the weights to be distributed randomly too (and not based on node similarity like they previously were). For each Facebook100 network, we know the proportion of edges that were of weight 2 (call it p2). For each edge in the configuration model network, we assign it a weight of 2 with probability p2, and a weight of 1 with probability 1-p2.

As for attributes, our original attributes—the proportion of friends that have the same gender value—are based on the social structure of the graph. Rewiring the edges will change that number for each node. Our goal with the configuration model, though, is to see how removing the social structure alone changes the gaps and the correlations, so we will keep each node’s attribute unchanged from the original network to the configuration model.

Once we run the configuration model for every network, we can create plots that compare the original gap sizes/correlation values to the new ones. All such plots are shown in the Supplementary Information. We find that the list gaps and correlations mostly remain very similar to the originals (with the scatter plots being close to the x=y line), but the singular gaps and correlations trend upward (the slope of a best-fit line is greater than 1). In terms of the network topology, that is mirrored in rd,δ and rw,γ being much higher for the configuration model graphs than for the original graphs. Since delta and gamma describe a node’s immediate neighborhood, both rd,δ and rw,γ are measures of local properties in a graph. It makes sense that changing them affects the singular gaps (and their associated correlations) which deal with node-specific second-order values, and doesn’t affect the list gaps (and their associated correlations) which are about network-level second-order values. Why removing social structure from a social-network graph (and why raising n or p for Gn,p) raises rd,δ and rw,γ is beyond the scope of this paper, but we provide these results for completeness and as a precursor for potential future research.

Conclusion

In this paper we showed that even though the Friendship Paradox may initially be a confusing concept, it and its basic generalizations are very tractable mathematically, and allowing for edge weights and arbitrary node attributes can be covered in two extensions—one network-level and one node-level. Additionally, for the attribute-based versions of the paradox, we showed how the gap signs follow simple correlation-based rules. We have also provided simulation and data results that further one’s understanding of the theory behind the 8 versions of the Friendship Paradox.

Supplementary Information

Supplementary Information.

Supplementary Information

The online version contains supplementary material available at 10.1038/s41598-024-63167-9.

Acknowledgements

Thanks to Aleksandr Berdnikov for helpful comments.

Author contributions

A.E. and J.K. wrote the paper and discussed the theoretical findings. A.E. performed computer simulations and analyses.

Data availability

The dataset we have used, Facebook100, is introduced in a paper by Traud et al. and is available from the authors of that work: http://sciencedirect.com/science/article/abs/pii/S0378437111009186.

Competing interests

The authors declare no competing interests.

Publisher's note

Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.
==== Refs
References

1. Feld SL Why your friends have more friends than you do Am. J. Sociol. 1991 96 1464 10.1086/229693
Feld, S. L. Why your friends have more friends than you do. Am. J. Sociol. 96, 1464 (1991).10.1086/229693
2. Hodas, N. O., Kooti, F. & Lerman, K. Friendship paradox redux: Your friends are more interesting than you. In Seventh International AAAI Conference on Weblogs and Social Media (2013).
3. Berenhaut KS Jiang H The friendship paradox for weighted and directed networks Probab. Eng. Inf. Sci. 2019 33 136 10.1017/S0269964818000050
Berenhaut, K. S. & Jiang, H. The friendship paradox for weighted and directed networks. Probab. Eng. Inf. Sci. 33, 136 (2019).10.1017/S0269964818000050
4. Eom Y-H Jo H-H Generalized friendship paradox in complex networks: The case of scientific collaboration Sci. Rep. 2014 4 4063 10.1038/srep04603 24525919
Eom, Y.-H. & Jo, H.-H. Generalized friendship paradox in complex networks: The case of scientific collaboration. Sci. Rep. 4, 4063 (2014).24525919 10.1038/srep04603
5. Ugander, J., Karrer, B., Backstrom, L. & Marlow, C. The anatomy of the facebook social graph. arXiv preprint arXiv:1111.4503 (2011).
6. Momeni N Rabbat M Qualities and inequalities in online social networks through the lens of the generalized friendship paradox PLoS One 2016 11 e0143633 10.1371/journal.pone.0143633 26863225
Momeni, N. & Rabbat, M. Qualities and inequalities in online social networks through the lens of the generalized friendship paradox. PLoS One 11, e0143633 (2016).26863225 10.1371/journal.pone.0143633
7. Cantwell GT Kirkley A Newman M The friendship paradox in real and model networks J. Complex Netw. 2021 9 cnab011 10.1093/comnet/cnab011
Cantwell, G. T., Kirkley, A. & Newman, M. The friendship paradox in real and model networks. J. Complex Netw. 9, cnab011 (2021).10.1093/comnet/cnab011
8. Evtushenko A Kleinberg J Node-based generalized friendship paradox fails Sci. Rep. 2023 13 2074 10.1038/s41598-023-29268-7 36746993
Evtushenko, A. & Kleinberg, J. Node-based generalized friendship paradox fails. Sci. Rep. 13, 2074 (2023).36746993 10.1038/s41598-023-29268-7
9. Hardy GH Littlewood JE Pólya G Pólya G Inequalities 1952 Cambridge University Press
Hardy, G. H. et al. Inequalities (Cambridge University Press, 1952).
10. Kramer JB Cutler J Radcliffe A The multistep friendship paradox Am. Math. Mon. 2016 123 900 10.4169/amer.math.monthly.123.9.900
Kramer, J. B., Cutler, J. & Radcliffe, A. The multistep friendship paradox. Am. Math. Mon. 123, 900 (2016).10.4169/amer.math.monthly.123.9.900
11. Granovetter MS The strength of weak ties Am. J. Sociol. 1973 78 6 1360 10.1086/225469
Granovetter, M. S. The strength of weak ties. Am. J. Sociol. 78(6), 1360 (1973).10.1086/225469
12. Traud AL Mucha PJ Porter MA Social structure of Facebook networks Phys. A Stat. Mech. Appl. 2012 391 4165 10.1016/j.physa.2011.12.021
Traud, A. L., Mucha, P. J. & Porter, M. A. Social structure of Facebook networks. Phys. A Stat. Mech. Appl. 391, 4165 (2012).10.1016/j.physa.2011.12.021
13. Altenburger KM Ugander J Monophily in social networks introduces similarity among friends-of-friends Nat. Hum. Behav. 2018 2 284 10.1038/s41562-018-0321-8 30936539
Altenburger, K. M. & Ugander, J. Monophily in social networks introduces similarity among friends-of-friends. Nat. Hum. Behav. 2, 284 (2018).30936539 10.1038/s41562-018-0321-8
