
==== Front
PLoS One
PLoS One
plos
PLOS ONE
1932-6203
Public Library of Science San Francisco, CA USA

10.1371/journal.pone.0302710
PONE-D-23-19401
Research Article
Biology and Life Sciences
Molecular Biology
Molecular Biology Techniques
Sequencing Techniques
Protein Sequencing
Research and Analysis Methods
Molecular Biology Techniques
Sequencing Techniques
Protein Sequencing
Physical Sciences
Mathematics
Algebra
Abstract Algebra
Biology and life sciences
Biochemistry
Nucleic acids
RNA
RNA sequences
Biology and life sciences
Genetics
DNA
DNA structure
Biology and life sciences
Biochemistry
Nucleic acids
DNA
DNA structure
Biology and life sciences
Molecular biology
Macromolecular structure analysis
DNA structure
Physical Sciences
Mathematics
Algebra
Algebraic Structures
Physical Sciences
Mathematics
Operator Theory
Biology and Life Sciences
Genetics
Biology and Life Sciences
Biochemistry
Proteins
Recombinant Proteins
Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Toward an abstract algebraic formulation of molecular/genetic biology
Category-theoretical representation for genetic coding using extended Petri net
https://orcid.org/0000-0003-0018-2935
Sawamura Jitsuki Conceptualization Methodology Validation Writing – original draft Writing – review & editing 1 *
Morishita Shigeru Methodology Supervision 2
Ishigooka Jun Methodology Supervision 3
1 Nishigahara Hospital, Tokyo, Japan
2 Depression Prevention Medical Center, Inariyama Takeda Hospital, Kyoto, Japan
3 Institute of CNS Pharmacology, Tokyo, Japan
Lin Fucai Editor
Minnan Normal University, CHINA
Competing Interests: The authors have declared that no competing interests exist.

* E-mail: jsawamura246@gmail.com
7 6 2024
2024
19 6 e030271021 6 2023
9 4 2024
© 2024 Sawamura et al
2024
Sawamura et al
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.

Abstract algebraic concepts such as category are considered cornerstones on which logical consistency relies in any sophisticated study of natural phenomena. However, to the best of our knowledge, in molecular/genetic biology, their application is still severely limited because they capture neither the dynamics nor provide a visual form. The Petri net (PN) has often been used to illustrate visually parallel, asynchronous dynamic events in small data systems. A prototypal hybrid model combining both category theory and extended PNs may instead be indispensable for that purpose. This hybrid model incorporates 1) token-like elements of a group, 2) object-like places of a category, 3) square poles (rather than pentagon poles) that enable unique identifications of single-strand DNA sequences from the shape of its polygonal line, 4) creation/annihilation morphisms that generate/erase tokens, 5) Cartesian products ‘Z5×Z2×…’ that enable conversions between DNA and RNA sequences, 6) somatic recombinations (VDJ recombinations) for antibodies displayed concretely in category-theoretic form, 7) ‘identity protein Δ’ translated from a triplet of identity bases ‘EEE’ as an advanced concept from our previous display of the canonical central dogma, 8) illustrations of an incidence-matrix-like matrix A that includes operators as coordinates, and 9) basic topics concerning the canonical central dogma being displayed concretely using concepts of conventional category theory such as ‘adjoint’, ‘adjoint functor’, ‘natural transformation’, ‘Yoneda’s lemma’ and ‘Kan extension’. These ideas provide more advanced tools that expand our previous model concerning nucleic-acid-base sequences. Despite the nascent nature of our methodology, our hybrid model has potential in a variety of applications, illustrated using molecular/genetic sequences, in particular providing a simple dynamic/visual representation. With further improvements, this approach may prove effective in reducing the need for large data-storing systems.

The authors received no specific funding for this work. Data AvailabilityThe data used in this manuscript were built up and prepared for the purpose of elucidating the methodology, and were not collected from actual experiments or real-world sources. They were strictly created within the text to facilitate readers’ comprehension. The data, represented in the form of equations, are exemplified within fictional scenarios and do not have a corresponding minimal data set underlying the results outside of the paper. While there are sections in which figures and methodologies are cited from other papers, this is exclusively confined to the aforementioned context (with proper citation).
Data Availability

The data used in this manuscript were built up and prepared for the purpose of elucidating the methodology, and were not collected from actual experiments or real-world sources. They were strictly created within the text to facilitate readers’ comprehension. The data, represented in the form of equations, are exemplified within fictional scenarios and do not have a corresponding minimal data set underlying the results outside of the paper. While there are sections in which figures and methodologies are cited from other papers, this is exclusively confined to the aforementioned context (with proper citation).
==== Body
pmc§1. Introduction

Because dynamic phenomena in molecular/genetic biology are ordinarily too complex to describe, descriptive models often do not provide sufficient visual imagery. To our knowledge, abstract algebraic concepts including monoid, group, ring, field, variety, and category are crucially important in classifying, integrating, and studying dynamic phenomena or systems in a rational and sophisticated manner. In particular, category theory is considered a cornerstone on which logical consistency arises in studying almost all biological phenomena in a sophisticated manner [1–3]. From that perspective, we suggested previously a basic prototypal model using group theory and related concepts [4–6]. However, the applicability of the category concept remains doggedly limited because the respective states of the category-theoretical model lack a visual and/or dynamic formulation with which users can draw on at any stage. Furthermore, we believe that an axiomatic and tautological form of category theory is not always sufficient to describe complex phenomena exhibited by living creatures—humans, eukaryotes, bacteria, and other genetic-based species. To describe systems involving parallel, asynchronous dynamic events visually, the Petri net (PN) is a mathematical language capable of rendering dynamic models of such phenomena and has often been relied upon for that purpose over the last five decades [7–10]. We envisage that a hybrid model of abstract algebraic and dynamic elements formed from a combination of categories and extended (modified/advanced) PNs (EPNs) may have the potential to broaden the applicability of existing systems especially in a more visual manner [11–13]. The PN is a specialized form/part of category theory, which we discuss later. However, we believe that hybridizing the object `category’ in a heterogeneous way may impose specific limitations on it but may be more advantageous when these limitations align with the characteristics of the specific systems, for example, those in biology. Because of its limited formalism, the hybrid model may be composable from a less-weighted procedure. Recently, in genetic biology, a PN model based on applied category theory was reported by Wu [14, 15] and called the ‘open PN’[16]. We envisage that our model adds in part several meaningful supplemental devices to that concept. Although our methodology is rudimentary, a simple example is presented to help the reader understand its application to molecular/genetic biology, chemistry, physics, and mathematics. In particular, based on our previous work [4–6], we develop models that involve the canonical interpretation of the central dogma for which advanced devices are added in modeling deoxyribonucleic acid (DNA)/ribonucleic acid (RNA) base sequences. Despite the need for further improvements in the future, this rationally exhaustive formalism provides the basis on which the dynamics of the hybrid model can be understood visually via its dynamic changes in state.

§2. Methods

§2–1. Data availability statements

Regarding the availability statement in this paper, the data used in this manuscript were built up and prepared for the purpose of elucidating the methodology, and were not collected from actual experiments or real-world sources. They were strictly created within the text to facilitate readers’ comprehension. The data, represented in the form of equations, are exemplified within fictional scenarios and do not have a corresponding minimal data set underlying the results outside of the paper. While there are sections in which figures and methodologies are cited from other papers, this is exclusively confined to the aforementioned context (see S1 File for a proper citation).

§2–2. Preliminary explanation of categories and PNs

§2-2-1. Postulates of category theory

In general, category theory is a language that is used to express abstract concepts [8, 9]. The category is defined as the combination of source object X, target object Y, and a directed arrow ‘→’. The directed arrow represents ‘a morphism’ that relates X and Y. Additionally, if f, g, and h are specified morphisms, f: X→Y; dom(f) = X, cod(f) = Y, g: Y→Z; dom(g) = Y, cod(g) = Z, and h: Z→W; dom(h) = Z, cod(h) = W, then the target of f is the source of g. Hence, the successive application of the two morphisms f and g is a new morphism, the composition being denoted f;g (= g°f). Similarly, the target of g is the source of h yielding morphism g;h (= h°g). Moreover, the successive application of all three yields composition f;g;h (= h°g°f): X→Y→Z→W, which obeys the law of associativity, ‘(f;g);h=f;(g;h)’(alternatively,‘h◦(g◦f)=(h◦g)◦f’). (1)

The above are the necessary conditions to fulfill the postulates of category theory.

In addition, for each morphism f, there exists morphisms ‘1X’ and ‘1Y’, a morphism 1X: X→X and a morphism 1Y: Y→Y, that satisfy the relationships necessary for the composition of a category, specifically 1X◦f=f=f◦1Y. (2)

If supplemented, and there exists (f) that satisfies ‘f;(f) (= (f)°f) = 1X’ and ‘(f);f (= f°(f)) = 1Y’, (f) is called the inverse of morphism f (denoted by f−1). However, the existence of an inverse for all morphisms is not a prerequisite of category theory.

§2-2-2. Postulates of a classical PN

The PN by contrast is a directed bipartite graph. Invented by Carl Adam Petri [10], it is used as a language or a tool in designing or visualizing a parallel, discrete, asynchronous, distributed and dynamical system. In practice, the classical PN, as well as various types of extended PNs, have been applied to various fields such as the dynamics of molecular biological systems [7−33], genetic activity [34, 35], biological and flexible manufacturing systems [36, 37], multi-valued genetic regulatory networks [38], the algebraic application of Boolean differential calculus [39], programming languages [40], artificial intelligence [41], fuzzy PNs [42, 43], and quantum computation using quantum PNs [44, 45].

§2–3. Illustrations of hybrid models based on category theory and EPN

At this stage, to help the readers’ understanding, we illustrate the extended PN (EPN) using category theory [Fig 1(A)]. From the viewpoint of the standard EPN, the hybrid model that we present in this article may be regarded as one for which the standard EPN is composed using category theory as a material with some options. The main characteristics of our model may be summarized in three points: 1) places correspond to objects, 2) arcs correspond to morphisms, and 3) tokens are defined as those that can act as operators. For simplicity, throughout the article, we mainly consider a ‘state machine’ where any transition has only one input place and one output place [7−45]. However, several parts of our model are not ‘state machines’ because a description of more complex systems is needed. Although, as mentioned above, the PN is a specific form/part of a category, by hybridizing specific parts of the PN and that of the category in a heterogeneous way, we are able to give some rules to those that are lacking a corresponding standard PN: specifically, the compositionality (operationality) between 1) two morphisms, and 2) a token in a place and a morphism in the same place (to be described in detail later).

10.1371/journal.pone.0302710.g001 Fig 1 Illustrations of extended Petri nets (EPNs).

(a). In the realm of formal system modeling, integrating category theory concepts within the framework of PNs presents an intriguing avenue for mathematical abstraction. The fundamental elements of category theory are objects A, B, and C and mappings f: A → B, g: B → C, and h: A → C, denoting morphisms between the objects. This abstract structure has a correspondence in PNs: Places: A (Place representing Object A). B (Place representing Object B). C (Place representing Object C). Transitions: f (Transition representing Arrow f). g (Transition representing Arrow g). h (Transition representing Arrow h). Arcs: Input arc from A to f (Signifying the starting point of Arrow f being Object A). Input arc from B to f (Denoting the endpoint of Arrow f being Object B). Input arc from B to g (Indicating the starting point of Arrow g being Object B). Input arc from C to g (Representing the endpoint of Arrow g being Object C). Input arc from A to h (Symbolizing the starting point of Arrow h being Object A). Input arc from C to h (Marking the endpoint of Arrow h being Object C). This PN representation elegantly captures the essence of category theory constructs, whereby transitions correspond to arrows and places represent distinct objects. The interconnected arcs delineate the relationships between these objects and morphisms, forming a cohesive and visually intuitive model. (b). A necessary relationship for the definition of category is ‘{potential source object pk (place pk)};f(k→l) ⊆ potential target object pl (place pl)’. Hence, provided that ‘D(k)j = [E0|C1A2E3T4||E5E6…]’ is a token that is a potential source object in place pk, then R(l)j is the image of it under morphism f(k→l) (that is, R(l)j = {D(k)j};f(k→l)), ‘R(l)j = [E0|C1A2E3U4||E5E6…] ∈ place pl. The tokens belong to place pl; they do not belong to ‘{place pk};f(k→l)’ as R(l)a = [A0|C1A2E3U4||E5E6…] ∉ {pk};f(k→l)’, and ‘R(l)b = [G0|C1A2E3U4||E5E6…] ∉{pk};f(k→l)’. That is, the initial coordinate of any DNA/RNA sequence can only be E0 because, if E0 were only a symbol, then no partial function for the morphism can occur, and the (potential) objects may satisfy the postulates of category theory, specifically, Eq (4).

§2-3-1. Places of an EPN having characteristics of a monoid/group

In this section, we define essential rules that are referred to in the Methods section.

P: A finite set of places (symbol: ○). Place pk is defined as a substitution of an object of the category corresponding to set Ak. They are the objects of focus in the PN of the model. (Here, k = 1,2,…,m indexes the places; m is their total number.) Each place pk includes elements of Ak; however, the selection of tokens may be arbitrary. The set Ak may form a group or a related object such as monoid, ring, field with a binary operation or other monoidal products (defined on a case by case basis for the model). To keep the discussion simple, we assume the existence of an identity element and optionally, that of inverse elements.

The pre-place pk is connected to a transition t(k→l) by an arc, and the post-place pl is connected from a transition t(k→l) also by an arc. In our model, and in most instances, an arc from a pre-place has no operational meaning, but an arc to a post-place pl has a specific operational meaning in that it denotes ‘a morphism (transition) f(k→l)’. An input place pk includes a token such as a(k)i, and an output place pl includes a token such as a(l)i in place pl after the firing of morphism f(k→l)’ to a token a(k)i, (here l is an integer, l = 1,2,…,n; two situations arise: k = l and k≠l).

Token: A token a(k)i with symbol ● denotes a token in place pk that is an element of an operational set (most often a group) Ak (i; integer, i = 1,2,…) or an accessorized element such as c·a(k)i (c is a constant factor that does not have an operational function).

Place pk includes ‘a(k)i’s or c·a(k)i, and all elements of set Ak (or that of accessorized elements like c·a(k)i) are not always included simultaneously. Additionally, duplicated inclusions of the same elements ‘a(k)i’s (or ‘c·a(k)i’s) in place pk are freely permissible. All tokens ‘a(k)i’s (or ‘c·a(k)i’s) are included independently. An empty set (no token) is denoted by ϕ.

M: A w-th marking of place pk is denoted Mw(pk) (w-th session, w is the session number for marking, w = 1,2,…).

T: A finite set of morphisms f(k→l) is equivalent to transitions t(k→l) (symbol: ‘―|→’). A t(k→l) is defined between places pk and pl. For ‘k = l’, t(k→l) is written tk. A set of arcs (symbol: →) is equivalent to a morphism/transition f(k→l) (k = l or k≠l). Therefore, we substitute arcs (conventionally denoted by F) by a morphism (transition), and transition f(k→l) or t(k→l) is integrated as a complex case of a morphism (transition). Arcs that are fireable/non-fireable are considered.

§2-3-2. Firing rules: For a morphism (transition), there are two types of firing rules labeled I and II

Firing rule I: Firing defined between different places (via a trans-place morphism). A morphism f(k→l) (transition t(k→l)) with ‘k≠l’ is defined between input and output places where an arc from the pre-place pk to the post-place pl is integrated with transition ‘|’ as ‘―|→’. Then, the morphism f(k→l) ordering a token ‘a(k)i’ (or c·a(k)i; in the following description; this case may be omitted for simplicity without loss of generality) (a(k)i∈Ak), denoted by ‘{a(k)i};f(k→l):’ or ‘f(k→l)°a(k)i:’ is fireable when a token a(k)i is included in place pk. We call f(k→l) a ‘trans-place morphism’. Through a firing of a morphism (transition) f(k→l) ordering ‘a(k)i’, token a(k)I is removed from the input place pk, and ai(l)i (= {a(k)i};f(k→l), the images of a(k)i by f(k→l)) (f(k→l)∈Al) produced in the output place pl, determined by the ‘morphism f(k→l): a(k)i→a(l)i. Examples are illustrated in (Fig 2A and 2B). The firing rule for this is stipulated as follows; subject to ‘k≠l’,

Mw+1(pl) = Mw(pl) + {a(k)i};f(k→l): pl∈(output place of the transition) ˄ pl∉(input place of the transition). Pk∈(input place of the transition) ˄ pk∉(output place of the transition),

Mw+1(pk) = Mw(pk)–a(k)i: pk∈(input place of the transition) ˄ pk∉(output place of the transition), and Mw+1(pk)=Mw(pk),Mw+1(pl)=Mw(pl):otherwise, (3)

where ‘−’ (minus) means the removal of tokens, and ‘+’ (plus) the inclusion of tokens. If the token is ‘c·a(k)i’, only an exchange between a(k)i and c·a(k)i enables the formula to be true because of the previous definition for tokens.

10.1371/journal.pone.0302710.g002 Fig 2 An example of a state in the standard Petri net (PN).

(a). A state that exemplifies markings is drawn. All tokens are elements (e.g., a(k)i) of monoid or group Ak (where a(k)i∈Ak) that are defined at place pk (k = 1,2,…m). Different from ordinal object of category, each place does not always contain all elements of Ak. Moreover, duplication of the same elements such as ‘a(k)i, a(k)i, a(k)i’ in the same place pk is permissible. Arcs represent morphisms f(k→l) that fire when there is at least one token ‘a(k)i’ on which morphism ‘f(k→l)’ orders ‘f(k→l):{a(k)i}:’ and is included in input place pk. After firing, an image of a(k)i is outputted in an input place as a token a(l)i (= a(k)i;f(k→l)). We stipulate that any arc (morphism) has only one morphism (there are no multiple morphisms) that acts on one token (this is considered a ‘state machine’ in conventional PN). The index number i of a(k)i (i = 0,1,2,…) is the only optional mark that discriminates tokens. Hence, differently indexed tokens are equivalent; that is, ‘a(k)i = a(k)j = a(k)3’. (b). After a firing f(1→2) with order a(1)2 in place p1, token a(1)2;f(1→2) (= a(2)2) is the output in place p2.

Next, a graph is produced when the compositionality between two morphisms and the existence of an identity morphism (meaning doing nothing) are omitted; therefore, if we regard the sequence of two firings ‘f(k→l) and f(l→m)’ under the condition for which the same token a(k)i● as in the product of ‘a(k)i;f(k→l);f(l→m) = a(m)i’ is ordered, we may regard ‘f(k→m)’ as the result of ‘f(k→m) = f(k→l);f(l→m)’ with two firings of morphisms (transitions) f(k→l) and f(l→m) (here ‘;’ denotes the diagrammatic order of operations; that is, the operation occurs in the order f(k→l), then f(l→m), and then f(m→n)). Furthermore, by ordering the same token a(k)i, the associative law is confirmed as (f(k→l);f(l→m));fm→n) = f(k→l);(f(l→m);fm→n)) because ‘{a(k)i}(f(k→l);f(l→m));fm→n) = {a(k)i}f(k→l);(f(l→m);fm→n)) = a(n)i’ (For later discussions, we label this comment #remark 1). The index ‘i’ of a(k)i, a(m)i or a(n)i… is an optional mark and only means these tokens comprise a sequence of the same/unique flow as in ‘a(k)i→a(m)i→a(n)i→…’, and ‘i’ does not express a specifically ordered element within the group (or monoid) Ak (in place pk), Al (in place pl) or Am (in place pm). Moreover, there exists an identity morphism ‘f(k)0’ (that does nothing even to a token in place pk) and ‘f(l)0’ (that does nothing even to a token in place pl) that satisfies ‘{}; f(k→l);f(l)0 (= f(l)0°f(k→l)) = f(k→l) = {}; f(k)0;f(k→l) (= f(k→l)°f(k)0)’ for any morphism f(k→l) (between places pk and pl). In category theory, provided that Ak is a domain, Al a codomain, and f(k→l) a morphism such as f(k→l): Ak→Al, the image of Ak denoted {Ak};f(k→l) satisfies {Ak};f(k→l)⊆Al.. (4)

We stipulate that Ak is filled with one of the elements a(k)i (i = 0,1,2,…) (∈Ak). However, being different from Ak, place pk is a potential source object that may be filled with any element a(k)i (∈Ak) a multiple of times, a(k)i, a(k)i… or have no a(k)j (∈Ak). Likewise, Al is filled with one of the elements a(l)i (i = 0,1,2,…) (∈Al), and place pl is a potential target object that may be filled with any element a(l)i (Al) many times or not at all.

Firing rule II: Firing defined within the same place (via an inner-place morphism). Suppose that an element f(k)i is one of the morphisms (transitions) defined at place pk (k is the place index, k = 1,2,…, n,…, and n the number of places of interest in the PN), and f(k)i or c·f(k)i belongs to group Ak (f(k)i or c·f(k)i∈group Ak). Additionally, a token a(k)i● is one of the elements such as f(k)i of group Ak or an accessorized element such as ‘c·f(k)i’ (c a constant factor without any operational action). That is, ‘a(k)i = f(k)i’ or ‘a(k)i = c·f(k)i’ holds (f(k)i or c·f(k)i’∈group Ak). There, we stipulate that a morphism f(k)i acts on a token a(k)i● as ‘a(k)i=c·f(k)i’orinthesimplestcase‘a(k)i=f(k)i’with‘c=1’. (5)

Similar to the ordinal binary composition within a group Ak, the binary operation-like composition is ‘{a(k)i};f(k)j (= f(k)j°a(k)i) = f(k)i;f(k)j (= f(k)j°f(k)i)’ (∈group Ak) (where the content as an operation of token ●‘a(k)i’ is f(k)i, which is denoted without ●) or ‘{c·a(k)i};f(k)j (= f(k)j°(c·a(k)i)) = {c·f(k)i};f(k)j (= f(k)j°(c·f(k)i)) = c·{f(k)i;f(k)j} (= c·(f(k)j°f(k)i))’ (∈group Ak) (for which the token ● is ‘c·a(k)’), as in Eq (5). Through firing a morphism (transition) f(k)a ordering a token a(k)i● (= f(k)i or c·f(k)i), a token a(k)i is removed from place pk; after that, a(k)h (= a(k)i;f(k)a, that is, the images of a(k)i by f(k)a (∈Ak)) are produced in the same place pk, in accordance with ‘morphism f(k)a: a(k)i→a(k)h (= f(k)h or c·f(k)h).

[Fig 3(A)]

10.1371/journal.pone.0302710.g003 Fig 3 Illustrations of operations on extended Petri nets (EPNs).

(a). In the present model, we mainly consider cases where a token a(k)i is also an operator such as f(k)j or c·f(k)j (f(k)j being accessorized with constant c). Hence, through a firing of a morphism (transition) f(k)a orders a token a(k)i● (= f(k)j or c·f(k)j), denoted by f(k)a:{a(k)i}, f(k)a:c{a(k)i} may become a composition like f(k)a;f(k)j or f(k)a;c·f(k)j that also has one of each operator (∈Ak). A token a(k)i is at once removed from place pk; subsequently, a(k)h (= a(k)i;f(k)a; that is, the image of a(k)i by f(k)a (∈Ak)) is produced in the same place pk, in accordance with ‘morphism f(k)a. a(k)i→a(k)h (= f(k)h or c’·f(k)h). Note ‘;’ means in diagrammatic order. A simple example is given in the relationship between DNA (D(k)j) and its operator B(k)(0→j) where ‘D(k)j = D0;B(k)(0→j)’; see main text for details. Although f(k)a and a(k)i (= f(k)i or c·f(k)i) are elements belonging to the respective unique set Ak = {f(k)1, f(k)2,…,f(k)i,…} or = {c·f(k)1, c·f(k)2,…, c·f(k)i,…}, a(k)i is accompanied by token ●, and f(k)a is not. This procedure expresses the individual operation on the token. (b). Provided a unique token a(k)i in place pk is ordered for each operation, a binary composition (operation) between morphisms f(k)a and f(k)b (both∈Ak) is performable, {a(k)i}:f(k)a;f(k)b = {a(k)i}:f(k)c when f(k)a;f(k)b = f(k)c holds. In the former intermediate-state procedure, a transition (morphism) of f(k)a and f(k)b does not fire. In the latter intermediate-state procedure, a token a(k)m (= a(k)i;f(k)c) is produced in the same place pk when a(k)m is the product of a(k)i;f(k)c. We regard the entire procedure illustrated in this figure as a one-time firing of morphism f(k)c (= f(k)a;f(k)b) that occurs by ordering a(k)i. Moreover, a sequence of these procedures (the former and latter intermediate-state procedures) defines the binary composition between an arbitrary pair of morphisms that belongs to the same group (or related concepts) Ak and place pk.

We call f(k)a, f(k)I, and f(k)j ‘inner-place morphisms’. Although f(k)a and a(k)i (= f(k)i or c·f(k)i) are elements belonging to the respective unique sets Ak = {f(k)1, f(k)2,…,f(k)i,…} and = {c·f(k)1, c·f(k)2,…, c·f(k)i,…}, a(k)i is accompanied by a token ●, and f(k)a is not. Additionally, between morphisms f(k)a and f(k)b (both∈Ak), a binary composition (operation) is performable, i.e., ‘f(k)a;f(k)b = f(k)c.’ An example is illustrated in a later section.

[Fig 3(B)].

In general, the operation ‘;’ is not commutative and may involve different operations depending on place pk on which it acts. Briefly, the firing rules for f(k)a on a(k)i in place pk are presented as follows:

Mw+1(pk)=Mw(pk) + {a(k)i};f(k)a − a(k)i. Token a(k)i is transformed into {a(k)i};f(k)a (= f(k)a°a(k)i) in the same place pk (substitution of object) at the same instant; otherwise, Mw+1(pk)=Mw(pk). (6)

Furthermore, by ordering the same token a(k)i, the associative law holds, ‘(f(k)a;f(k)b);f(k)d = f(k)a;(f(k)b;f(k)d)’ in place pk if the following relationship ‘{a(k)i};(f(k)a;f(k)b);f(k)d = {a(k)i};f(k)a;(f(k)b;f(k)d) = a(k)h (∈group Ak)’ is postulated. Together with this relation, there exists an identity morphism ‘f(k)0’ that satisfies ‘f(k)a;f(k)0 (= f(k)0°f(k)a) = f(k)a = f(k)0;f(k)a (= f(k)a°f(k)0)’ for any morphism f(k)a within place pk.

Moreover, we regard ‘a(k)i;f(k)a’or‘f(k)a◦a(k)i(=a(k)h)’ (7)

as the ‘image of a(k)i by f(k)a’; otherwise, ‘a(k)i;f(k)a:’ or ‘f(k)a°{a(k)i}:’ means the ‘map of morphism f(k)a on a(k)i’. The former expresses a token, whereas the later displays the map of a morphism (operation).

Likewise, whereas ‘{a(k)i};f(k→l)’ (= f(k→l)°a(k)i) expresses a token a(l)i, ‘{a(k)i};f(k→l):’ (= f(k→l)°a(k)i:) displays a genuine map of a morphism f(k→l) to a(k)i. The symbol ‘i’ of a(k)i and a(l)i means a relationship in which one is the image of the other in certain cases. However, this rule is optional and has no specific purpose. For example, with ‘{a(k)i};f(k)a = a(k)h’ of Eq (7), the relationship between ‘i’ of ‘a(k)i’ and ‘h’ of ‘a(k)h’ is unspecified. Then, associative law-like relationships hold when combining Firing Rules I and II under the condition that a unique ‘a(k)i’ is ordered as an initial token for the mapping of the operations; i.e., among f(k)a, f(k)b, f(k→l), f(l→m),…, {a(k)i};(f(k)a;f(k→l));f(l→m)={a(k)i};f(k}a;(f(k→l);f(l→m))=a(m)r(∈groupAm)’. (8)

In fact, the meaning of the composited map f(k)a;f(k→l) seems unclear because the morphisms f(k)a and f(k→l) are defined at different locations (the former is defined in the same place, whereas the latter is defined for different places), and an integrated morphism f(k)a;f(k→l) seems to accomplish nothing other than a sequence of morphisms of f(k)a and f(k→l). Hence, Eq (8) may better be regarded only for combinations of Firing Rules I and II because they do not break the category postulates, albeit there may be no qualitative meaning.

Similarly, the following relation may arise, {a(k}i};(f(k)a;f(k)b);f(k→m)={a(k}i};f(k)a;(f(k)b;f(k→l))=a(l)s(∈groupAl)’, (9)

(r, s; appropriate non-positive integers that provide adequate elements). There, the composite f(k)a;f(k)b may be integrated as a unique morphism f(k)d satisfying f(k)d = f(k)a;f(k)b for which the monoidal operation at place pk is presumed. However, the combination of Firing Rules I and II f(k)b;f(k→m) implies only a sequence of morphisms and this may only mean that this combination does not break the category postulates. Nonetheless, the commutativity-like law might be assumed for combinations of the two firing rules in the diagrammatically ordered display of morphisms such as for Eqs (8) and (9). Naturally, the inverse morphism may be included in Eq (8) or (9) if the appropriate definition of the inverse morphism is possible.

In this EPN model, we consider instances for which the compositionality among all target objects and source objects that are necessary for the construction of the category completely satisfies Eq (4). Therefore, under this assumption, the combination of Firing Rules I and II seems to be permissible without breaking the category postulates. At this moment, we must confirm that there are two type of morphisms in our model: 1) morphisms for which the Firing Rules I and II are always assumed to act on any single token; and 2) morphisms that act on two tokens (e.g., fInt{, }, fspl{, }, a topic that we shall return to later) for which the group or monoid postulates are not always satisfied.

In general, suppose that Ck (k = 1,2,…,m) is an object of Category C, and object Ck is unique; then C is termed a ‘monoid’. In particular, for Firing Rule II, a pair of fireable morphisms f(k)a and f(k)b (a morphism is fireable if at least one token, say a(k)i, for which index number ‘k’ is the same as that included in place pk) is viewed as a composition of two morphisms that are monoidal operations. If any morphism has an inverse, the associated object becomes a group. In our model, the individual ‘place pk’ appears as a substitution of the object in the category to describe an individually specific state (marking) of an EPN. For simplicity, we assume instances of places, in which inverse morphisms f(k→l)−1 exist with no regard to whether ‘k≠l’ holds.

§2-3-3. Marking of a PN as an optional display

As an optional display, the marking of a PN at a certain moment (at session w, w = 0,1,2…) may be written as a direct sum of certain places, Sw={a(1)2,a(1)3,…}p1⊕{…,a(1)3,…}p2⊕{ϕ}p3⊕…⊕{…,a(k)i,a(k)j,…}pk⊕…⊕{a(n)2,a(n)5,…}pm. (10)

The drawback that “PNs are monoids” has been reported by Meseguer et al. [46], although in their report, the tokens are ordinals and there is no difference between the respective tokens.

Additionally, in our model, the duplication and absence of tokens (elements) are permissible as {a(k)2, a(k)2, a(k)5, …} in place pk. There may also be instances in which no element is included in place pk; they are displayed as {ϕ} in any place pk. To be precise, ϕ is not a token; however, there may be instances for which ϕ is written as if it was a token, ‘{ϕ};f(ϕ→k)=a(k)0’(inplacepk), (11)

which we describe below.

Next, we turn our attention to places that are themselves m-tuples (m a fixed positive integer) and are sufficient to describe and illustrate an EPN model at a certain stage. The number of places (m) may be finite; nonetheless, occasions may arise needing ∞-tuple places for compositions of the model. With a broadened formalism, the integration of both may be possible, and the following relaxed rules may be effective for a marking Sw. Suppose that Sw is accompanied by at least a very large number of places after the m-th place pm, where no token is included (meaning that place pk includes ϕ for ‘k ≥ m+1’); for this scenario, there may exist a multiplicity of settings for the position of symbol ‘||’ because the determination does not require a unique number ‘m’ that indicates place pm (empty places like {ϕ} may be allowed before place pm+1). That is, Sw={a(1)2,a(1)3,…}p1⊕{…,a(1)3,…}p2⊕{ϕ}p3⊕…⊕{…,a(k)i,a(k)j,…}pk⊕…⊕{a(n)2,a(n)5,…}pm||⊕{ϕ}pm+1⊕{ϕ}pm+2⊕…. (12)

Note that symbol ‘||’ is an optional marking signifying that there are no tokens in places to the right of ‘||’. For, if an inclusion of a(m+2)i occurs in place pm+2, the position of ‘||’ must be moved to that between places (m+2)-th and (m+3)-th, meaning there are no tokens in places to the right of ‘||’. Up to this point, we assumed that a marking Sw means the latter type in Eq (12) without loss of generality. Its omission may also be possible because if there is no interaction between the focused/recognized places {ϕ}p, then there may be no contradiction within the model. We envisage that with this definition, the EPN formalism may gain from a more general description of a marking so that a certain infinite sequence of markings Sw may be included in a unique set S as an element; if not, that means that a set S may include any sort of markings Sw’, Sw”, Sw”‘ (having different definitions of groups Ak at the associated place) all over the world. The set S may be expressed as S={Sw|Sw∈∪k=1∞⊕{}pk}. (13)

Although an infinite set of markings Sw may belong to set S, there is a limit for the present EPN model; the compositionality for objects, for which individual tokens can transform smoothly from one place pk to another place pl (k≠l or k = l), needs some rules for the definition of the respective group (or related product with inverse) Ak at place pk. For example, we consider the following scenario. Let S1 and S2 have finite places,

S1 = {a(1)2, a(1)3}p1⊕{a(2)3}p2⊕{ϕ}p3,

S2 = {a(1)6}p1⊕{a(2)4}p2⊕{a(3)5}p3⊕…⊕{a(10)7}p10⊕{a(11)2}p11. The marking S1 and S2 are not regarded as belonging to the same set S that has an element with an m-tuple of markings. However, if we consider the above adjustment as in the following, S1={a(1)2,a(1)3}p1⊕{a(2)3}p2⊕{ϕ}p3⊕…⊕{ϕ}p10⊕{ϕ}p11||⊕{ϕ}p12⊕{ϕ}p13⊕…,S2={a(1)6}p1⊕{a(2)4}p2⊕{a(3)5}p3⊕…⊕{a(10)7}p10⊕{a(11)2}p11||⊕{ϕ}p12⊕{ϕ}p13⊕…., (14)

the latter expressions of S1 and S2 may belong to the set S given in Eq (13) with ‘m = 11 (or m≥11)’ given in Eq (12).

For an identity marking, any marking S0 can be considered such as S0={ϕ}p1⊕{ϕ}p2⊕…⊕{ϕ}pk⊕…⊕{ϕ}pm||⊕{ϕ}pm+1⊕{ϕ}pm+2⊕…=f0 (15)

(an identity marking is equivalent to an identity morphism that performs nothing on any token).

We assume that an identity morphism f0 can be used in any operation, marking where there is no change. Conversely, it is possible that an infinite number of firings of a morphism f0 may occur any time between any two places. In this regard, we focus on instances where the number of firings of morphism (transition) f0 is recognized.

The following relation can be confirmed straightforwardly, {S!={a(1)0}p1⊕{a(2)0}p2⊕…⊕{a(k)0}pk⊕…⊕{a(n)0}pm‖⊕{ϕ}pm+1⊕{ϕ}pm+2⊕, (16)

≠S0(andf0). (17)

In other words, S0 in Eq (15) is the combination of an initial object (…{ϕ}pk⊕…) of a category Ak, defined at each place pk by viewing the group (or monoid) Ak as category Ak. In contrast, S! in Eq (16) is the combination of the terminal object (…{a(k)0}pk⊕…) of a category Ak, defined at each place pk by viewing the group (or monoid) Ak as a category Ak. S! ≠S0 (= f0) as given by Eq (17) means the zero object where the initial object and the terminal object are equivalent (that is, S! = S0) does not exist in our model except for specific cases.

Hence, together, if two elements ‘a(k)r and a(k)s (∈Ak)’ are further included in place pk in the above marking Sw, we stipulate that the result (the inclusion of tokens at place pk) by ‘S1 = a(k)r (+) a(k)s’ to Sw is expressible as Sw⊕S1 = {a(1)2, a(1)3,…}p1⊕{…, a(1)3,…}p2⊕{ϕ}p3⊕…⊕{a(k)r, a(k)s,…,a(k)i, a(k)j,…}pk⊕…⊕{a(n)2, a(n)5,…}pn⊕…, where Sw or S1 is a marking that disregards the order of the places. However, this operation of inclusion may have an operational meaning as a monoidal addition; an arbitrary marking Sw can be interpreted as the result of S0⊕S(0→w)=Sw. (18)

S0 is then an identity operation of the monoid and therefore an identity morphism f0. Meseguer et al. [46] reported that the PNs are monoids for which a monoidal operation is a simplistic inclusion of tokens. In addition, a zero transition (an identity transition) was also introduced.

Herein, we discriminate between the meanings of the monoidal additions. In the previous description, there are two types of monoidal addition for the present EPN model: type 1) the composition of morphisms such as ‘f(k→l);f(l→m) = f(k→m)’ where the monoidal addition is denoted by ‘;’, and type 2) the inclusion/integration of tokens in the same place pk (k = 1,2,…) such as ‘…⊕{…,a(k)i, a(k)j,…}pk⊕…’. We believe types 1) and 2) are also effective in the present EPN model. In this regard, from the viewpoint of abstract algebra, type 2) is trivial whereas type 1) is more interesting and has more potential for development in future studies because considerable topics of category theory are considered applicable in the form required of type 1). However, details are unclear at this stage.

As for the potential automatic treatments or records of changes in markings for an EPN, we express a sequence of firings as an ordered product (a diagrammatic order of morphisms) such as ‘[M1|{a(k)i};f(k)a>f(k→l)>f(l→m)…> = Mw’; here, the initial marking is M1, and the firing of f(k)a … ordering a(k)i (in place pk) occurs and produces a(k)j (in place pk). After that, a firing of f(k→l) ordering a(k)j occurs and produces a(l)r (in place pl). Then, similarly, a firing of f(l→m) ordering a(l)r occurs and gives a(m)s (in place pm). In summary, the token a(k)i in place pk of M1 is sent to a(m)s in place pm of Mw.

§2–4. Annihilation/Creation morphism

To broaden the applicability of the model, we introduce an optional rule that has unique characteristics—annihilation and creation of elements; the symbol ϕ is adopted for this concept.

§2-4-1. Annihilation morphism (transition)

We define the ‘annihilation morphism (transition) f(k→ϕ)’ (also denoted by ‘{a(k)0}; f(k→ϕ):’or ‘f(k→ϕ)°{a(k)0}:’ to mean the operation f(k→ϕ) ordering ‘a(k)0’) to be fireable when at least an explicit identity element a(k)0 of set Ak is included in place pk. With regard to being explicit or implicit, an explicit identity is an ordinal identity a(k)0 of a set (e.g., monoid, group) Ak. In contrast, we regard an implicit identity as doing nothing or being empty ϕ; in category theory, a(k)0 is an element of a terminal object, and ϕ (the empty category) is a first object (however, the empty set ϕ itself has no morphism). If we draw an arrow f(0→ϕ) from the initial object to the terminal object or an arrow f(ϕ→0) (= f(0→ϕ)−1; the inverse arrow of f(0→ϕ)), there is a uniqueness between the initial object to the terminal object. In addition, both objects have uniqueness with respect to any arbitrary object. Thus, we establish a unique relationship between a(k)0 and ϕ as ‘a(k)0 ↔ ϕ’ via an annihilation/creation morphism.

An identity token a(k)0 is needed in the appropriate place pk (there may be multiple identity tokens in the same place pk) and similarly a terminal object in place pk. However, we shall not use this concept for the moment. Instead, the initial place pϕ, which includes ϕ (uncountable), is assumed to exist somewhere uniquely in all EPNs because the unique ϕ has no index such as ‘k’ of a(k)0. Moreover, ϕ may be found in any arbitrary place pk an infinite number of times. Therefore, we may perform the following conversion ‘a(k)0 ↔ ϕ’ freely in place pk via the following annihilation/creation morphisms.

After the firing {a(k)0};f(k→ϕ) (= f(k→ϕ)°a(k)0), meaning the image of {}; f(k→ϕ) (= f(k→ϕ)°{}) ordering a(k)0, an explicit token a(k)0 is removed from the input place pk, and ϕ (= {a(k)0}; f(k→ϕ) = f(k→ϕ)°a(k)0) is produced in the output place pϕ.

At this moment, we stipulate that an annihilation morphism f(k→ϕ) is removed from any arbitrary place pk to a unique place pϕ with a one-tuple arc, for which the following annihilation of an explicit identity token a(k)0 is deleted, specifically, morphism f(k→ϕ): a(k)0→ϕ. Alternatively, {a(k)0}; f(k→ϕ) (= f(k→ϕ)°{a(k)0}) = ϕ (in place pϕ). In fact, no explicit token is produced in place pϕ because the emergence of ϕ means no token, and this procedure simply means the change ‘a(k)0→ϕ’ or the mere deletion of a(k)0 in place pk. That is, in place pϕ, it is always necessary to express the above annihilation procedure because it suffices to consider that the input and output places of the annihilation morphism f(k→ϕ) are defined at the same place pk.

In considering an operational meaning for the morphism f(k→ϕ) to marking S1 expressed as a direct sum, the following change is possible; for place pk of marking S1, ‘f(k→ϕ):{−a(k)0}pk+{+ϕ}pϕ’ acts on marking ‘S1 = {a(k)0}pk+{ϕ}pϕ’ giving ‘S1;f(k→ϕ)(=f(k→ϕ)◦S1)={a(k)0−a(k)0}pk+{ϕ+ϕ}pϕ={ϕ}pk+{ϕ}pϕ’. (19)

Note that the meaning of ‘°’ between ‘{}; f (to a token such as a(k)i) and {}; f (to a marking such as S1) is slightly different depending on the context (as, for example, in using the composite of the ordinal morphism f(k→l), morphism f(k)a or a combination of multiple morphisms on marking S1 as in Eq (19)). In Eq (19), ‘°’ expresses the multiple effects of f(k→ϕ), which means a change between two pre-/post-firings of markings of an annihilation morphism.

Together with this, in Eq (19), we stipulate that whereas a(k)0 is an explicit identity of set Ak, ϕ is an implicit identity signifying that place pk is empty. Naturally, ϕ may be regarded as belonging to any group Ak (k = 1,2,…) implicitly.

§2-4-2. Creation morphism (transition)

Similarly, we introduce the ‘creation morphism (transition) f(ϕ→k)’ (also denoted by ‘{ϕ}; f(ϕ→k): or f(ϕ→k)°{ϕ}:’ meaning the operation f(ϕ→k) ordering ‘ϕ’) that is fireable when ϕ is included in place pk (in this regard, this means any f(ϕ→k) is freely fireable at any time).

After the firing of a morphism ‘{ϕ}; f(ϕ→k) (i.e., the image of {}; f(ϕ→k) (= f(ϕ→k)°{}) ordering ϕ, is denoted by {ϕ}; f(ϕ→k) or the image of f(ϕ→k)°{ϕ}), an implicit token ϕ (empty) is removed from place pϕ and an explicit a(k)0 is produced in place pk.

At this moment, we stipulate that a creation morphism f(ϕ→k) is affiliated at all places with a one-tuple by an arc from a unique place pϕ to any arbitrary place pk; that is, morphism f(ϕ→k): ϕ→a(k)0 or alternatively, {ϕ}; f(ϕ→k) (= f(ϕ→k)°{ϕ}) = a(k)0.

[Fig 4(A)]

10.1371/journal.pone.0302710.g004 Fig 4 Initial and terminal objects, and two types of phasor diagrams.

(a). For places p1, p2,..,pk,…,pm, there may exist ‘terminal objects’ in each place where the individual terminal object includes identity elements such as ‘a(1)0 for place p1’ and ‘a(2)0 for place p2’. Moreover, there exists an initial object (initial place) pϕ that includes an empty token, which is denoted by ϕ. If an identity token a(k)0 is operated on by morphism f(k→ϕ), a(k)0 is deleted from place pk and an empty token is generated in place pϕ (Note, a(k)0 is annihilated from place pk). Conversely, morphism f(ϕ→k) acts on ϕ creating a(k)0 in place pk in accordance with {ϕ};f(ϕ→k) = a(k)0. There is a uniqueness between ‘f(ϕ→k) and f(k→ϕ)’ whereby only a unique morphism is definable between a terminal object and an initial object. In this way, the annihilation/creation morphism acts as an eraser/generator for a token. (b). In the bottom left panel (reproduced from Fig 5 of [Ref.6]), the five bases ‘E, C, A, T/U, G’ are represented on a phasor diagram (unit circle in the Gaussian plane) as five equi-spaced unit-modular phasors with inclusive angle ‘2π/5’. The general association of each base with a phasor is ‘Xm ↔ Exp(m·ω·i)’ (‘i’ denotes the ‘imaginary unit’, ω = 2π/5 (rad), and m = {0, 1, 2, 3, 4, 5}). To enhance the usability of this representation, we map the phasor diagram onto a square in the Cartesian plane (right panel) under the bijection E(1,0) ↔ E (= Exp(0)), C (1,1) ↔ C (= Exp(ω·i)), A (−1,1) ↔ A (= Exp(2·ω·i)), T/U (−1,−1) ↔ T/U (= Exp(3·ω·i)), G(1,−1) ↔ G (= Exp(4·ω·i)) between two diagrams. The position of ‘E0’ should always be placed at the midpoint of the right side of the square.

In fact, no explicit token would be removed in place pϕ because a deletion of ϕ means no change for a token, and this procedure simply means the change ‘ϕ→a(k)0’ or the insertion of a(k)0 in place pk. In addition, in place pϕ, it is unnecessary to apply the above creation procedure because it suffices that the input and output places of a creation morphism f(ϕ→k) are defined at the same place pk.

By considering an operational meaning of a morphism f(ϕ→k) to marking S2, the following change is describable for place pk of marking S2, ‘f(k→ϕ):{+a(k)0}pk+{−ϕ}pϕ’ that act on marking ‘S2 = {ϕ}pk+{ϕ}pϕ’ as ‘S2;f(ϕ→k)(=f(ϕ→k)◦S2)={ϕ+a(k)0}pk+{ϕ−ϕ}pϕ={a(k)0}pk+{ϕ}pϕ’. (20)

Here, f(ϕ→k) means the change between the pre-/post-firing of two markings of a creation morphism.

With the use of the annihilation/creation morphism, the interchange ‘a(k)0↔ϕ’, (21)

which implies reducing/increasing the number of tokens is performable almost freely.

A small novelty brought about by our idea is that an annihilation/creation morphism could be used as an eraser/generator of tokens; we demonstrate the idea below.

Firing rule: Firing defined between place pk and place pϕ (via an annihilation morphism f(k→ϕ)). Suppose that the number of an identity token a(k)0 in place pk (k = 1,2,..) or pϕ is given as Nw({a(k)0}pk) (w-th session, w = 1,2,…) or Nw({a(k)0}pϕ), respectively.

Transition (morphism) f(k→ϕ) is fireable ⇔ Nw({a(k)0}pk) ≥1;

Nw+1({a(k)0}pk) = Nw({a(k)0}pk) − 1: pk (input place of the annihilation morphism f(k→ϕ)) ˄ pϕ (output place of the annihilation morphism f(k→ϕ)).

Nw+1({a(k)0}pϕ) = Nw({a(k)0}pϕ): pϕ (output place of the annihilation morphism f(k→ϕ)) ˄ pk (input place of the annihilation morphism f(k→ϕ)), i.e., N({a(k)0}pϕ) = N′({a(k)0}pϕ) = 0. In addition,

Nw+1({a(k)0}pk) = Nw({a(k)0}pk), Nw+1({a(k)0}pϕ) = Nw({a(k)0}pϕ): otherwise.

Firing rule: Firing defined between place pk and place pϕ (via a creation morphism f(ϕ→k)). Transition (morphism) f(ϕ→k) is always fireable with

Nw+1({a(k)0}pk) = Nw({a(k)0}pk) + 1: pk(output place of the creation morphism f(ϕ→k)) ˄ pϕ (input place of the creation morphism f(ϕ→k)) and

Nw+1({a(k)0}pϕ) = Nw({a(k)0}pϕ): pϕ(input place of the creation morphism f(ϕ→k)) ˄ pk (output place of the creation morphism f(ϕ→k)); i.e., N({a(k)0}pϕ) = N′({a(k)0}pϕ) = 0. In addition

Nw+1({a(k)0}pk) = Nw({a(k)0}pk), Nw+1({a(k)0}pϕ) = Nw({a(k)0}pϕ): otherwise.

The following relationships are straightforward to verify:

N′({a(k)0}pall) = N({a(k)0}pall)–na + nc, (N({a(k)0}pall): the number of the identity tokens in all places p1, p2, p3,…, pm; na: the number of the firing of the annihilation morphism, nc: the number of the firing of the creation morphism) and

M′(pall) = M(pall)–na + nc, (M(pall): the number of tokens in all places p1, p2, p3,…, pm).

As seen above, the state of markings of an EPN may be describable in various forms as given for example in Eqs (3), (6), (11)–(14), and (18). In the present model, we take the common exhaustive approach that without loss of generality there exists a morphism f(k→l) between any arbitrary pair of places that is potentially fireable, and for a morphism f(k→l) that is inadequate (non-composable), it suffices that we consider the morphism (transition) f(k→l) as being permanently non-fireable. In §3, to aid the reader’s understanding, the specific use of the annihilation and creation morphisms is explained more explicitly.

§3. An example of composition in the DNA model

§3–1. A simplistic model to integrate/split tokens of DNA sequences

First, for integrating/splitting tokens, the following manipulation is considered provided that the two tokens

R(k1)a● = [a(k1)1|a(k1)2|a(k1)3|…|a(k1)i|…|a(k1)(Na−1)|a(k1)Na|| r(k1)0 (Na+1)|r(k1)0 (Na+2)|…] (in place pk1) = [{R(k1)a}||r(k1)0 (Na+1)|r(k1)0 (Na+2)|…] (in place pk1) and

R(k2)b● = [b(k2)1|b(k2)2|b(k2)3|…|b(k2)μ|…|b(k2)(Nb−1)|b(k2)Nb|| r(k2)0 Nb+1|r(k2)0 Nb+2|…] (in place pk2) = [{R(k2)b}||r(k2)0 Nb+1|r(k2)0 Nb+2|……] (in place pk2)

are included independently; here, Na and Nb are the least numbers from where there are no coordinates other than the identity coordinates such as r(k)0; the display of operations determined for each coordinate is omitted. In general, the integrated (combined) state of tokens A● and B● is denoted fInt{A,B}={A|B}={A}∪{B}={A}++{B}=[{A|B}||r(k)0r(k)0…]=[A|B||r(k)0r(k)0…]=[C||r(k)0r(k)0…](inplacepk3), (22)

and displayed as another token C● (‘++’ means the gluing/combining of two neighboring tokens, A and B, with the non-commutative order of these tokens noted in the map fInt{, }. Additionally, the use of ‘||r(k)0r(k)0…]’ needs delicate treatment). Note that, in the above description, the display of coordinates of tokens is essentially based on our previous article [6].

Hence, the integrated state of R(k1)a● and R(k2)b●, denoted by R(k3)c● is displayed as

R(k3)c● = fInt{R(k1)a, R(k2)b} = {R(k1)a}∪{R(k2)b}

= {R(k1)a}++{R(k2)b} = {R(k3)a|R(k3)b}● (in place pk3)’.

[{R(k3)a|R(k3)b}||r(k3)0 Na+Nb+1|r(k3)0 Na+Nb+2|……]● (in place pk3)

=[a(k3)1|a(k3)2|a(k3)3|…|a(k3)i|…|a(k3)(Na−1)|a(k3)Na||b(k3)Na+1|b(k3)Na+2|b(k3)Na+3|…|b(k3)Na+μ|…|b(k3)(Na+Nb−1)|b(k3)(Na+Nb)||r(k3)0Na+Nb+1|r(k3)0Na+Nb+2|…]●(inplacepk3) (23)

[see Fig 5(A)]. In this example, token R(k3)c● is included in a different place pk3.

10.1371/journal.pone.0302710.g005 Fig 5 Illustrations of integration using two tokens.

(a). Provided that token ‘● R(k1)a = [a(k1)1|a(k1)2|a(k1)3||r(k1)0r(k1)0 …] = [{R(k1)a}||r(k1)0r(k1)0 …]’ is included in place pk1, and a token ‘●R(k2)b = [b(k2)1|b(k2)2||r(k2)0 r(k2)0 …] = [{R(k2)b}||r(k2)0r(k2)0 …]’ is also in place pk2, by a firing of morphism fInt{, } (= {|}; fInt), an integrated state‘● R(k3)c’ is produced in place pk3; i.e., R(k3)c = fInt{R(k1)a, R(k2)b} = {R(k1)a, R(k2)b} = {R(k1)a}∪{R(k2)b} = {R(k1)a}++{R(k2)b} = {R(k1)a|R(k2)b} = [{R(k3)a|R(k3)b}||r(k3)0 r(k3)0 |……] (in place pk3). The inverse procedure is also illustrated. A firing of fspl{, } (= {//}) acting on token ●R(k3)c (in place pk3), a splitting occurs of R(k3)c into two tokens R(k1)a (in place pk1) and R(k2)b (in place pk2), yielding ‘fspl{R(k1)a, R(k2)b} = ‘{[R(k1)a]//[R(k2)b]} = {R(k1)a} ((+)) {R(k2)b} (R(k1)a in place pk1, R(k2)b in place pk2)’. (b). A simple case of assuming ‘place pk = place pk” is illustrated. After the firing of morphism fInt{A, B} (= {A|B}), which performs an integration of A● and B●, the integrated state ‘●R(k3)c’ is produced in place pk3 as follows: R(k)c (in place pk) = fInt{R(k)a, R(k)b} = {R(k)a, R(k)b} = {R(k)a}∪{R(k)b} = {R(k)a}++{R(k)b} = {R(k)a|R(k)b} (both, in place pk). = [{R(k)a|R(k)b}||r(k3)0 r(k3)0 |……] = [a(k)1|a(k)2|a(k)3|b(k)1|b(k)2||r(k)0 r(k)0…] (in place pk).

Conversely, the splitting the state is denoted by

‘fspl{A, B} = {A//B} = {A}● (= [A||r(k)0r(k)0…]● (in place pk1)) ((+)) {B}● (= [B||r(k)0r(k)0…] ●(inplacepk2))’,where‘(())’meansthatrespectivetokensareincludedindifferentplacespk1andpk2). (24)

In practice, for a token R(k3)c● (= {R(k1)a|R(k2)b}●), the following is true;

fspl{R(k1)a, R(k2)b}● = {R(k1)a//R(k2)b} = {R(k1)a}● ((+)) {R(k2)b}● (where R(k1)a is in place pk1, R(k2)b is in place pk2).

In detail,

‘R(k1)a ● = [{R(k1)a}||r(k1)0 Na+1|r(k1)0 Na+2|……] = [a(k1)1|a(k1)2|a(k1)3|…|a(k1)i|…|a(k1)Na−1|a(k1)Na

|| r(k1)0 Na+1|r(k1)0 Na+2|…] (in place pk1)’, and ‘R(k2)b●=[{R(k2)b}||r(k2)0Nb+1|r(k2)0Nb+2|……]=[b(k2)1|b(k2)2|b(k2)3|…|b(k2)μ|…|b(k2)Nb−1|b(k2)Nb||r(k2)0Nb+1|r(k2)0Nb+2|…](inplacepk2)’ (25)

[see Fig 5(A)].

[Fig 5(A)] displays general cases, but here we assume conditioned cases for which places pk1 and pk2 are the same as place pk (= pk1 = pk2 = pk3) to simplify the examples.

For tokens R(k)a● and R(k)b● (both, in place pk), the following relation can be verified; R(k)c●(inplacepk)=fInt{R(k)a,R(k)b}={R(k)a}∪{R(k)b}={R(k)a}++{R(k)b}={R(k)a|R(k)b}●(inplacepk), (26)

[{R(k)a|R(k)b}||r(k)0Na+Nb+1|r(k)0Na+Nb+2|…]●(inplacepk) (27)

= [a(k)1|a(k)2|a(k)3|…|a(k)i|…|a(k)Na−1|a(k)Na|b(k)Na+1|b(k)Na+2|b(k)Na+3|…|b(k)Na+i|…|b(k)Na+Nb−1|b(k)Na+Nb||r(k)0Na+Nb+1|r(k)0Na+Nb+2|…]●(inplacepk), (28)

[Fig 5(B)] ={A}●((+)){B}●(both,inplacepk)={A}●(+){B}●(both,inplacepk). (29)

For this example, the following is also confirmed; for token R(k)c● (= {R(k)a|R(k)b}●), fspl{R(k)a,R(k)b}●={R(k)a//R(k)b}={R(k)a}●((+)){R(k)b}●(both,inplacepk)={R(k)a}●(+){R(k)b}●(both,inplacepk). (30)

In detail, ‘R(k)a●=[{R(k)a}||r(k)0Na+1|r(k)0Na+2|……]=[a(k)1|a(k)2|a(k)3|…|a(k)i|…|a(k)Na−1|a(k)Na||r(k)0Na+1|r(k)0Na+2|…](inplacepk)’, (31)

and ‘R(k)b●=[{R(k)b}||r(k)0Nb+1|r(k)0Nb+2|……]=[b(k)1|b(k)2|b(k)3|…|b(k)μ|…|b(k)Nb−1|b(k)Nb||r(k)0Nb+1|r(k)0Nb+2|…](inplacepk)’. (32)

We next consider rules for which the tokens are single-stranded sequences of DNA denoted by D(k)j● and of RNA denoted by R(k’)j● (here, the indices mean the j-th session in place pk’). They are associated with biological products with a mature messenger RNA produced from DNA. Each place is based on the sets composed of D(k)j, R(k’)j, and related products. The morphism f(k→l) has conditions pertaining to the enzyme and circumstances that act on D(k)j and consequently change D(k)j into another similar token D(k)l at the same or a different place. The essential stipulations are almost equivalent to the rules of §3.

In a previous article, we suggested the DNA wallpaper pattern for which the base units are placed in a cruciform pattern (Fig 1 of [Ref. 6]; see S1 File). The pattern was introduced to develop a category-like model for genetics (in fact, molecular biology). However, in that article, the sequence of the single-strand DNA and related products were expressed marginally in a category-like formalism using a polygonal line in a plane. Because the shape of the polygonal line changed considerably, using it proved inconvenient. Therefore, we developed a more stable display.

In essence, in the canonical Watson–Crick DNA base pairing scheme, adenine (A) forms a base pair with thymine (T) and guanine (G) forms a base pair with cytosine (C) [47, 48]. Similarly, RNA is a molecule that has a much shorter chain of nucleotides but has various biological roles. The DNA sequence consisting of bases ‘A, C, T, and G’ is transcribed into RNA composed of bases ‘A, C, U, and G’; the sets only differ in that ‘U (uracil)’ replaces ‘T (thymine)’.

We introduced to these bases, a base ‘E’ to indicate an ‘empty’ base, which is treated in the same way for display purposes as an identity base. In the previous article, with five bases, we considered the set C5 = {C, A, T, G, E}. In this example, the token Dj● is rewritten as D(k)j●.

§3–2. A bijective expression of DNA sequences using a diagram-pole of five equi-spaced phasors and a square diagram-pole

First, we introduced a phasor diagram in which each base ‘E, C, A, T/U, G’ was assigned to one of five equi-spaced phasors located on the unit circle in the Gaussian plane, each with a ‘2π/5’ angular phase separation to the next [Fig 4(B), left panel]; reproduced from Fig 5 of [6]).

We then introduced phase angle ‘ω’ defined as the counterclockwise rotational angle ‘ω = 2π/5 (rad)’ and a binary composition of ‘ω’ denoted by ‘●’ written ‘ω2●ω4 = ω1’, and an action on bases also denoted by °. A rotational group W is defined; W = {ω0, ω1, ω2, ω3, ω4}, with the rule of ‘ωm = ωm’ and ‘m = {0, 1, 2, 3, 4, 5}’ (ω0 is the identity meaning no rotation). The bijection rule; X0 ↔ E, X1 ↔ C, X2 ↔ A, X3 ↔ T, X4 ↔ G, then allows the general form of an arbitrary base to be expressed as ‘Xm ↔ Exp(m·ω·i)’ (here, ‘i’ is the ‘imaginary unit’, m = {0, 1, 2, 3, 4}). E.g., ‘X1·ω3 = X1+3 = X4’ means ‘C°ω3 = G’ (base C is transformed to G by operator ω3). In practice, E°ω0 = E, E°ω1 = C, E°ω2 = A, E°ω3 = T, E°ω4 = G. All compositional scenarios are based on and referenced as diagrams (Figs 2 and 3 [Ref. 6]; see S1 File).

In this paper, we introduce an additional rule; the 0-th base ‘E0’ is always assumed explicitly in any single-strand DNA sequence or fragments such as D(k)j = [E0|C1|A2|E3|T4|E5|G6||E7E8E9…].

[Figs 6(A) and 7(A)]

10.1371/journal.pone.0302710.g006 Fig 6 Illustrations of DNA sequences with/without < > on a square pole.

(a). Simple diagram of a single-strand DNA sequence ‘D(k)j = [E0|C1|A2|E3|T4|E5|G6||E7E8E9…]’, and its 3-dimensional polygonal line on a square pole. We stipulate that for any D(k)j, the 0-th coordinate E0 and the infinite tail ‘EEE…’ are glued automatically with the actual sequence ‘C1A2E3T4E5G6’. (b). To highlight the actual sequence from 1st to 6-th ‘C1A2E3T4E5G6’ (in this case, N = 6; the appropriate range is determined by the user), and by making use of the symbol < >, planes that include ‘E’s as actual bases (i.e., C1A2E3T4E5G6) of <D(k)j> are deleted completely, except those planes of the 0-th coordinate E0 and the infinite tail ‘EEE…’; hence, <D(k)j> = <[E0|C1|A2|E3|T4|E5|G6||E7E8E9…]> = [E0|C1|A2|T3|G4||E5E6E7…].

10.1371/journal.pone.0302710.g007 Fig 7 Illustrations of DNA sequences with/without < > on a pentagon pole.

(a). A simple diagram for sequence ‘D(k)j = [E0|C1|A2|E3|T4|E5|G6||E7E8E9…]’ and its 3-dimensional polygonal line on a pentagon pole. In addition, we stipulate that for any D(k)j, the 0-th coordinate E0 and the infinite tail ‘EEE…’ are glued automatically with the actual sequence ‘C1A2E3T4E5G6’. (b). To highlight the actual sequence from 1st to 6-th bases ‘C1A2E3T4E5G6’, planes that include ‘E’s as actual bases (i.e., C1A2E3T4E5G6) of <D(k)j> are deleted completely, except the planes of the 0-th coordinate E0 and infinite tail ‘EEE…’ resulting in <D(k)j> = <[E0|C1|A2|E3|T4|E5|G6||E7E8E9…]> = [E0|C1|A2|T3|G4||E5E6E7…].

The 0-th coordinate of any DNA/RNA sequence can only be E0 if E0 is only a symbol; hence, a partial function for a morphism (e.g., [A0|C1|A2|E3|T4|E5|G6||E7E8E9…], [G0|C1|A2|E3|T4|E5|G6||E7E8E9…] that breaks (4)) cannot occur. Therefore, the objects satisfy the postulates of category theory (the compositionality of a source object and a target object) as mentioned in (4).

[Fig 1(B)]

At this juncture, we refer the reader to our previous report in which the DNA sequences are described using an operator that is defined on a five-fold phasor diagram [Fig 4(B), left panel; see Fig 5 of [6]]. In that report, we considered a little devised Cartesian product of the group W, ‘B(k)(j→l) = [ω0 0|ω1 1|ω0 2|ω2 3|ω3 4|ω4 5||ω0 6|ω0 7|….] (an operator/a morphism defined on DNA, RNA or related products that are expressed by the bases; each B(k)(→) is defined in place pk, k = 1,2,…)’. By making use of an identity DNA sequence ‘D(k)0 (in place pk) = [E0|E1|E2|E3|…|EN−1|EN||EN+1|EN+2…]’, any D(k)j (in place pk) (j; the session number, j = 1,2,3,…) is expressed as D(k)j=D0;B(k)(0→j)=[E0|E1|E2|E3|E4|E5||E6|E7|…]◦[ω00|ω11|ω02|ω23|ω34|ω45||ω06|ω07|….]=[E◦ω00|E◦ω11|E◦ω02|E◦ω23|E◦ω34|E◦ω45||E◦ω06|E◦ω07|…]=[E0|C1|E2|A3|T4|G5||E6|E7|…], (33)

For the above description, we replace the symbol ‘°’ with ‘;’ used in [6] to indicate diagrammatic ordering of the application of the operations. We stipulate that there is an infinite number of ‘E’s and the trailing sequence of ‘E’s are implicitly implied as in ‘D(k)j = [E0|C1|A2|T3|G4||E5E6E7…]’. In addition, the general form is, for example, ‘D(k)j = [E0|C1|A2|T3|G4|…….. |TN−1|AN||EN+1EN+2…]’. Here, the coordinates from the 1st to N-th entry are actual base sequences that include the case in which the ‘E’s are incorporated as for example in ‘D(k)j = [E0|C1|A2|E3|T4|E5|G6||E7E8E9…]’ with an infinite tail sequence of ‘E’s devised so that any D(k)j is regarded as an element in a single set; see [Ref. 6].

§3–3. Regarding the compatibility and treatment between the explicit and implicit identity elements

In applying the creation/annihilation morphism on an explicit ‘E’ and an implicit (), the conversion ‘() →E’ (this morphism being unique) is incorporated or eliminated from any sequence as in

‘D(k)a = [E0|G1|T2|C3|A4||E5E6E7…]

= [E0|G1()T2|C3()()A4||E5E6E7…]→[E0|G1|E2|T3|C4|E5|E6|A7||E8E9E10…] = D(k)b’ so long as they are recognized/tracked during the entire process. We stipulate that there are two ways of using E, specifically, the explicit base E (a sort of terminal object) and () the implicit base E (a sort of initial object). The deletion of E is performed via the inverse procedure of the above manipulation using the annihilation ‘E→()’ (this morphism being also unique). Note that the annihilation/creation of bases (coordinates) of ‘D(k)a’, the insertion and deletion of an explicit E, and the conversion between ‘E ↔ ()’ are actual morphisms, and there exists an ordinal operator that substitutes for this change. For example, the above annihilation/creation can also be performed by an ordinal operator of the Cartesian product such that ‘B(k)(a→b) = [ω0 0|ω0 1|ω2 2|ω2 3|ω4 4|ω4 5|ω0 6|ω2 7||ω0 8|ω2 9|ω0 10|….]’ belongs to group W, for which the relation ‘D(k)a°B(k)(a→b) = D(k)b’ can be verified. Henceforth, for this example of a hybrid model for genetic/molecular biology, all coordinates can be treated using this sort of ordinal operation as a Cartesian product such with ‘B(k)(a→b)’ composed of multiple elements of group W.

Furthermore, Xm and X5-m are inverse operations ‘ωm−1 = ω5-m’. With the notation (5→3), a sequence ‘D(k)j (5→3) = [E0|C1|A2|E3|T4|E5|G6||E7E8E9…]’ is transformed into its complementary base ‘D(k)j† (3→5) = [E0|G1|T2|E3|A4|E5|C6||E7E8E9…]’ simply from ‘D(k)j† = D0;B(k)(0→j)−1’ in accordance with examples given in our previous report [6]. Here, because any pair of bases, such as C and G, is related by a symmetry around the arbitrary E (also for A↔T), the sequence D(k)j† can be obtained simply by performing a counterclockwise rotation by π (rad) around any arbitrary E of the DNA wallpaper (to be clarified later). The terms ‘(5→3)’ and ‘(3→5)’ express the prime endings <5’(five prime)→3’(three prime)> or <3’→5’> accompanying a sequence designation. The notation ‘(5→3)’ or ‘(3→5)’ is simply an additional label representing the two possible types of endings of a single-stranded DNA. Then, this pair of homologous double-stranded DNA would be described using ‘/’ meaning a pair of bases as in the following,

[Dj(5→3)/Dj†(3→5)]

= [E0/E0|C1/G1|A2/T2|E3/E3|T4/A4|E5/E5|G6/C6||E7/E7|E8/E8|E9/E9|…].

Here, the bi-operator ‘Bj(5→3)/Bj†(3→5)’ yields ‘[Dj(5→3)/Dj†(3→5)]=[D0(5→3)/D0(3→5)]▲[B(0→j)(5→3)/B(j→0)(3→5)]=[D0;Bj/D0;Bj†]’, (34)

where ▲ denotes the bi-operation of ‘;/;’, and its operation on the pair of identity bases sequence D0/D0 by an operator such as Bj is denoted ‘D0;Bj’. In addition, the composition between Bj and Bk is rewritten as ‘Bj;Bk’ but was written as ‘Bj●Bk’ in our previous report [6]. Hence, the above bi-operator parts of Eq (34) are rewritten as ‘Bj(5→3)/Bj†(3→5)=[ω0/ω00|ω1/ω41|ω2/ω32|ω0/ω03|ω3/ω24|ω0/ω05|ω4/ω16||ω0/ω07|ω0/ω08|ω0/ω09|…]’. (35)

At this point, to enhance usability, we suggest the following optional representation in which a bijection for the vertices is considered. The vertices for bases C, A, T/U, and G on the pentagon are mapped onto the vertices of a square; the identity base E, however, is mapped onto the midpoint between the vertices of C and G [Fig 6(A)]. Although the squares in Fig 6(A) match up with the pentagons [Fig 7(A)], the positions of C, A, T/U, G on the planes are equi-spaced with an angular separation of ‘π/2’. To be specific, they have been placed at E (1,0), C (1,1), A (−1,1), T/U (−1,−1), and G (1,−1) on the plane tangent to the flow of the sequence D(k)j. This tangent plane is not the Gaussian plane [Fig 4(B), right panel] but the simple two-dimensional Euclidean plane. With this representation, the bijection between the vertices of the two planes is written E (1,0)↔E (= Exp(0)), C (1,1)↔C (= Exp(ω·i)), A (−1,1)↔A (= Exp(2·ω·i)), T/U (−1,−1)↔T/U (= Exp(3·ω·i)), and G(1,−1)↔G (= Exp(4·ω·i)) [Figs 6(A) and 7(A)]. Here, mathematically and operationally, we assume the rotational group W over the Gaussian plane is always in the background even if we display a figure using E (1,0), C (1,1), A (−1,1), T/U (−1,−1), and G(1,−1). Furthermore, we stipulate that when a polygonal line of bases is drawn, the position of ‘E0’ is always fixed, as in Fig 4(B). This transformation enables a simple illustration of subsequent operations.

§3–4. Notation for the identity elements that were explicitly/implicitly deleted using < > or {}

At this point, to gain more usability, we consider a further manipulation concerning the notation < >. Concerning the meaning of <D(k)j>, we stipulate that planes that include ‘E’s other than the initial 0-th E (E0) and the infinite tail of ‘E’s (e.g., ||E5E6E7…) of D(k)j are deleted entirely, and the remaining indexing coordinates closed up. As a result, the square pole corresponding to <D(k)j> that does not include ‘E’s as bases other than the initial 0-th E and the infinite tail of ‘E’s is

<D(k)j> = <[E0|C1|A2|E3|T4|E5|G6||E7E8E9…]> = [E0|C1|A2|T3|G4||E5E6E7…]

[Fig 6(B)]

The meaning of this rule becomes clear in a later description; however, to avoid confusion over the use of the symbol, we provide a brief description of < > and another symbol {} that was introduced in [6]. Let ‘D(k)j = [E0|C1|A2|E3|T4|E5|G6||E7E8E9…]’; then, there are two optional displays:

1) in <D(k)j>, imaginary bases ‘E’s as bases other than the initial 0-th E and the infinite tail of ‘E’s are deleted from D(k)j; that is, <D(k)j> = [E0|C1|A2|T3|G4||E5E6E7…]. and

2) in {D(k)j}, bases ‘E’s remain in all sequences despite them being included explicitly in D(k)j; {D(k)j} = [C1|A2|T4|G5||E7E8E9…] (the 0-th E, any E, and the infinite tail sequence of `E’s exist; however, the display of E in the ‘1−N’-th coordinate (in this case, N = 6) is only omitted in the display). In fact, the coordinates of D(k)j and {D(k)j} are equivalent. However, for <D(k)j>, we assume that, for a sequence of single-strand DNA, there exists a bijection between the sequence of <D(k)j> and the shape of its polygonal line along the square pole. This bijection also holds between <Dj> and the shape of its polygonal line over the DNA wallpaper (see Fig 6 of [Ref. 6]. The revised figure is drawn in [Fig 8]. Similarly, we assume that there is bijection between <D(k)j> and the shape of its polygonal line [Fig 6(B)]. We conjecture that this bijection enables an unknown base sequence of <D(k)j> to be identified from the shape of its polygonal line if the latter is already known.

10.1371/journal.pone.0302710.g008 Fig 8 Illustration of a pair of complementary DNA sequences on the DNA wallpaper.

For the wallpaper pattern, we suppose D(k)j (in place pk) = [E0|G1|C2|E3|A4|E5|G6|T7|E8|A9|G10||E11E12E13…]’, with < > meaning the deletion of imaginary bases ‘E’ other than the initial 0-th E and the infinite tail of ‘E’s. Hence, <D(k)j> is written <D(k)j> = [E0|G1|C2|A3|G4|T5|A6|G7||E8E9E10…]. A rule applies in which a polygonal line begins from an arbitrary E0, so, in this Figure, <D(k)j> is described as the polygonal line marked in blue. Because D(k)j† (the complementary sequence of D(k)j) is given as D(k)j† = [E0|C1|G2|E3|T4|E5|C6|A7|E8|T9|C10||E11E12E13…], <D(k)j†> is displayed as <D(k)j†> = [E0|C1|G2|T3|C4|A5|T6|C7||E8E9E10…] and is drawn as a polygonal line marked in pink. Obviously, the shape of <D(k)j> and <D(k)j†> are symmetrically disposed with respect to ‘E0’ over the wallpaper pattern. Therefore, the shape of the polygonal lines of <D(k)j> and <D(k)j†> are point-symmetry-related around a common E0’. Interestingly, we may infer there is a bijection between the shape of polygonal line <D(k)j> and the contents of a sequence of bases ‘G1|C2|A3|G4|T5|A6|G7||E8E9E10…’. In other words, if a polygonal line is provided only with E0’, the content of bases can be determined uniquely and automatically (The blue polygonal line instantly provides the above base sequence). Adapted from Fig 4 of [Ref. 6] with permission (S1 File).

Naturally, to treat this issue with only a regular pentagon pole is possible [see Fig 7(A) and 7(B)]. In this article, we use the regular p-polygon pole with ‘p = 5’ (pentagon pole) where multiple phasor diagrams (planes) in the Gaussian plane are placed in parallel. By connecting the individual vertices, the DNA and other sequences can be drawn as an orbit on a regular pentagon pole [Fig 7(A) and 7(B)]. Precisely, there is a bijection between D(k)j and the shape of its polygonal line [Fig 7(A)] and another bijection between <D(k)j> and the shape of its polygonal line [Fig 7(B)]. In this regard, for ease of use and the advantage of this mapping, the simplification that we prefer is to focus on the reduction in the number of vertices from five to four in shape [Fig 6(A) and 6(B)] and to gain visual simplicity when presented in three dimensions.

§3–5. On the mapping from DNAs to RNAs and the conversion of their dimensions using a unit of Descartes’ geometry

Next, apart from the above stipulation, and to view the mapping between D(k)j (DNA) into R(k’)j† (RNA), we consider the following cyclic group Γ = {σ, n}, where element n is the identity operation that does not change any base; e.g., A;n = A, T;n = T and E;n = E. Conversely, element σ produces the change {E, C, A, T, G}↔{E, C, A, U, G}, and ‘σ2 = n (no operation)’ holds. In practice, σ yields the following changes, E;σ=E(orE×σ=E),C;σ=C(orC×σ),T;σ=U(orT×σ=U),U;σ=T(orU×σ=T),G;σ=G(orG×σ=G). (36)

Hence, the simple conversion between DNA and RNA is written ‘D(k)j;σ=R(k’)j†,R(k’)j†;σ=D(k)j. (37)

Because the group Γ = {σ, n} is {Z2,; or ×}, D(k)j and R(k’)j† may be expressible as a Cartesian product {Z5×∞×Z2,; or ×} where ‘; ‘ (= ×) denotes the operation between ‘D(k)j’s or ‘R(k’)j†’s.

If the primary DNA sequence is written ‘D(k)j = [E0|G1|E2|T3|A4|C5||E6|E7|…]’, the corresponding RNA sequence R(k’)j† is written [E0|G1|E2|T3|A4|C5||E6|E7|…];σ (or [E0|G1|E2|T3|A4|C5||E6|E7|…]×σ) (σ acting on any coordinate independently) = [E0;σ|G1;σ|E2;σ|T3;σ|A4;σ|C5;σ||E6;σ|E7;σ|…] = [E0|G1|E2|U3|A4|C5||E6|E7|…]. In other words, any DNA (RNA) sequence is an element of the Cartesian product Z5×∞×Z2 (or D(k)j×Γ), such as ‘R(k’)j† = [E0|G1|E2|U3|A4|C5||E6|E7|…];n (or [E0|G1|E2|T3|A4|C5||E6|E7|…]×σ)’. In this regard, the expression ‘D(k)j’ is also regarded as an abbreviation of ‘D(k)j;n (∈Z5×∞×Z2)’. In practice, this is always possible if we are given ‘D(k)j = [E0|G1|E2|T3|A4|C5||E6|E7|…]’ as ‘D(k)j;n;n;n;…;n (∈Z5×∞×Z2×Z2×Z2×…×Z2)’. If we regard ‘D(k)j;n (∈Z5×∞×Z2)’ as the product after ‘m−1’ shrinkages ‘Z2×…×Z2 (m-tuple) = Z2 (one-tuple)’, then that is considered possible. In other words, the essential form of the token D(k)j● is expressed as Z5×∞×Z2; the optional expression ‘Z5×∞×Z2×Z2×Z2×…×Z2’or‘Z5×∞’, (38)

is permissible. If we shrink the parts of ‘…×Z2×Z2×Z2×…×Z2’, only the appropriate power of the binary operation n;n (= n) is necessary and sufficient to meet the conditions stipulated. Conversely, if a specific form of ‘Z5×∞×Z2×…×Z2 (r-tuple)’ is required from ‘Z5×∞×Z2×…×Z2 (s-tuple)’ (for non-negative integers r,s; r≥s), ‘r − s’ applications of the operation ‘n;n = n’ completes this transformation between the two tuples. In this way, there is freedom to choose the number of applications ‘×n’ in accordance with the operations of the group Γ = {σ, n}. For D(k)j ‘(∈Z5×∞×Z2×…×Z2 (r-tuple))’ and D(k)l ‘(∈Z5×∞×Z2×…×Z2 (s-tuple))’, with r≠s, the corresponding tokens D(k)j and D(k)l do not seem to belong to the same place pk. A difference clearly exists, and usually we only assume the essential case, ‘D(k)j(∈Z5×∞)and‘R(k’)j†(∈Z5×∞)’. (39)

We introduce the rule that the 3-dimensional polygonal line of ‘D(k)j = D(k)j;n’ or ‘R(k’)j† = D(k)j;σ’ (∈Z5×∞×Z2)’ is expressed as ‘[D(k)j] = D(k)j;n’ and ‘[R(k’)j†] = D(k)j;σ = R(k’)j†;n’. In this way, for these extreme circumstances, we find an arbitrary/appropriate number ‘;n (∈Z2)’ at the end of any D(k)j or R(k’)j† if needed. This rule is an application of the use of the ‘unit 1’ in Descartes’ geometry [49]. Therefore, we can regard D(k)j (∈Z5×∞) as ‘D(k)j;n;n;n;…n’(∈Z5×∞×Z2×Z2×Z2×…×Z2). (40)

If D(k)j also expresses the state D(k)j where all ‘n;n;n;…n’ are deleted from ‘D(k)j;n;n;n;…;n’, then, the following relations hold; D(k)j = D(k)j;n;n;n;…;n or D(k)j;n = D(k)j, D(k)j;σ = R(k’)j†. Similarly, for R(k’)j†, R(k’)j†=R(k’)j†;n;n;n;…;norR(k’)j†;n=R(k’)j†,R(k’)j†;σ=D(k)j. (41)

Moreover, the binary compositions between two DNAs such as ‘Dj;Dk’, ‘Dj;Dj†’ or ‘Dj;Dj−1’ are regarded as being nonsensical as an operation because Dj and Dj−1 are not operators. However, note that the primary single-strand DNA sequence ‘D(k)j’ and the complementary sequence D(k)j† have a symmetry with respect to the horizontal plane that includes all Es [see Fig 9(A) and 9(B)].

10.1371/journal.pone.0302710.g009 Fig 9 Illustrations of the complementary region of a pair of DNA sequences on two types of poles.

(a). Given the two polygonal lines <D(k)j> = […|Cm|Am+1|Tm+2|Gm+3|…] (marked in blue) and <D(k)l> = <D(k)j†> = […|Gm|Tm+1|Am+2|Cm+3|…] (marked in pink), they are symmetry-related in the ‘x-z’ plane that includes the line ‘…EmEm+1Em+2Em+3…’. This symmetry helps to identify a pair of two complementary segments of single-strand DNA (RNA) sequences. Note that the shape of their polygonal lines underscores a bijection between <D(k)j> and <D(k)j†> (= <D(k)l>). However, in general, even if the shapes of <D(k)a> and <D(k)b> are complementary-related, they may not always be bijective or complementary. (b). Given the two polygonal lines <D(k)j> = […|Cm|Am+1|Tm+2|Gm+3|…] (marked in blue) and <D(k)l> = <D(k)j†> = […|Gm|Tm+1|Am+2|Cm+3|…] (marked in pink), they are clearly symmetry-related in the ‘x-z’ plane that includes the line ‘…EmEm+1Em+2Em+3…’.

§3–6. Method for the detection of the complementary region of a pair of DNA(RNA) sequences using two polygonal lines

For more generality, we introduce another rule: if we interpret any single-strand DNA fragment such as ‘A3T4’ in ‘D(k)r = [E0|G1|E2|A3|T4|C5||E6|E7|E8|…]’, this part is also recognized as ‘D(k)s = [E0|A1|T2||E3|E4|E5|…]’. With this understanding, any DNA sequence ‘D(k)r’ or its partial sequence ‘D(k)s’ may be related by bijection with the shape of its polygonal line for either the DNA wallpaper, the square pole or the pentagon pole.

For the DNA wallpaper, the bijection is repeated, and the shape of the polygonal line of <D(k)j> may be determined uniquely over the DNA wallpaper [Fig 8]; adapted from Fig 4 of [Ref. 6]), where naturally, any polygonal line of the <D(k)j>s never crosses over the ‘E’s. If we distinguish <D(k)j> from <D(k)j>θ that has been rotated through θ (rad) around E0, the polygonal line of <D(k)j†> (the complementary sequence of <D(k)j>) may be obtained automatically by the counterclockwise rotation of π (rad) around E0 of the DNA wallpaper [Fig 8]. In the three cases—DNA wallpaper, square pole, and pentagon pole—the polygonal line of <D(k)j> and the actual single-strand DNA sequence such as ‘CATG…’ are in correspondence, and there is a bijection between the two polygonal lines [Figs 8 and 9(A), 9(B)].

Therefore, the specific sequence of bases in any arbitrary D(k)j or a pair of DNA sequences have complementary sequences that may be identified graphically. They can be converted into complementary sequences of DNA that can be performed easily from the shape of the polygonal line. For the complementary region of D(k)j and D(k)l (single-strand DNA sequences in place pk), the composition of the operator parts of ‘D(k)j = […|Cm|Am+1|Tm+2|Gm+3|…] = […|E°ω1 m|E°ω2 m+1|E°ω3 m+2|E°ω4 m+3|…]’ and ‘D(k)l = […|Gm|Tm+1|Am+2|Cm+3|…] = […|E°ω4 m|E°ω3 m+1|E°ω2 m+2|E°ω1 m+3|…]’ (i.e., B(k)j●B(k)l = […|ω1 m|ω2 m+1|ω3 m+2|ω4 m+3|…]●[…|ω4 m|ω3 m+1|ω2 m+2|ω1 m+3|…]) is considered to satisfy the following relation, ‘B(k)j●B(k)l(=B(k)l●B(k)j)=[…|ω1●ω4m|ω2●ω3m+1|ω3●ω2m+2|ω4●ω1m+3|…]=[…|ω0m|ω0m+1|ω0m+2|ω0m+3|…]=B(k)0’or‘D(k)0◦(B(k)j●B(k)l)=D(k)0=[…|Em|Em+1|Em+2|Em+3|…]’, (42)

meaning that B(k)j and B(k)l are ‘inverses’ in accordance with their shapes [Fig 9(A) and 9(B)]. This relationship may aid in assessing whether arbitrary regions of two single-strand DNA sequences are complementary, although careful treatment is necessary regarding the direction of <5’(five prime)→3’(three prime)> because there may be instances for which D(k)j and an inverse sequence of D(k)l are related, as in Eq (42), but have been omitted. Clearly, this similarity relationship and usage may be used on the pentagon pole representation [Fig 9(B)].

§3–7. Supplemental explanations concerning the explicit/implicit identity sequences in category theory

In the present article, we introduce a rule by which an explicit identity sequence ‘D0 = D(k)0 (in place pk) = [E0|E1|E2|E3|…|EN−1|EN||EN+1EN+2…]’ may be converted into an implicit identity sequence ‘Dϕ (in place pϕ) = [() () () …() () ||() () …] = ()’ [Fig 10(A) and 10(B)], and vice versa using the annihilation/creation morphism (as D0 ↔ Dϕ), and ‘<D0> = <D(k)0> = <[E0|E1|E2|E3|…|EN−1|EN||EN+1EN+2…]> = D(k)0’ (in place pk). Because <D0> may be obtained by the map f(→ϕ) on D0 as ‘D0;f(→ϕ) = Dϕ’, then from a certain viewpoint, for any ‘D0’, the map <D0> is a result of the map of an n-tuple of annihilation morphisms f(→ϕ);f(→ϕ);…f(→ϕ) = f(→ϕ)×n (n; natural number or ∞). However, we must stipulate that f(→ϕ) changes all ‘E0E0…E0’ in D0 to () () …(); henceforth, we write f(→ϕ)×n only as f(→ϕ). Significantly, similar to ‘S! ≠ S0’ given in Eq (16) and (17) in §2-2-3, because D(k)0 (in place pk) may be regarded as a terminal object that is defined on category Ak (at place pk obtained via viewing group (or monoid) Ak as category), and Dϕ (at place pϕ) may be seen as the initial object of category Ak, there is no zero object ‘D0 = Dϕ’ in category Ak (at place pk).

10.1371/journal.pone.0302710.g010 Fig 10 Illustrations of the relationships between explicit and implicit identity DNA sequences on two types of poles.

(a). By making use of the annihilation morphism f(→ϕ), an explicit identity sequence D0 (a line that passes through the vertex of ‘E0s on the pentagon pole) is converted into Dϕ (the implicit identity sequence or nothing) in accordance with ‘D0;f(→ϕ) = Dϕ’. This procedure is also written as ‘<D0> = <[E0|E1|E2|E3|…|EN−1|EN||EN+1EN+2…]> = Dϕ’. In contrast, f(ϕ→) yields an explicit identity sequence D0 from Dϕ in accordance with ‘Dϕ;f(ϕ→) = D0’. (b). With no regard to the shape of the polygonal line, the same conversion is considered performable as ‘D0;f(→ϕ) = Dϕ’ and ‘Dϕ;f(ϕ→) = D0’.

Similarly, in §2-2-2, a unique place pϕ for Dϕ (= () () …(); implicit identity sequence of single-strand DNA) need not always be expressed explicitly in the above conversion procedure because it suffices to consider it somewhere in the entire EPN for an arbitrary annihilation/creation morphism like f(k→ϕ) or f(ϕ→k). If it is imposed, Rϕ (= () () …(); implicit identity sequence of a single-strand RNA) is equivalent to ‘Dϕ = () () …()’.

In place pk, a morphism f(k)a (an operator, for example, such as ‘f(k)a = B(k)a = [ω2 1|ω3 2|ω0 3|ω4 4||ω0 5|ω0 6|….], B(k)b, B(k)c,…; ∈group W’) may act on any token D(k)j● and produce an image. If the image of f(k)a to D(k)j is denoted by ‘D(k)j;f(k)a’ or ‘f(k)a°D(k)j’, the operation itself is denoted ‘D(k)j;f(k)a;’ or ‘f(k)a°D(k)j:’. In fact, D(k)j is a similar product of B(k)a (a; non-negative integer) because D(k)j is determined as D(k)j = D(k)0;B(k)(0→j); thereby, a simple operation may be performable among any arbitrary D(k)j and morphism f(k)a similar to the example in §3.

§3–8. An explicit/implicit identity protein and its treatment

Furthermore, an interpretation of the codon (triplet of bases) from the polygonal line comprising bases given in Fig 6(A) and 6(B), and Fig 9(A) and 9(B) is possible in accordance with the conventional codon table [see Fig 11(A)]. The combination of three vertices (to each, a base ‘C, A, T, G or E’ is allocated) may be translated into an amino-acid sequence (protein: a sequence of amino acids) in parallel via morphism f(4→6) or f(5→7). If limited to the procedure of a morphism f(4→6), f(6→4), f(5→7) or f(7→5), the mapping from a sequence of bases to that of an amino-acid sequence (protein) is performable. There, we believe that the inverse procedure is automatically performable using electronic tools such as a scanner for sequences of molecules. We stipulate that by recognizing the shape of the polygonal line of the amino-acid sequence (protein), any sequence of triplets of lines of codons may be interpreted from the corresponding amino-acid sequences (proteins) such as ‘AUG→(M)’, ‘CUG→(L)’, and ‘AGU→(S)’; that is, Rs(4)j† (in place p4, j a non-negative session number) = [E0|A1U2G3C4U5G6A7G8U9||E10E11E12…] → ‘Pr(6)j = (M)(L)(S)ΔΔΔ…’(in place p6) → ‘<Pr(7)j> = (M)(L)(S)’ (in place p7), where Δ means an explicit identity (empty) amino acid (protein), and a conversion ‘Δ↔() (implicit Δ, nothing) may be considered. In more detail, we may instigate a rule by which a triplet ‘EEE’ is mapped to an explicit identity amino acid (protein) ‘Δ’; for example, with ‘Rs(4)1† = [E0|A1U2G3E4C5U6G7A8G9U10||E11E12E13E14…]’ (in place p4) and the appropriate use (firing) of an operator f(4)a (that is, an operator like B(j→k) in place p4), we produce the following changes ‘Rs(4)1†(inplacep4)’→‘Rs(4)1a†=[E0|A1U2G3E4E5E6C7U8G9A10G11U12||E13E14E15E16…]=[E0|(A1U2G3)(E4E5E6)(C7U8G9)(A10G11U12)||(E13E14E15)E16…]’(inplacep4). (43)

10.1371/journal.pone.0302710.g011 Fig 11 Codon table and illustration of the canonical central dogma using an EPN.

(a). The conventional codon table is displayed. A codon (triplet of bases) is translated into an amino acid that is incorporated in the growing polypeptide chain. The number of triplet combinations is 64. The stop codons are UAA, UAG, and UGA. (b). The canonical central dogma from the double-strand DNA to the protein Q (Glutamine)… is displayed in simplified form using the EPN. First, a token ● is included in place p1. Subsequently, morphisms f(1→2), f(2→3), f(3→4),, …,f(6→7) are fired in order. There are two pathways via ‘place p4→p6→p7’ or ‘place p4→p5→p7’. Although multiple tokens are drawn, only one token is included in one of the places in p1, p2,…, p7. Multiplying a marking x by an incidence matrix produces one move of a token. However, the incidence matrices of the EPN are slightly different depending on which pathway is selected from the above three.

Additionally, the morphism ftotal-splicing (= ft-sp = f(4→6)) leads to further changes;

{Rs(4)1a†}; ft-sp = Pr(6)1 = Δ0(M1)Δ2(L3)(S4)Δ5Δ6Δ7…’ (in place p6) (we stipulate that an initial Δ0 and an infinite trail such as ‘Δ5Δ6Δ7…’ are glued automatically) [Fig 11(B)].

Then, Pr(6)1 (in place p6) is translated into <Pr(7)1> = Δ0(M1)(L2)(S3)Δ4Δ5Δ6… (in place p7) via morphism fpost-prot. (= fpo-pr = f(6→7)). In another example, with ‘Rs(4)2† = [E0|E1A2U3G4E5C6U7G8A9G10U11||E12E13E14E15…]’, a specific morphism f(4→5) (that is, an operator like B(j→k) defined from place p4 in place p5) produces the result, Rs(4)2† (in place p4)→‘<Rs(5)2†> (in place p5) = [E0|() A1U2G3() C4U5G6A7G8U9||E10E11E12E13…]

= [E0|(A1U2G3)(C4U5G6)(A7G8U9)||E10E11E12E13…]’; once firing of the specific morphism ftotal-prot. (= ft-pr = f(5→7)) produces the next change <Rs(5)2†> (in place p5)→‘{<Rs(5)2†>};f(5→7) = <Pr(7)2> = [Δ0|(M1)(L2)(S3)||Δ4Δ5Δ6…] in place p7 (via morphism f(5→7))’. The above manipulations of ‘E’s are to adjust their number so that all bases form complete triplets. Note that, for the firing rules, we stipulate that when a morphism f(4→6) (= ft-sp) is assumed, we disregard ‘pathway place p4→p5→p6’ because f(5→6) is an inconvenience and nonsensical if f(4→6) and f(5→6) are always fireable/non-fireable contemporaneously. Because sequences in place p5 such as <Rs(5)2†> = [E0|(A1U2G3)(C4U5G6)(A7G8U9)||E10E11E12E13…] do not include ‘E’s as coordinates, other than an initial E0 and an infinite tail of ‘E0’s at the end of the sequence, only products that can go through morphism f(5→7) (when f(5→7) is fireable) such as ‘<Rs(5)2†>;f(5→7) = <Pr(7)2> = [Δ0|(M1)(L2)(S3)||Δ4Δ5Δ6…]’ in place p7 can also be outputs in place p6 such as a sequence like Pr(6)2 = [Δ0|(M1)(L2)(S3)||Δ4Δ5Δ6…] via morphism f(5→6) (when f(5→6) is fireable). Therefore, there are cases where morphism f(5→6) is fireable. However, morphism f(5→7) is sufficient, and morphism f(5→6) is not always necessary. For simplicity of the model, we omit morphism f(5→6). In this manner, any amino-acid sequence (protein) in place p6 may be expressed as a sequence of polygonal lines appended by an infinite explicit trailing ΔΔΔ…. Similarly, any amino-acid sequence (protein) in place p7 may be expressed as ϕ, a sequence of polygonal lines for which there is no infinite explicit trailing ΔΔΔ…. At this stage, an identity sequence of amino acids (proteins) is also definable where the infinite number of Δ is ordered as ‘Pr(k)0 = ΔΔΔΔΔΔΔ…’ (in this case, k = 6, because place p6 is designed for an amino-acid sequence (protein) that may include Δ’s). We call Pr(k)0 an explicit identity protein sequence. Moreover, <Pr(k)0> is defined as the state where the ‘Δ’s of the explicit identity protein are deleted via the annihilation morphism for Pr(k)0; ‘{Pr(k)0};f(k→ϕ) = <Pr(k)0> = [Δ0|Δ1Δ2Δ3…]≠[() () () …] = ϕϕϕ…ϕ = ϕ = Prϕ’ (in this instance, k = 6). Note the relation ‘<Pr(k)0> = Pr(k)0 (in place pk) = [Δ0|Δ1Δ2Δ3…]’. We refer to it as an implicit identity protein sequence. Naturally, an inverse procedure is considered via the creation morphism, ‘{ϕ};f(ϕ→k) = {Prϕ};f(ϕ→k) = {<Pr(k)0>};f(ϕ→k) = Pr(k)0 = ΔΔΔ…Δ’ (with k = 6). By this rule, any sequence of arbitrary amino-acid sequences (protein) Pr(k)j (j; the session number, non-negative number j = 0, 1,2,…) can be defined so that Pr(k)j belongs to set P (the set of amino-acid-sequences (protein)), although no operational meaning is assumed between the ‘Pr(k)j’s at this moment. The inverse translation (firing) for the token from place p6 to place p4 is considered to be always possible; however, that from place p7 to place p6 or from place p5 to place p4 seems to be impossible because in the latter cases, the bijection is lost. Furthermore, using a notation similar to that in (#remark 1), for morphisms ft-sp (= f(4→6)) and fpo-pr (= f(6→7)), the associative law holds if an adequate adjustment is made to the index numbers; for morphism ft-sp (= f(4→6)), the index numbers of the amino-acid sequences (proteins) Pr(k)j that are transformed from Rs(k)j† do not change until all manipulations to the sequence of operations is completed; in detail, the associative law within Eq (43) is obvious because this procedure in place p4 obeys the group operation.

§3–9. Regarding the symbols [[]], (()) and << >> that treat the explicit/implicit deletion of identity elements

Then, for the ‘part of the operation ft-sp (= f(4→6))’ and, with, say, token ‘Rs(4)2† (expressed in Eqs (44) and (45))’, the intron parts are changed into appropriate ‘E’s in accordance with the former part of the splicing procedure in place p4.

If the deletion of explicit ‘E’s from the r-th to the s-th coordinate (s,r: non-negative integers with s≤r; s,r = 0,1,2,…) of token Rs(4)2† is denoted ‘Rs(4)2†;< >s,r’, the following manipulation is confirmed; for‘Rs(4)2†=[E0|A1U2G3E4E5E6C7U8G9E10E11E12C13G14U15E16E17E18A19C20G21||E22E23E24E25…](inplacep4)’, (44)

Rs(4)2†;<>10,12,=[E0|A1U2G3(E4E5E6)C7U8G9()10‐12C13G14U15(E16E17E18)A19C20G21||E22E23E24E25…] (45)

(the place is not determined because this is an intermediate state of places p4 and p5), where the index numbers 10–12 remain until the sequence of operations is completed; this is displayed using double round brackets (()) as below. In this way, Rs(4)2†;< >4,6;< >10,12;< >16,18 (essentially, the operations are performed in diagrammatic order, from left to right on Rs(4)2†),

= [E0|A1U2G3()4-6C7U8G9()10-12C13G14U15()16-18A19C20G21||E22E23E24E25…]

(the place is not determined for the reason previously stated),

= [E0|A1U2G3C4U5G6C7G8U9A10C11G12||E13E14E15E16…]

(the place is not determined), using double round brackets (()),

= ((Rs(4)2†;< >4,6;< >10,12;< >16,18)) (the place is not determined).

In the above example, by performing the additional operation < >13,∞ to Rs(4)2†, ((Rs(4)2†;< >4,6;< >10,12;< >16,18));< >13,∞

= [E0|A1U2G3C4U5G6C7G8U9A10C11G12] = <Rs(4)2†> (in place p5).

Hence, the associative law for Rs(4)2†, (< >4,6;< >10,12);< >16,18 = < >4,6;(< >10,12;< >16,18) is evidently obeyed. In an ordinal <Rs(4)2†>, s = 1, r = ∞ is imposed, and <Rs(4)2†> = <Rs(4)2†>1,∞ = [E0|A1U2G3C4U5G6C7G8U9A10C11G12] (in place p5).

For the ‘part of the operation ft-sp (= f(4→6)) and fpost-prot. (= fpo-pr = f(6→7)).’; we see f(4→6));f(6→7) and f(4→5));f(5→7) commute because all tokens of place p5 are products of Rs(4)2†;< >r,s;…) to a sequence of amino acids (protein) (in place p6) from the r-th to the s-th coordinate (s,r: non-negative integers with s≤r; s,r = 0,1,2,…) of, say, token Rs(4)2†, denoted ‘<Rs(4)2†>;[] s,r’, the following manipulation is verified for ‘Rs(4)2† = [E0|A1U2G3()4-6C7U8G9()10-12C13G14U15()16-18A19C20G21] (in place p5)’, <Rs(4)2†>;[]7,9,=[E0|A1U2G3()4‐6L7‐9_()10‐12C13G14U15()16‐18A19C20G21]. (46)

The combination of amino acids (protein) and bases for which the part underlined L7–9 means the amino-acid sequence (protein) of molecule ‘L (leucine)’ and the place to which <Rs(4)2†;[] 7,9> belongs is not determined because this is an intermediate state for places p5 and p6 for which the index numbers 7–9 remain until the sequence of operations is completed and displayed using double round brackets (()).

Additionally, for the ‘entire operation f(4→6);f(6→7)) or f(4→5);f(5→7)’, we shall see whether the associative law holds. If the conversion procedure from a sequence of bases including explicit ‘E’s (place p4) to a sequence of amino acids (protein) including explicit identity (empty) amino acids (proteins) ‘Δ’s (in place p6) from the r-th to the s-th coordinate (s,r: non-negative integers with s≤r; s,r = 0,1,2,…) of, say, token Rs(4)2† denoted ‘Rs(4)2†;[[]] s,r’, the following manipulation is verified for ‘Rs(4)2†, = [E0|A1U2G3E4E5 E6C7U8G9E10E11E12C13G14U15E16E17E18A19C20G21||E22E23E24E25…] (in place p4)’, Rs(4)2†;[[]]7,9,=[E0|A1U2G3E4E5E6L7‐9_E10E11E12C13G14U15E16E17E18A19C20G21||E22E23E24E25…](theplaceisundeterminedbecausethisisanintermediatestateofplacesp4andp7). (47)

The combination of amino acids and bases that is underlined L7–9 denotes the amino-acid molecule ‘L (leucine)’, and the place to which Rs(4)2†;[[]] 7,9 belongs is not determined because this is an intermediate state of places p4 and p6 for which the index numbers 7–9 remain until the sequence of operations is completed and is displayed using double round brackets (()). Therefore, because ([[]] 7,9;[[]] 4,6);[[]] 19,21 = [[]] 7,9;([[]] 4,6;[[]] 19,21), the associative law for Rs(4)2† holds.

In this way, ‘Rs(4)2†;[[]] 7,9;[[]] 4,6;[[]] 19,21’ is calculated to be =[E0|A1U2G3(Δ4‐6_)(L7‐9_)(E10E11E12)C13G14U15(E16E17E18)(T19‐21_)||E22E23E24E25…], (48)

where the underlined Δ4–6, L7–9, and T19–21 refer to the amino-acid molecule (T: tyrosine), (the place is not determined for the reason previously stated).

In the present state, the morphism ft-sp (= f(4→6)) is not fired completely for similar reasons stated for Eq (47). Moreover, if all triplets (codons) are converted into any appropriate amino-acid sequence (protein), the product may be included in place p6 as a token. That is, an additional operation may change any coordinate into a suitable amino-acid sequence (protein); for example,

‘((Rs(4)2†;[[]] 7,9;[[]] 4,6;[[]] 19,21)); [[]] 1,3;[[]] 7,9;[[]] 10,18;[[]] 22,∞,

= [E0|A1U2G3(Δ4–6)(L7-9)(E10E11E12)C13G14U15(E16E17E18)(T19-21)

||E22E23E24E25…];[[]] 1,3;[[]] 7,9;[[]] 10,18;[[]] 22,∞,

= [Δ0|M1Δ2L3Δ4R5Δ6T7||Δ8Δ9Δ10…] = Pr(6)2 (in place p6)’, where the parts to the left of || belong to an amino-acid sequence (protein), and that on the right of || is an explicit identity base of ‘E’s (This sequence denotes a combination of amino acids (protein) and bases. Additionally, Δ0 is required to be placed automatically). In detail, there are conversions: ‘A1U2G3→M1 (methionine)’, ‘E4E5E6→Δ2 (an explicit identity/empty an amino acid (protein))’, ‘C7U8G9→L3 (leucine)’, ‘E10E11E12→Δ4’, ‘C13G14U15→R5 (arginie)’, ‘E16E17E18→Δ6’, ‘A19C20G20→T7 (tyrosine)’, ‘E22E23E24E25…→Δ8Δ9Δ10… (infinite identities)’ (in place p6).

Here, the associative law for Rs(4)2†, ([[]] 7,9;[[]] 4,6);[[]] 19,21 = [[]] 7,9;([[]] 4,6;[[]] 19,21), holds. In this regard, the practical utility of intermediate states such as those in Eqs (47) and (48) is unclear and less valuable because the associative law does not hold between morphism f(4→6), f(4→5), and f(5→6).

Similarly, for morphism fpo-pr (= f(6→7)); if the deletion of explicit ‘Δ’s from the r-th to the s-th coordinate (s,r: non-negative integers with s≤r; s,r = 0,1,2,…) of, say, token ‘Pr(6)2 is denoted ‘Pr(6)2;<< >>s,r’, the following manipulation is verified for ‘Pr(6)5 = [Δ0|M1Δ2Δ3L4R5Δ6Δ7Δ8T9R10Δ11Δ12L13M14||Δ15Δ16Δ16…] = (in place p6)’,

Pr(6)2†;<< >>2,3 = [Δ0|M1()2-3 L4R5Δ6Δ7Δ8T9R10Δ11Δ12L13M14||Δ15Δ16Δ17…].

In this way, Pr(6)2†;<< >>2,3;<< >>6,8;<< >>11,12 = [Δ0|M1()2-3L4R5()6-8 T9R10Δ11Δ12L13M14||Δ15Δ16Δ17…]. Then,

((Pr(6)2†;<< >>2,3;<< >>6,8<< >>11,12));<< >>15,∞

= [Δ0|M1()2-3L4R5()6-8T9R10()11-12 L13M14||()15()16()17…] =Δ0(M1)(L2)(R3)(T4)(R5)(L6)(M7)(inplacep7). (49)

The associative law ‘(<< >>2,3;<< >>6,8);<< >>11,12 = << >>2,3;(<< >>6,8<< >>11,12)’ holds for morphism fpo-pr (= f(6→7)), although the proof is omitted.

In general, the associative law is necessary for composition in category theory and seems to be satisfied for morphisms ft-sp (= f(4→6)), fpo-pr (= f(6→7)), and f(4→7)). The identity morphisms f(t-sp)0 (= f(4→6)0), f(po-pr)0 (= f(6→7)0), and f(4→7)0 (no operation) are also considered.

In summary, if a double-strand DNA of arbitrary length is given and is expressed as D(k)j (primary DNA sequence) or [D(k)j/D(k)j†] (double-stranded DNA sequences), then the following occurs: i) the firing of a morphism from f(1→2) and f(2→3) can be performed automatically; ii) then, in place p3, the appropriate order that determines what parts are introns and exons is necessary so that an adequate region of exons can be translated into amino acids (protein); iii) if that is conducted, then, for a sequence of bases, an appropriate adjustment for the composition of the complete sequence of triplets is necessary in place p4, and iv) the pathway either via f(4→5)—f(5→7) or via f(4→6)—f(6→7) can be performed automatically. As a result, an arbitrary D(k)j or [D(k)j/D(k)j†] can be translated into an amino-acid sequence (protein). For step iv), a visual graphic approach is possible using electronic tools that read/translate them.

§3–10. On a potential method to describe the protein sequences using the rotation group

In general, a sequence of amino acids contains biological information concerning the synthesis of various proteins. Conventionally, 20 amino acids such as ‘I (isoleucine), L (leucine), F (phenylalanine), G (glycine), S (serine), and R (arginine)’ exist in the human body and they are used as codings for protein synthesis. Here, we believe there are more than 20 different amino acids plus a ‘start amino acid’ ┴ (methionine (M) often plays this role), a ‘stop amino acid’ ┬, and a ‘do-nothing amino acid (an identity amino acid/protein) Δ’. They match up with the 23-fold phasor diagram on the Gaussian plane and the 23 polygon poles like the pentagon poles of Figs 4(B), 7(A), 7(B) and 9(B). Here, the ‘start amino acid’ ┴ acts as an order to start reading the amino-acid code; the ‘stop amino acid’ ┬ acts as an order to stop reading, and the ‘do-nothing amino acid (an identity amino acid/protein) Δ does nothing. The rotational group of order 23 {α0, α1, α2,…α21, α22} is defined as ‘αi;αj = αi+j (mod 23)’ with ‘α1 = 2π/23 (rad)’. Similar to instances of a bijection between <D(k)j> and the shape of the polygonal line of a single-strand DNA sequence, we infer that there is a bijection between <Pr(7)j> (from Pr(7)j, all ‘Δ’s other than the initial Δ0 (0-th Δ) and infinite trail ‘ΔΔΔ…’ are deleted) and the shape of the polygonal line of the amino-acid sequence. The detection of an amino-acid sequence from only the shape of its polygonal line is possible, and vice versa. However, we believe that the development of this idea from the viewpoint of interpretation needs more analysis concerning the higher usable forms, e.g., ┴ and ┬, which may better be placed symmetrically to the line that is drawn from protein Δ to the center of the 23 polygons. To some degree, this proposition is unrealistic because we were not able to provide a meaningful order for the 23 proteins for which an inverse of αi−1 that satisfies ‘αi−1;α1 = α1;αi−1 = α0’ could have more meanings than appears in the definition of Dj or Rj; the shape of the polygonal line for the inverse D(k)j† is immediately obtained from the polygonal line of the symmetrical position of ‘D(k)j’ around an arbitrary E0. For this reason, although it seems possible, the composition of the cyclic group using amino acids has to be curtailed at this stage.

Fortunately, for the transformation/exchange of sequences of amino acids (proteins), there is a considerable number of models that treat the manner of exchange using for example the rotational group based on the regular icosahedron, the 20 vertices of which are associated with the 20 amino acids. Therefore, the transformation between the amino-acid sequences may be suitably treated in this existing formalism.

As a result, the canonical central dogma may be describable in an EPN [Fig 11(B)] where individual tokens express one of the products including DNA, RNA, pre-mRNA, mRNA, and related biological products.

§3–11. A treatment of the central dogma using matrices (Naganuma’s theory of operation matrix)

To overview the rules developed for the present EPN model, we refer to our previous report. The following morphisms are assumed to express the behaviors of DNA/RNA sequences with some adjustments; in this regard, for the present description, ‘°’ means the left translation rule, ‘;’ operations are executed in diagrammatic order for all processes, and {}; f (= f°{}) morphism f acts on element in the argument of object {}.

(Appendix A in S1 Appendix)

Conventionally, for the standard PN, an incidence matrix is often used to express the flow of the markings. Although not an incidence matrix, the matrix represents the flow of processes associated with the canonical central dogma. The entries of this “incidence-matrix-like” matrix A are operators with tokens for the respective markings. Multiplications involving A are interpreted as a flow of process information. Using the list of morphisms (Appendix A in S1 Appendix) and a flowchart [Fig 11(B)], examples of the operators and the entries in A (and A’) are shown in Appendix B in S1 Appendix. This application is referred to as the “theory of the operation matrix” proposed by Naganuma where the ‘operation matrix’ contains operators as entries in a square matrix and mathematically expresses general physical aspects of various models, with a special focus on the theoretical/mathematical limitations of simple systems [50]. In our model, as a specific example of that theory, the operators that act on ‘D(k)j’s and ‘R(k)j’s are included in the entries of matrix A, and as a result, time flows associated with the canonical central dogma are expressed discretely as multiplications by matrix A provided all morphisms (transitions) for the flow [Fig 11(B)] are fireable. Details of the calculation are described in Appendix B in S1 Appendix.

§3–12. A treatment of the somatic recombination (VDJ recombination) for antibodies using the concept of colimit

We now turn our attention to a more advanced use of our concepts, specifically, the expression of the limit or colimit (‘tensor product’ by ignoring the arrows and terminal object) that may apply to somatic recombination (VDJ recombination) for antibodies [51]. That is, the V segment is the sequence V = [V1|V2|V3|…|Vw1||E|E|E|…]; in each part of ‘V1,V2,V3,…,Vi,…,Vw1’, except for the infinite tail of ‘E’s (||EEE…), each Vi (i = 1,2,…,w1) is also a sequence of bases that are parts of set V as follows. Suppose ‘Nv’ is the number equal to or greater than the maximum number of recognized non-E bases among V1,V2,…,Vw1(∈objectV); (50)

then, for example,

Vi = [C1|A2|…|G(Nv−1)|TNv||E(Nv+1)|E(Nv+2)|E(Nv+3)|…] = [C1|A2|G3|T4||E5|E6|E7|…], where the number of recognized bases is ‘Nv = 4’. That is, in a certain V, with ‘Nv = 4’, the number of recognized non-E bases is smaller than Nv, the coordinates being filled with explicit ‘E’s as in V3 = [T1|G2|T3||E4E5…] so that Nv (in this case ‘Nv = 3’) can be chosen equivalent among V1, V2,…,Vw1 (∈object V) with ‘VN ≥ V1, V2,…,Vw1’.

For a more practical example, we put ‘V3 = [A1|C2||E3E4…]’; we find that the sequence of bases V1, V2, and V3 belong to a unique object, V1=[C1|A2|G3|T4||E5|E6|E7|…]=[C1|A2|G3|T4||E5|E6|E7…](∈objectV),V2=[T1|G2|T3||E4E5…]=[T1|G2|T3|E4_||E5E6E7…](∈objectV),V3=[A1|C2||E3E4…]=[A1|C2|E3_|E4_||E5E6E7…](∈objectV), (51)

where the minimum Nv is ‘Nv = 4’ implying there are no ‘non-E’s on the right side of the Nv-th component in Eq (51). Note that in this case, Nv ≥4 suffices in satisfying condition (51).

Similarly, the D segment is the sequence D = [D1|D2|D3|…|Dw2||E|E|E|…], a direct combination of ‘D1,D2,D3,…,Di,…,Dw2’ except for the infinite tail of ‘E’s (||EEE…); e.g., D1 (i = 1,2,…,w2) is also a sequence of bases that are parts of object D. Let ‘ND’ be the number equal to or greater than the maximum number of recognized non-E bases among D1, D2,…, Dw2 (∈object D). For example,

D2 = [G1|…|CND||E(ND+1)|E(ND+2)|E(ND+3)|…] = [G1|A2|C3||E4|E5|E6|…],

where the number of recognized bases is ‘ND = 3’. Similarly, the J segment is the sequence J = [J1|J2|J3|…|Jw3||E|E|E|…], a direct combination of ‘J1,J2,J3,…,Ji,…,Jw3’ except for the infinite tail of ‘E’s (||EEE…); e.g., J1 (i = 1,2,…,w3) is also a sequence of bases of object J. Let ‘NJ’ be the number that is equal to or greater than the maximum number of recognized non-E bases among J1, J2,…, Jw3 (∈object J). Hence, as an example, we have

J2 = [A1|C2|…|GNJ||E(NJ+1)|E(NJ+2)|E(NJ+3)|…] = [A1|C2|T3|G4|A5||E6|E7|E8|…],

where the number of recognized bases is ‘NJ = 5’. ND and NJ must be counted in a similar manner as NV in object V.

Therefore, because the following limit or colimit Π is considerable as in the other place pk” (k”; an appropriate number), V⊗D⊗J = [V|D|J||EE…] in place pk” (the product ⊗ means that for suitable numbers Nv, ND, and NJ the sequences are glued together). Thus, ΠNV,ND,NJ=[V1|V2|V3|…|VNv||E|E|E|…]⊗[D1|D2|D3|…|DND||E|E|E|…]⊗[J1|J2|J3|…|JNJ||E|E|E|…], (52)

(∈ object Π; Π is the object of V⊗D⊗J with suitable Nv, ND, and NJ). In the above description, ‘Va⊗Db⊗Jc’ (a, b, c are appropriate non-negative integers) is for example an element (a Cartesian product) of the tensor V⊗D⊗J. Here, we introduce the rule that a sequence of infinite tails of ‘E’s (||EEE…) be written automatically for any product in this model and disregarded when we discuss attributes such as the colimit (or tensor product), in practical theorems in category theory. Note that in category theory, the tensor product is viewed as a sort of colimit of objects V, D, and J where the forgetful functor acts on V⊗D⊗J so that the initial and terminal objects are ignored. Hence, we have the following notation; for appropriate numbers Nv, ND, and NJ, ΠNV,ND,NJ=[V1|V2|V3|…|VNV||D1|D2|D3|…|DND||J1|J2|J3|…|JNJ||E|E|E|…], (53)

(∈ object Π; (co)limit V⊗D⊗J with an infinite tail of ‘E’s (||EEE…). Adjustments to the index number are necessary after trimming; however, we disregard strict counting of the index number provided that the respective bases are recognized rigorously.

Suppose that one of the elements of colimit (or tensor) Π is a Cartesian product as for {V3, D1, J2} denoted by [V3⊗D1⊗J2||EE…] in place pk”, where an infinite tail ‘||EEE…’ accompanies automatically the element. Being an arbitrary product, it does not break the definition of a tensor product provided in that the number of recognized bases are accurate; in the above case, ‘NV = 4’, ‘ND = 3’, and ‘NJ = 5’. As an example, given ‘V3 = [G1|C2|T3|A4|C5||E6|E7|E8|…], D1 = [T1|G2|C3||E4|E5|E6|…], and J2 = [C1|T2|A3|G4||E5|E6|E7|…]’, their Cartesian product is written {V3, D1, J2} = [V3⊗D1⊗J2||EE…] and Π4,3,5=[G1|C2|T3|A4|C5||E6|E7|E8|…]⊗[T1|G2|C3||E4|E5|E6|…]⊗[C1|T2|A3|G4||E5|E6|E7|…]=[(G1|C2|T3|A4|C5)(T6|G7|C8)(C9|T10|A11|G12)||E13|E14|E15|…]. (54)

Here, the infinite tail of ‘E’s (||EEE…) is automatically placed outside of the scope of the (co)limit (or Cartesian product). The projection from object V×D×J to that of V×D, D×J, V, D, and J are describable in accordance with the conventional definition of a category.

[Fig 12(A)]

10.1371/journal.pone.0302710.g012 Fig 12 Illustrations of a procedure for the recombination of an antibody using an EPN and conventional category theory.

(a). For reference, a procedure for the recombination of an antibody using compartments from segments V, D, and J is drawn as an EPN. In the present article, we mainly assume a ‘state machine’ where any transition has only a single input place and a single output place. However, this EPN does not comply with this rule. Using the map fInt{, } for compartments of the V, D, and J segments, the recombination of an antibody may be treated automatically if transition fInt{, } is free firing. Here, Vi×Dj×Jk (or Vi⊗Dj⊗Jk) is assumed to be a simple combination of V, D, and J. For the unique product Vi×Dj×Jk, there exist multiple pathways that commute in the diagram although actually, there exists a majority or minority between them owing to some biological mechanism. (b). In the diagram, V×D×J is composed as a limit of V, D, J from which the projection to V×D, D×J, V, D, and J are describable in accordance with conventional definitions of category theory. For example, π1,2V×D×J (projection from object V×D×J yields object V×D, etc). In this regard, we disregard any infinite tail of ‘E’s (||EEE…) of each DNA sequences. In the dual diagram, V×D×J is composed as a colimit of V, D, J where the direction of all projections is inverted. In the diagrams, the symbol for morphism (transition) ‘―|→’ is drawn as an ordinal arrow ‘→’ so as to be interpreted in the context of conventional category theory. For the composition of this EPN model, the morphism with transition | is also possible.

These manipulations are interpreted as the result of the following operation via the morphism for the combination morphism fInt{, } = {} ∪{} = {|}. Specifically, for the state ‘{Dj}(+){Jk} where (+) means the independent existence (or insertion) in the same place (in place pk1), fInt{Dj,Jk}=‘{Dj}∪{Jk}={[Dj||EE..]}∪{[Jk||EE…]}=[{Dj|Jk}||EE…]=[{DjJk}||EE…](inplacepk2)holds. (55)

Similarly, for the state ‘{Vi}(+){DjJk} where (+) means the independent existence (or inclusion) in the same place,

fInt{Vi, DjJk} = {Vi}∪{DjJk}: {[Vi||EE…]}∪{[DjJk||EE…]}

= [{Vi|DjJk}||EE…] = [{ViDjJk}||EE…] in place pk3 holds.

By iterating the map of this morphisms fInt{, }, the regions V, D, and J can be integrated into a unique sequence giving [ViDjJk||EE…]. (56)

[Fig 12(B)]

Note that because we regard object T as an object of tensor product V⊗D⊗J, simple sequences such as Eq (56) are not an element of object T but an element of object D (a simple base sequence with an infinite tail of ‘E’s). There may occur an instance for which an inverse of morphism fspl{, } for the splitting procedure is considered, The splitting morphism fspl{, } = {} ((+)) {} = {} (+) {} can be defined in accordance with Eq (29) with recognized tokens all included in the same place pk (hence, in this example, we can simply replace ‘((+))’ by ‘(+)’); e.g., for token ViDjJk (in place pk3), fspl{ViDj, Jk} = {ViDj//Jk} = [{ViDj}||EE…] (+) [{Jk}||EE…] = [ViDj||EE…] (+) [Jk||EE…] (in place pk). Because ‘fspl{Dj,Jk} = {Dj//Jk} = [{Dj}||EE..] (+) [{Jk}||EE…] = [Dj||EE..] (+) [Jk||EE…] (in place pk1)’, the following holds, ‘{{Vi//Dj}//Jk}=[Vi||EE…](+)[Dj||EE..](+)[Jk||EE…]’inthesameplacepk. (57)

Note that the associative law holds because the result is equivalent, {{Vi//Dj}//Jk}=[{Vi}||EE…}(+)[{Dj}||EE…](+)[{Jk}||EE…]={Vi//{Dj//Jk}}. (58)

In general, for morphisms fInt{, } and fspl{, }, the associative law holds, {{Dj}∪{Dk}}∪{Dl}={Dj|Dk|Dl}={{Dj}∪{{Dk}∪{Dl}}, (59)

{{Dj//Dk}//Dl}={Dj//{Dk//Dl}}, (60)

where j, k, and l are any appropriate non-negative integers. A category relation involving them is displayed in Fig 12(B).

Here, relationships between the morphisms are drawn although the infinite tails of ‘E’s are omitted in the display.

§3–13. Concerning an operation that perform indels of DNA sequences and its notation

For problems with mismatches in the index numbers (#remark 2) for the respective places pk (k = 1,2,…), almost all coordinates of D(k)j or R(k’)j and Rs(k)j seem to be simple; there may often occur instances for which the products of operations such as D(k)l, R(k’)l, and Rs(k”)m, D(k)m, R(k’)m, and Rs(k”)m may be regarded as being included in the same place pk in extreme cases where all tokens are indexed with the same natural number ‘k’ as (k). Hence, the problem (#remark 2) does not matter so much. This circumstance seems to contribute to simplifications as exemplified in the following scenario.

With the developed notation for the recombination of DNA sequences, the following rule may be established; let D(k)a and D(k)b (in place pk) be a certain finite DNA (or RNA; in this regard the place for DNA and that for RNA may be distinct with no specific use) sequence such as ‘D(k)a = [A1|T2|C3|G4]’ and ‘D(k)b = [G1|C2|T3|A4] (in place pk)’, and put ‘D(k)j = [G|C|T|A|C{D(k)a}{D(k)b}C|T|A|G||E|E|E|…] in place pk1’. In fact, the specific content is ‘D(k)j = [G1|C2|T3|A4|C5{A6|T7|C8|G9}{G10|C11|T12|A13}C14|T15|A16|G17||E18|E19|E20|…] (in place pk1)’. The morphism fexcl {//} is applied to D(k)j,

fexcl{}: [G|C|T|A|C//{D(k)a}//{D(k)b}C|T|A|G||E|E|E|…]

= [G1|C2|T3|A4|C5//{A6|T7|C8|G9}//{D(k)b}C14|T15|A16|G17||E18|E19|E20|…].

= [(G1|C2|T3|A4|C5){D(k)b}(C10|T11|A12|G13)||E14|E15|E16|…] (+)[{A1|T2|C3|G4}||EE…](inplacepk)’, (61)

=[(G1|C2|T3|A4|C5){D(k)b}(C10|T11|A12|G13)||E14|E15|E16|…](+)[{D(k)a}||EE…]. (62)

This type of manipulation may be of use to exclude parts of the DNA or RNA sequences. Conversely, for inclusion, the morphism finc performs the following manipulation; finc: [| | | | {} | | | ||E|E| |…]. For example, finc{D(k)a} yields ‘{D(k)j}=[G|C|T|A|C{}C|T|A|G||E|E|E|…](inplacepk)’,=[G|C|T|A|C{D(k)a}C|T|A|G||E)E|E|…](inplacepk). (63)

For both morphisms fexcl and finc, the associative law holds.

§3–14. Supplementary material concerning the concepts from the aspect of category theory

For all manipulations described above, the identity morphism performs nothing on any token. Thereby, the morphisms associated with combination, splitting, and insertion are considered to satisfy the postulate within category theory because associativity and the existence of an identity is met [8, 9]. For the above example, if the morphisms fInt, fspl, finc, and fexcl are defined at the same place pk (this may be discriminated/separated as ‘place pk1, place pk2, place pk3…’ when needed) and may be expressed in a single place pk, then all manipulations are performed in the same place pk. For genetic coding, almost all tokens at their most complex are combinations of the five bases (C, A, T, G, E) or (C, A, U, G, E), and moreover are based on the operations of the group W. That is, the operation of a morphism, fInt, fspl, finc or fexcl defined at place pk on tokens such as D(k)j, R(k’)j, and Rs(k”)j other than the double-stranded DNA [D(k)j/D(k)j†] and the amino-acid sequences (proteins) Pr(k)j is considered possible only at a unique place (e.g., place pk). We suppose that there is no contradiction stemming from differences in order and combinations of bases.

Although the treatments may have unknown difficulties that need, at least, further improvements, there is the potentiality that recombination of antibodies can be expressed as a form of colimit (tensor product) that may be linked to abstract algebraic products directly.

Generally speaking, in prokaryotic cells, because the bases are transcribed entirely, we believe that by using the appropriate notation the relationships based on Fig 7 of [Ref. 6; S1 File] may be confirmed:

Naturally, although Category D is based on the above illustration, in eukaryotic cells, a natural transformation and right/left adjunction may not always exist when splicing occurs. Moreover, if indels of bases occur or a more complex mechanism occurs, a natural transformation may not be adequately definable although for that, an exact proof is necessary.

In following the conventional concept of category, we note that the ‘natural transformation’ is one of its important concepts. As an example, suppose ‘morphism B(k)(j→l): D(k)j→D(k)l’ (the operator that changes the sequence of DNA/RNA in place pk) and ‘morphism B(k’)(j→l): ‘R(k’)j→R(k’)l’ (exactly, R(k’)j†→R(k’)l†) (the sequence of RNA is defined in place pk’) are given along with two functors F, G: Category C→D. Then, functor F functions as ‘morphism B(k)(j→l)→morphism F(B(k)(j→l))’. Similarly, functor G functions as ‘morphism B(k)(j→l)→morphism G(B(k)(j→l)) (∈ Category D)’.

Next, let α be a morphism αD(k)j: ‘F(D(k)j)→G(D(k)j), and put ‘αD(k)l: F(D(k)l)→G(D(k)l)’; then the following relationship holds: αD(k)l°F(B(k)(j→l)) = G(B(k)(j→l))°αD(k)j [Fig 13(A)]. We call α the ‘natural transformation’ mapping ‘α: F→G’.

10.1371/journal.pone.0302710.g013 Fig 13 Illustrations of a natural transformation and adjoint functors using DNAs and RNAs.

(a). DNA sequences D(k)j, D(k)l and ‘morphism B(k)(j→l): D(k)j→D(k)l’ (the operator that changes the sequence of DNA/RNA in place pk) along with ‘morphism B(k’)(j→l): ‘R(k’)j→R(k’)l’ (exactly, R(k’)j†→R(k’)l†) (the sequence of RNA is defined in place pk’), and two functors F, G: ‘Category C→D’ are drawn. They are transformed by α, αD(k)j: ‘F(D(k)j)→G(D(k)j), and outputted ‘αD(k)l: F(D(k)l)→G(D(k)l)’. The procedure is commutative, αD(k)l°F(B(k)(j→l)) = G(B(k)(j→l))°αD(k)j. The map α is called a ‘natural transformation’, defined as ‘α: F→G’. Additionally, for the above formula, more detailed relationships hold; F(D(k)j) = R(k’)j, F(D(k)l) = R(k’)l, G(D(k)j) = R(k’)j, and G(D(k)j) = R(k’)l. (b). Suppose that functor A transforms DNAs to RNAs, and functor B transforms RNAs to DNAs as a reverse transcription of a ‘retrovirus’. For two categories C (in place pk) and D (in place pk’), suppose functor A produces Category C→D and functor B produces Category D→C; then by functor A, D(k)j (∈Category C) is transformed into A(D(k)j) = R(k’)j. Here, if there is a morphism β given as ‘β: R(k’)→R(k’)l’, by functor B, R(k’)l is transformed as B(R(k’)l) = D(k)l, and hence there exists morphism ‘ω(β): D(k)j→D(k)l’, where ω is called the adjoint functor.

We infer that there exists a natural transformation based on a functor that produces changes in the sequence such as D(k)j in prokaryotes for which all sequences of DNA are copied. Conversely, a natural transformation may not be definable for some eukaryotes for which splicing occurs, and there may be instances for which inverse morphisms (functors) are non-fireable (definable).

Alternatively, suppose that functor A transforms DNAs to RNAs, and functor B transforms RNAs to DNAs in a sort of reverse transcription of a ‘retrovirus’ in the EPN exemplifying a flow from a primary single-strand DNA to a complementary RNA [Fig 14(A)]. Here, the morphisms in the EPN are based on the definition given in Fig 7 [Ref. 6]. Together, if we assume two categories C and D and functor A that maps ‘Category C→D’, and suppose functor B maps ‘Category D→C’ representing the reverse transcription of a retrovirus from RNAs to primary single-strand DNAs, then an adjoint functor can be defined [Fig 13(B)]. With definitions η: idc→BA, and ε: AB→idD, a relation for the left/right adjoint obtains in accordance with conventional category theory. However, the above explanation is ambiguous and there is scope for a more rigorous methodology and deeper investigation.

10.1371/journal.pone.0302710.g014 Fig 14 Two supplementary illustrations for EPNs.

(a). EPN illustration for the flow from a primary single-strand DNA to a complementary RNA is described. Noting that ‘morphism λ = f;τ’ and ‘morphism ‘λ−1 = τ−1;f−1’ are true, we demonstrate the diagram is commutative. (b). For an upper diagram-like EPN, the closure of the relationship between f1;f2 and g1;g2 to commutativity (f1;f2 = g1;g2) may produce the same token in the output place (where one of each is fireable in the diagram). If g1−1 and g2−1 are the duals of g1 and g2, respectively, scope exist where this commutativity is expressible alternatively in a lower diagram-like EPN. Here, ‘f1;f2;g2−1;g1−1 = Id’ holds provided that the above commutativity is not broken. At this stage, its precise definition is tentative and to avoid inaccuracies, we add no further remarks. Note that examples ‘f1 = f2 = g1 = g2 = Id’, ‘g1−1 = f1’, ‘g2−1 = f2’, and ‘g2−1 = f1, ‘g1 = g1−1 = f2 = Id’, do not satisfy ordinal ‘commutativity’ in a diagram-like EPN.

We verify the expression for the present EPN model in light of Yoneda’s lemma. First, in accordance with the canonical central dogma, we consider a certain ‘DNA product’, denoted a “Primer-RNA-D(k)j (= Primer-RNA-[E0|T1A2C3A4G5C6…TN-3GN-2AN-1CN ||EN+1EN+2EN+3…])-TATA box”. It includes a single-strand sequence D(k)j, which is the part to be translated, where the ‘primer-RNA’ is connected at the head, and a TATA box at the tail, which is necessary to transcribe from the primary DNA sequence D(k)j to D(k)j† (complement of D(k)j). Using a more general form, suppose ‘morphism f1: D(k)j→D(k)l’, ‘morphism f2: D(k)l→D(k)m’, and ‘morphism f3: D(k)j→D(k)m’. Then, using an indexed Category C that includes D(k)j, D(k)l, and D(k)m, a triangular diagram in the little Category C can be constructed [see Fig 15(A)]. For Category C, if we stipulate that ‘homset from a fixed object D(k)j to an arbitrary object D(k)l’ determines ‘hom(D(k)j, D(k)l)’, then this forms a set for which ‘morphism f2: D(k)l→D(k)m holds true [52]. Next, we consider the hom functor C(D(k)j, D(k)l) that transforms Category C to Set (Category set). For brevity, if we write ‘hA ≡ C(D(k)j, D(k)l)’, there exists a natural transformation α with action ‘α: hA (≡C(D(k)j, D(k)l))→F’. The hA also performs the following transformation. hA: ‘hom(D(k)j, D(k)l)→C(D(k)j, D(k)l)’, ‘f2→C(D(k)j, f2)’, and ‘hom(D(k)j, D(k)m)→C(D(k)j, D(k)m)’. For the above, additional relationships follow, specifically, the natural transformations ‘αX: C(D(k)j, D(k)l)→F(D(k)l)’, ‘αY: C(D(k)j, D(k)m)→F(D(k)m)’, and ‘α: C(D(k)j, f2)→F(f2)’ [Fig 15(A)]. At this moment, we regard ‘α: hA (≡C(D(k)j, D(k)l))→F’ as forming a functor Category [C, Set] where hA and F are objects with α a morphism (natural transformation), and we establish the functor category [C, Set] on which α acts, denoted by [C, Set](hA, F). In this case, we refrain from using RNA sequences because whether Category C is composable is ambiguous because Category C is assumed to include DNA sequences D(k)j and D(k)j†, and RNA sequence R(k’)j† in accordance with the canonical central dogma. In other words, if a combination of bases T and U occurs when we compose a category, it may be considered non-essential for instances for which D(k)j = [EATGEUTCGUEEE…] and that may cause contextual confusion. Hence, to avoid such instances, we confine our focus to only DNA.

10.1371/journal.pone.0302710.g015 Fig 15 Exemplified illustrations for Yoneda embedding using a biological system organized hierarchically.

(a). Given ‘morphisms f1: D(k)j→D(k)l’, ‘f2: D(k)l→D(k)m’, and ‘morphism f3: D(k)j→D(k)m’, an indexed Category C that includes D(k)j, D(k)l and D(k)m, and the triangular diagram in the little Category C are drawn. There, ‘homset from a fixed object D(k)j to an arbitrary object D(k)l’, denoted ‘hom(D(k)j, D(k)l)’, forms a set where ‘morphism f2: D(k)l→D(k)m is assumed. Next, using ‘hom functor C(D(k)j, −)’, a natural transformation α that acts as ‘α: hA (≡C(D(k)j, D(k)l))→F’ is definable. Then hA also performs the following transformation; hA: ‘hom(D(k)j, D(k)l)→C(D(k)j, D(k)l)’, ‘f2→C(D(k)j, f2)’, ‘hom(D(k)j, D(k)m)→C(D(k)j, D(k)m)’. The following relationships also exist: natural transformation ‘αX: C(D(k)j, D(k)l)→F(D(k)l)’, ‘αY: C(D(k)j, D(k)m)→F(D(k)m)’, and ‘α: C(D(k)j, f2)→F(f2)’. (b). With reference to “Yoneda embedding”, the function of organs, tissues, cells, intercellular activity, and genuine genetic activities can be described within the hierarchical-cluster formulation. There, an embedding into a nested structure from one or a de-embedding from a nested structure from another is considered also composable with the appropriate adjustments. This is because an object can be regarded as functor, and a morphism can be regarded as a natural transformation, and vice versa. In the diagram, system A includes multiple individuals such as 1A1 (object) and 1A2 (object), and morphism f1. However, in view of Yoneda embedding, 2A11 (object) and 2A12 (object) are functors and morphism f11 a natural transformation. Together, 2A11 and 2A12 include object cells 3A111 and 3A112, and so on. One interaction between 3A111 and 3A112 may be written as a morphism (functor) f111 and so on. The cells 3A111 and 3A112 have DNAs, here denoted 4D1111 and 4D1112, and so on. The morphism between 4D1111 and 4D1112 such as B(k)(j→l) was illustrated before as an operator that converted one DNA sequence D(k)j into another D(k)l using ω1, ω2, ω3,…, and these morphisms may also be viewed as functors from the Yoneda embedding. In addition, more detailed embeddings or de-embeddings from 4D1111, 4D1112,… where 4D1111, 4D1112,… may be viewed as functors at the extremes. However, this diagram provides only a rough outline of a primitive idea for the application of Yoneda’s lemma using the material of the present article.

For arbitrary objects D(k)j, D(k)l, and D(k)m in Category C, arbitrary functor ‘f: C→Set’, and functor category [C, Set], we have Yoneda’s lemma using DNA sequences [8, 9, 52]; [C,Set](hA,F)≅F(D(k)j)(≅meansisomorphism). (64)

Moreover, according to conventional wisdom, for arbitrary objects D(k)j, D(k)l, and D(k)m in Category C, and arbitrary functor ‘f: C→Set’, Yoneda’s embedding holds; that is, [C,Set](C(D(k)j,D(k)m),C(D(k)l,D(k)m))≅C(D(k)l,D(k)j). (65)

Here, natural transformations α’: C(D(k)j, D(k)m)→C(D(k)l, D(k)m) and α”: D(k)l→D(k)j are assumed, and isomorphism α’≅α” holds. From Eq (65), transformations between one DNA sequence and other different structures may be embedded in a nested structure or de-embedded from a nested structure. With the repetitive use of this principle, nesting or de-nesting of structures from living creatures including human beings may be possible.

[Fig 15(B)]

By adding more explanation, according to “Yoneda embedding”, a mere object can be regarded as a functor, and a mere morphism may be regarded as a natural transformation implying that a function of a specific compartment and that of a higher organ can be defined according to their levels. That is, the function of organs, tissues, cells, as well as intercellular activities and genuine genetic activities may be described in a unique embedded diagram [Fig 15(B)] as a hierarchical-cluster formulation (#remark 3) although this is only a primitive idea and a rigorous investigation is necessary.

The characteristics of Yoneda’s embedding may be translated into various words. For example, for a living body, it may be found peculiar that each organ may behave more selfishly than its entire body, individual tissue more selfishly than their organs, cells more selfishly than their tissue, DNA having more precedence than its cells, and individual compartments of DNA (cistrons) having more precedence over the full length of a DNA strand. This may be an alternative expression of C. R. Dawkins’s concept of the ‘selfish gene’ [53] in a category using a hierarchical-cluster formulation.

We turn our attention next to the concept of ‘Kan extensions’. An initial part of the procedure for the central dogma may be written in the form of the ‘left Kan extension’ [9]. In viewing [Fig 16(A) and 16(B)], which were obtained from a simplification of Fig 11(B) or Fig 14(A), the morphism that offers the complimentary sequence from the primary single-strand DNA ‘D(k)j→D(k)j†’ denoted by ‘f(D(k)j→D(k)j†)’ may be a functor F. Together with the functor, the morphism that produces this change from DNA to RNA ‘D(k)j→R(k’)j†’ written as ‘f(D(k)j→R(k’)j†)’ may be a functor G. Thus, the procedure from the complementary DNA to the subsequent complimentary RNA ‘D(k†)j†→R(k’)j†’ can be expressed in two ways: one a left Kan extension, which is the pair <F†G, η>, with η: G→F†G°F (= F;G;F†) and the other a right Kan extension, which is the pair <F‡G, ε>, with ε: F‡G°F (= F;G;F‡)→G. The left Kan extension of G along F is also denoted LanFG (= Lanf(D(k)j→D(k†)j†)f(D(k)j→R(k’)j†)). Moreover, the right Kan extension, which is the dual of the left Kan extension of G along F where arrows of natural transformation are inverted, is also denoted by RanFG (= Ranf(D(k)j→D(k†)j†)f(D(k)j→R(k’)j†)). Furthermore, the concept of the left Kan extension can be exchanged for the right/left adjunction: F† of the left Kan extension is formally written ‘F†┤F’, which reads F† is the left adjunct to F. Similarly, F‡ of the right Kan extension is formally written ‘F├F‡’, which reads F‡ is the right adjunct to F [9].

10.1371/journal.pone.0302710.g016 Fig 16 Illustrations of the left and right Kan extensions using DNAs and RNAs.

(a). Let functor F be defined from Category X (for the primary single-strand DNA sequences; D(k)j) to Category Y (for the complementary DNA sequences; D(k†)j†). Additionally, suppose functor G is defined from Category X (for ‘D(k)j’s) to Category Z (for ‘R(k’)j†’s). Then, the procedure from a primary DNA to the subsequent complimentary RNA ‘D(k)j→R(k’)j†’ is expressed in two ways; one is the left Kan extension, the pair <F†G, η>, with η: G→F†G°G (= F;G; F†). The left Kan extension of G along F is also denoted LanFG (= Lanf(D(k)j→D(k†)j†)f(D(k)j→R(k’)j†)). (b). The right Kan extension of G along F is also denoted RanFG (= Ranf(D(k)j→D(k†)j†)f(D(k)j→R(k’)j†)). Additionally, ‘The pair <F‡G, ε>, with ε: F‡G°F→G’, is drawn.

Similarly, the flow of the former part of ‘R(k’)j†→Rs(k”)j†’ (the change from complimentary RNA in place pk’ to that of pre-mRNA in place pk”), and the latter part of that (the change from pre-mRNA to mRNA) may also be seen as the left and right Kan extensions with further attributes, the details of which we refrain from discussing at this stage.

This is only one of the potential applications for natural transformations, the left/right adjunct, Yoneda’s lemma, and left/right Kan extensions. Although limited within parts and with details omitted, these concepts with future research are expected to play a valuable role in our model as well. As seen in the above, our hybrid model expresses aspects of the canonical central dogma. In particular, infinite m-tuple places are of practical use in composing the model, and the multiple placements of ϕ as indicated by {ϕ}p…, based on Eqs (12) and (13) are assumed implicitly.

§4. Results

The present hybrid model comprises: 1) elements of a group regarded as a token of PN; 2) objects of a category that are replaced by places of PN——as a result, broader usability is given to the conventional PN along with more logical consistency so that the canonical central dogma is described; 3) as a useful visual tool in future genomics, a square pole (rather than a pentagonal pole) is devised that enables the unique identification of single-strand DNA sequences solely from the shape of their respective polygonal lines, and vice versa—additionally, a complemental sequence (parts) may be easily identified; 4) a novel use of creation/annihilation morphisms that may generate/erase tokens freely via an identity token, that is usable to adjust the number of tokens; 5) the conversion between a single-strand DNA sequence and that of RNA is performable simply via the Cartesian product ‘Z5×Z2×…’ within the group-theoretical concept; 6) the somatic recombination (VDJ recombination) for antibodies concretely expressed in categorical concepts, specifically, the (co-)limit; 7) the novel ‘identity protein Δ’, translated from a codon (a triplet) of identity bases ‘EEE’, that provides a conceptual advance on our previous presentation of the canonical central dogma to a more elevated level (practically, to protein synthesis); 8) the incidence matrix-like matrix A that includes operators (morphisms) as coordinates so that with reference to Naganuma’s ‘Theory of operation matrix’ proposal only multiplication of A can yield a dynamic flow central to the canonical central dogma, and 9) basic topics regarding the canonical central dogma being displayed concretely using conventional category theory concepts such as ‘adjoint’, ‘adjoint functor’, ‘natural transformation’, ‘Yoneda’s lemma’, and ‘Kan extension’ that may help readers to comprehend the model and to serve advocates in future proceedings of this field. These ideas also provide more advanced tools that may be added to our previous model concerning nucleic-acid-base sequences.

§5. Discussion

A hybrid structure of an extended PN and a group (as one of the groups and their related products) was demonstrated using simple examples to broaden its potential application to dynamic phenomena. In summary, from a semantic viewpoint, the highlights of our model are the following:

i) an extended PN (EPN) structure that is closed with respect to the category postulates, in which the composition of morphisms and an identity morphism are defined, was displayed as exhibiting dynamic phenomena modeled as a stream of countable tokens that reflected physical attributes/states in the world;

ii) abstract algebraic characteristics were displayed visually using tokens based on a group or related products having inverse elements (monoidal structure with some inverse elements);

iii) annihilation/creation morphisms were introduced to adjust the number of tokens/to broaden the reachability of the EPN;

iv) as a developed example using category concepts, the DNA/RNA sequence was expressed graphically as a 3-dimensional infinite polygonal line, a prototype of which was suggested in our previous report [Ref. 6] but was insufficiently developed and hence re-designed in a more comprehensive form. A method to visualize translations from a sequence of codons into a corresponding amino-acid sequence (protein) was also illustrated using the conventional codon table [Fig 11(A)]; and

v) the potential applicability of category theory is too general to be applied to concrete phenomenon but can be modified in a manner that treats in at least a more specified manner physical aspects slightly distinct from conventional ones.

In §3, if integration, insertion, division, deletion, and exclusion for tokens do not occur, as for example in Fig 11(B), the EPN uses only D(k)j, R(k’)j, Rs(k”)j, and related bases. The process associated with the canonical central dogma from place p2 to place p5 in Fig 11(B) (from single-strand DNA to mRNA) may be expressible in a unique place p where all morphisms such as f(2→3), f(3→4), and f(4→5) are defined only within place pk (Note that D(k)j, R(k’)j, and Rs(k”)j are products that are obtained by an operator such as B(k)j or B(k)(j→l) accessorized with a constant D0, as in Eq (33)). This was expressed in our previous work [Ref. 6]. Hence, the composition of the EPN model using multiple places and visualizing the flow of the canonical central dogma is one of the main objectives of the present article although they may be optional.

It may be peculiar, in the present article, that the binary compositions (operations) for two tokens such as a(k)i*a(k)j or (a(k)i●)*(a(k)j●) are not postulated although the composition of two tokens can be defined. Hence, another rule arises where another unique token may be derived from the composite of two tokens as an element of group or related products. Specifically, the composition of two tokens is non-operational because D(k)j and D(k)l (the sequence of DNA) are not operators in an exact meaning. Clearly, ‘D(k)j = D0;B(k)(0→j)’ and B(k)j (= B(k)(0→j)) are similar products where the ‘D(k)j’s are accessorized products of ‘B(k)j’s that may be obtained by adding a constant D0 on the head of ‘B(k)j’s, i.e., ‘D0·B(k)j’. These treatments among tokens would also be definable, and there would be room where more advanced definitions or compositions are performable; for example, Formula (55) may be formulated as a bi-functor or 2-category and more sophisticated systematization may be possible. Here, the changeable number of tokens may behave in a more flexible manner. On this possibility though, we refrained from saying more and thereby avoid uncharted waters. We believe a rigorous study is warranted in future research.

In the previous illustration, a simple formulation was intended to gain a more exhaustive treatment for the description of biological phenomena. For that purpose, despite a tentative trial, this article showed how the group and related concepts with the PN formalism can be hybridized in a simple manner, especially by regarding elements of the group as tokens of the PN in places that have corresponding group postulates. Here, two types of morphisms (actually a complex of transitions, arcs, and functions) are presented; one is for the inner morphism for an ordinal group operation (binary composition), and the other is for the trans-place morphism being indexed with a category-theoretical operation where an element of a group is transformed/transported from one place to another place. With this context, a group or category-theoretical operation may be viewed visually in the EPN formalism, in parallel, distributively, asynchronously or dynamically. While peculiar to some extent, the annihilation and creation morphisms were introduced to the mix. Here, the ‘a(k)0↔ϕ conversion’ seems to have similar features of a bijection. This relationship is based on the uniqueness of the terminal object 1 and the initial object ϕ in category theory. However, conventionally, ϕ means the empty set [8, 9]. In our model, we gave ϕ the meaning of an implicit identity that may stem from an explicit identity a(k)0, where it is permissible that ϕ is found freely in any place pk. The ϕ is uncountable; therefore, ϕ+ϕ+ϕ+…+ϕ = ϕ holds. That means that the infinite explicit identity a(k)0 may be obtained via the creation morphism; e.g., ‘ϕ→a(k)0’ and ‘two ϕ’ provide two a(k)0s as in ‘ϕϕ→a(k)0 (+) a(k)0’ (in place pk). Here, for convenience, the conversion between ‘a(k)0 ↔ ϕ’ is defined partially and locally in their respective places. In the genetics example (molecular biology) of [6], the relationship ‘E↔()’ is understood to have similar characteristics where the ‘explicit E’ corresponds to object ‘1’, and the ‘implicit ()’ also corresponds to object ‘ϕ’. However, in our model, () is taken to be countable in a duplicated manner so that () () …() may be infinite, emphasizing the point that ϕ or () in the present report is different from ordinal empty ‘ϕ’ where expressions using multiple symbols like ‘ϕϕϕ…’ are not used. We hope that, while these exact roles and characters are vague at this stage, this rule yields other as-yet-unknown conveniences.

However, it is expected that various sorts of group operations may at least be placed and performed in parallel, dynamically, and visually, preserving their respective postulates as groups or related products on a unique plane, and developments may be integrated into a unique form.

The example presented for DNA in §3 is the simplest case that draws on the essential concepts based on the model we suggested in previous work [6]. Here, the previous static model for DNA was updated in a dynamic formulation with an exhaustive and slightly higher conceptual description, in which, with the further examples, natural transformation and right/left adjunction are introduced.

In §3, the vector-like Cartesian product was treated, especially within the hierarchical-cluster formulation preserving their asynchronous, in-parallel, dynamic characteristics. We believe these attempts highlight the potential for integration into (molecular) biology for this sophisticated model with its rigorously strict mathematics. Moreover, the EPN model brings the inclusion of incidence-like mk×nk matrices (e.g., A,B,…) as tokens in place pk for which a ring is defined and addition and multiplication are defined as index operations. There, the binary addition as an inner-place morphism, denoted ‘fk:[{A}+{B}] = A+B’, and similarly, multiplication, denoted ‘fk:[{A}×{B}] = AB’, may also be performable in the same place pk. Provided that there exists a morphism f(k→l): mk×nk matrix Ak→ml×nl matrix Al from place pk to place pl, this operation yields the transposition of matrix Ak if ‘ml = nk, nl = mk’ is also postulated. For another example, if ‘mk = nk’ holds, and place pl includes only diagonalized mk×mk matrices, the morphism f(k→l) means the diagonalization of the mk×mk matrix Ak in place pk into a ml×ml matrix Al in place pl. In summary, these may express a sequence of transformations among certain matrices in the EPN model although there remains a large scope for improvements. We believe that with some appropriate devices, the respective places in the EPN may hold group, ring, field, and other similar structures with inverse morphisms, and the formalism may lead us to more general, as-yet unknown perspectives in natural science with a complete exhaustive approach.

We envisage a potential utility of the expression for the left and right Kan extensions if a pair of functors for certain biological procedures is found [9]. If there are two arbitrary functors and objects (places) where the following relationships are satisfied on tokens Dj, Xj, and Yj in the flow of the canonical central dogma, such as Dj→Xj and Dj→Yj, there may exist a right Kan extension ‘Ran(Xj→Yj): Xj→Yj’, and a left Kan extension ‘Lan(Xj→Yj)’. There is the potential where unknown characteristics may be revealed as a product of left and right Kan extensions of two functors, although the details are unclear at this stage.

Finally, the use of unit ‘1’ in Descartes’s geometry may be one of the first applications of the binary operation of group where ‘n;n;n;…;n = n;n = n’ and ‘n = n;n = n;n;n;…;n’ are demonstrated multiple times so that the formula ‘a3+2ab+3a/b2’ is adapted entirely in three dimensions as ‘a3+2ab·1+(a/b2)·14’. With Descartes’ unit ‘1’, 1 acts on element 1 to give 1 and also acts as the inverse element of 1.

Inevitably, at this initial stage of development, our proposal to incorporate category theory and EPN into the algebraic formulation of biology must be understood in the context of significant limitations. First, unavoidably, the complex systems or phenomena need, in general, very complex PN constructions, and sometimes they do not provide an appropriate systematization of the PN. With regard to (molecular) biology, it may be difficult or impossible to compose a well-defined and well-behaved model. The PN has a linear characteristic; however, non-linear phenomena are often observed. Hence, to what level this model is applicable is unclear. In the PN, matrices such as incidence matrices are often used. However, this tool needs substantially large weights that could produce other problems.

Second, the scope for employing the natural transformation and right/left adjunction seems to be ambiguous. In prokaryotic cells, the entire bases of DNA are transcribed into mRNA. This may reserve a certain order that leads to the reversibility of biological phenomena. If sustained, we envisage that the right/left adjunction may play a role between the conventional central dogma (DNA→RNA→mRNA) and the retrovirus that performs the reverse transcription (RNA→DNA). However, because indels and the splicing procedure in eukaryotic cells break the condition for the natural transformation and the right/left adjunction to exist, the irreversibility of cell differentiation is often observed as a consequence in biological creatures. If there is a limitation for functors, they cannot be systemized as objects (functor category) that can be used to compose hierarchical structures in some abstract algebraic manner; that may also mean an impossibility for cluster-based constructions in mathematical models of biological creatures. In other words, the possible non-existence of natural transformation and right/left adjunction may parallel the increase in entropy or other sorts of loss of order. Additionally, in the present model, some components emerge or are eliminated freely and that may also require more complex conditions for their mathematical formulation. This issue needs to be investigated in future studies.

Third, topics regarding ‘T-invariance (transition-invariance)’ and ‘P-invariance (place-invariance)’ are often discussed and often play an important role in the standard PNs but have not been introduced in the present article. One reason is that for T-invariance, a cyclic loop among objects is often incompatible with the diagrams of category theory. In these diagrams, ‘commutativity’ and ‘uniqueness of a morphism except for isomorphism’ have important meanings for the composition aspects of the theory; therefore, it is problematic if the composition of a cyclic loop using objects and morphisms is often difficult or non-essential. Our potentially compensatory idea is the following; in a diagram-like EPN, if f1;f2 and g1;g2 commute (f1;f2 = g1;g2) and therefore produce the same tokens in the output place, then commutativity may alternatively be expressed supposing g1−1and g2−1 are duals of g1 and g2, respectively. Therefore, ‘f1;f2;g2−1;g1−1 = Id’ may hold under the condition that the above commutativity is not broken [see Fig 14(B)]. We envisage that this definition using cyclic loops is a ‘T-invariant-like preserved’ value in the present EPN model.

Similarly, P-invariance may be composable precisely because the number of tokens in the present EPN model can be systemized as an ‘invariant value’ that contains the changes in the number of tokens via the annihilation/creation morphism. Essentially, in the present EPN, assuming a ‘state machine’ and following changes in the number of tokens is possible, a law related to the invariant value may be established that governs the dynamic mechanics with strong consequences. Here, the incidence matrix-like products may play an important role with regard to the behavior of tokens (markings of the EPN). Further investigation is desired.

Fourth, the conditions for the respective places that stipulate the class to which the elements belong dictate overall processes. In category theory, for the composition of two or more morphisms, the target object and source objects must match. However, this postulate (compositionality between two objects) may be hard to fulfill if the morphisms are selected arbitrarily. Additionally, concepts such as limit, colimit, and tensor product are considered important. Therefore, these issues need to be explored.

Fifth, instances may occur where the self-referential paradox is unavoidable. For example, let R(k’)j● be a certain token of a clinical disease state; if some parts of the clinical phenomenon are explained from a genetic viewpoint, the global state R(k’)j● of a patient must include at least partially a token D(k)j● (base sequences of DNA) or its coordinate. In this case, if some part of D(k)j has multiple biological roles, multiple biological-related outputs may be produced. There is no assurance whether any bases of the genome play a single role for a unique function. If some bases play multiple roles, the global clinical disease states must include multiple coordinates that stem from a unique part of the bases. Hence, such states should include at least D(k)j or its coordinates and in extremes, the token R(k’)j● must include a token D(k)j● (base sequences of DNA) as a component. This line of reasoning derives from Cartesianism. Apart from the above issue, self-referential instances may occur in the coordinates where the same coordinates may be duplicated in some manner. In general, whether a certain token R(k’)j● (clinical disease states of a person) includes duplicated coordinates is extremely difficult to find because in most cases, the illness and results of a patient are often cloaked in another compartment or coordinates. In general, to our knowledge, in the composition of category theory, this contradiction issue is often avoided preliminarily and carefully at the stage of definition. In this regard, the word ‘little’ category is often used to avoid logical contradictions. In living bodies, feedback systems often cannot avoid self-referentials. Moreover, the areas where self-referential phenomena occur are considered to have more important meaning for systems in complex objects/creatures. Hence, it seems to us that the area to which non-self-referential system/tools apply is considerably limited. Complete linearity seems to be needed in objects such as cells, organs, and living bodies so that non-self-referential systems/tools can explain phenomena mathematically or completely. Nevertheless, the perspective of category theory may provide potential guidelines, viewpoints or clues to predict, analyze or comprehend complex phenomena/systems of such as living creatures. Ultimately, we may not be able to discriminate whether a certain token R(k’)j● includes only independent coordinates. For this reason, the display of integration/splitting of clinical disease states has a problem in that contradictions from paradoxes and self-referential issues are inherited. If parts of the coordinates are included in multiple tokens R(k’)j● and R(k’)l● in a duplicated manner, using these coordinates as factors that yield other results is inconvenient.

Sixth, for processes in living creatures, whether a natural transformation exists is ambiguous. In (molecular) biology, from a certain viewpoint, Eq (64) seems to express a potentially valuable message: the number of primary DNA sequences ‘D(k)j’ and that of their natural transformations α are equivalent, and the number of elements F(D(k)j) in its set and its function (order) may be a bijection. To us, Yoneda’s lemma (64) may potentially display the function of DNA ‘D(k)j’ and other biological functions and products including the canonical central dogma and the activities of cells, tissues, and organs. Although this may be only in appearance, a strict investigation is needed in the future. Furthermore, Eq (65) may be interpreted as biological orders/activities that may translate into layered structures. There may be a resonance or quasi-isomorphism between the activity of DNA and that of cells, organs, and living creatures. However, complete linearity in their phenomena is necessary for the enactment described by Eqs (64) and (65) in living bodies. However, biological mechanisms have a further complexity.

Even for DNA, misreading or errors are commonplace phenomena, and precise maps of orderings from sequences of DNAs and other processes seem rather rare phenomena in living bodies. In Fig 15(B), described before (#remark 3), smaller objects that are composed of a DNA sequence (D(k)j) may include also compartments of a larger DNA sequence (D(k’)l) as if program A invokes programs from program A itself within the same sequence of invocations (self-invoking) much like the programming language ‘Pascal’ [54, 55], which is composed of embedded structures [Fig 15(B)]. This self-invoking of the same DNA sequence such as a compartment of a single-strand DNA (D(k)j in place pk) invoking an order to another compartment of the same DNA (D(k)j) may occur casually in living creatures. Although such instances are considered expressible as an embedded structure [Fig 15(B)], they belong to non-linear phenomena and/or self-referencing phenomena in living bodies that also imply potential contradictions or that applying the EPN model is in principle impossible. Therefore, strict limitations and careful judgment are considered necessary for the treatment of natural transformations, Yoneda’s lemma, Yoneda embedding, and right/left adjunction in the EPN model. We believe that one of the simplest candidates in which to observe phenomena to confirm the connection between living structure and mathematical laws is prokaryotic cells because their transcription from DNA/RNA to amino-acid sequences (proteins) is simple. In addition, it seems important to us that while Fig 15(B) may not hold precisely, the existence of functors between cells may be assured because, ordinarily, the entire sequences of DNA are equivalent in a single human being. This includes the occurrence of indels without complex splicing procedures. We believe that by considering identity units for the respective levels such as an identity base E for bases, an identity protein Δ for proteins, an identity cell □ for cells, an identity organ ◎ for organs, and an identity individual for individuals, the functor comprehension of a human body and the human community in a hierarchical-cluster form is possible [Fig 15(B)]. Therefore, the issue of possible duplication of coordinates and self-referencing in self-invoking expressions may be a potentially crucial problem; if possible, contradictions arising from duplicated coordinates should be investigated. There is, in principle, the possibility that the issue is insolvable.

Seventh, the visualization of the PN is envisaged to require more advanced abstract algebras such as Boolean algebra, Lie algebra, and calculus. For the moment, restraint is exercised because treating an unknown complex problem seems to quickly reveal many difficulties. Further exploration is desired.

Unfortunately, our approach is at present nascent, and the above issues are outside our area of expertise. However, we believe that our attempts, including the monoidal category expression of the PN, will contribute to exploring biological processes in a more sophisticated way through the application of the PN, groups, and related concepts. With a more well-conditioned approach and a more rigorous methodology, hopefully performed by mathematical researchers, further advances may be accomplished in the future.

§6. Conclusions

Despite the lack of maturity and incompleteness of our methodology, the potential applicability of our hybrid model based on category theory and EPNs was illustrated using molecular/genetic biology input. Our simplistic dynamic/visual approach may yield, through additional studies, an abstract algebraic formulation.

Supporting information

S1 File Citations for reference files are displayed.

(PDF)

S1 Appendix (DOCX)

The authors acknowledge Masahiko Tsuka, Daisuke Yasugi, Kaoru Sakamoto, Kazuo Yamada, Takashi Oshimo and Keiko Kojo for providing useful advice. We thank Richard Haase, Ph.D., from Edanz Group (https://www.edanz.com) for editing a draft of this manuscript.

10.1371/journal.pone.0302710.r001
Decision Letter 0
Landenmark Hanna Staff Editor
© 2024 Hanna Landenmark
2024
Hanna Landenmark
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
Submission Version0
16 Oct 2023

PONE-D-23-19401Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Towards an abstract algebraic formulation of molecular/genetic biologyPLOS ONE

Dear Dr. Sawamura,

Thank you for submitting your manuscript to PLOS ONE. After careful consideration, we feel that it has merit but does not fully meet PLOS ONE’s publication criteria as it currently stands. Therefore, we invite you to submit a revised version of the manuscript that addresses the points raised during the review process.

Please see the comments from two reviewers below. Please note that there is no requirement to cite any papers recommended by the reviewers, but that you may take these into account if you feel that they are useful context for your work.

Please submit your revised manuscript by Nov 27 2023 11:59PM. If you will need more time than this to complete your revisions, please reply to this message or contact the journal office at plosone@plos.org. When you're ready to submit your revision, log on to https://www.editorialmanager.com/pone/ and select the 'Submissions Needing Revision' folder to locate your manuscript file.

Please include the following items when submitting your revised manuscript:A rebuttal letter that responds to each point raised by the academic editor and reviewer(s). You should upload this letter as a separate file labeled 'Response to Reviewers'.

A marked-up copy of your manuscript that highlights changes made to the original version. You should upload this as a separate file labeled 'Revised Manuscript with Track Changes'.

An unmarked version of your revised paper without tracked changes. You should upload this as a separate file labeled 'Manuscript'.

If you would like to make changes to your financial disclosure, please include your updated statement in your cover letter. Guidelines for resubmitting your figure files are available below the reviewer comments at the end of this letter.

If applicable, we recommend that you deposit your laboratory protocols in protocols.io to enhance the reproducibility of your results. Protocols.io assigns your protocol its own identifier (DOI) so that it can be cited independently in the future. For instructions see: https://journals.plos.org/plosone/s/submission-guidelines#loc-laboratory-protocols. Additionally, PLOS ONE offers an option for publishing peer-reviewed Lab Protocol articles, which describe protocols hosted on protocols.io. Read more information on sharing protocols at https://plos.org/protocols?utm_medium=editorial-email&utm_source=authorletters&utm_campaign=protocols.

We look forward to receiving your revised manuscript.

Kind regards,

Hanna Landenmark

Staff Editor

PLOS ONE

Journal requirements:

When submitting your revision, we need you to address these additional requirements.

1. Please ensure that your manuscript meets PLOS ONE's style requirements, including those for file naming. The PLOS ONE style templates can be found at 

https://journals.plos.org/plosone/s/file?id=wjVg/PLOSOne_formatting_sample_main_body.pdf and 

https://journals.plos.org/plosone/s/file?id=ba62/PLOSOne_formatting_sample_title_authors_affiliations.pdf

2. In your Data Availability statement, you have not specified where the minimal data set underlying the results described in your manuscript can be found. PLOS defines a study's minimal data set as the underlying data used to reach the conclusions drawn in the manuscript and any additional data required to replicate the reported study findings in their entirety. All PLOS journals require that the minimal data set be made fully available. For more information about our data policy, please see http://journals.plos.org/plosone/s/data-availability.

""Upon re-submitting your revised manuscript, please upload your study’s minimal underlying data set as either Supporting Information files or to a stable, public repository and include the relevant URLs, DOIs, or accession numbers within your revised cover letter. For a list of acceptable repositories, please see http://journals.plos.org/plosone/s/data-availability#loc-recommended-repositories. Any potentially identifying patient information must be fully anonymized.

Important: If there are ethical or legal restrictions to sharing your data publicly, please explain these restrictions in detail. Please see our guidelines for more information on what we consider unacceptable restrictions to publicly sharing data: http://journals.plos.org/plosone/s/data-availability#loc-unacceptable-data-access-restrictions. Note that it is not acceptable for the authors to be the sole named individuals responsible for ensuring data access.

We will update your Data Availability statement to reflect the information you provide in your cover letter.

[Note: HTML markup is below. Please do not edit.]

Reviewers' comments:

Reviewer's Responses to Questions

Comments to the Author

1. Is the manuscript technically sound, and do the data support the conclusions?

The manuscript must describe a technically sound piece of scientific research with data that supports the conclusions. Experiments must have been conducted rigorously, with appropriate controls, replication, and sample sizes. The conclusions must be drawn appropriately based on the data presented.

Reviewer #1: Yes

Reviewer #2: Yes

**********

2. Has the statistical analysis been performed appropriately and rigorously?

Reviewer #1: Yes

Reviewer #2: N/A

**********

3. Have the authors made all data underlying the findings in their manuscript fully available?

The PLOS Data policy requires authors to make all data underlying the findings described in their manuscript fully available without restriction, with rare exception (please refer to the Data Availability Statement in the manuscript PDF file). The data should be provided as part of the manuscript or its supporting information, or deposited to a public repository. For example, in addition to summary statistics, the data points behind means, medians and variance measures should be available. If there are restrictions on publicly sharing data—e.g. participant privacy or use of data from a third party—those must be specified.

Reviewer #1: Yes

Reviewer #2: Yes

**********

4. Is the manuscript presented in an intelligible fashion and written in standard English?

PLOS ONE does not copyedit accepted manuscripts, so the language in submitted articles must be clear, correct, and unambiguous. Any typographical or grammatical errors should be corrected at revision, so please note any specific errors here.

Reviewer #1: Yes

Reviewer #2: Yes

**********

5. Review Comments to the Author

Please use the space provided to explain your answers to the questions above. You may also include additional comments for the author, including concerns about dual publication, research ethics, or publication ethics. (Please upload your review as an attachment if it exceeds 20,000 characters)

Reviewer #1: 1. In Section 2. Illustrations of hybrid models based on category theory and EPN, each concept of petri nets should be described with the help of an example, as this is not a standard Petri net.

2. The format of the formulas seems not standard.

3. Is there a tool that can support the modeling of this kind of Petri nets?

4. The writing may be not easy to be understood by computational biologists.

Reviewer #2: General comments:

This manuscript is conceptually very interesting.

The figures provide novel visualization of DNA sequences and the central dogma.

The employment of ideas from category theory such as Yoneda embedding, Kan extension and adjoint functors are potentially very promising to help disclose some fundamental principles in biology.

The structure of the manuscript is very confusing and hard to follow.

Introduction and Method are not numbered, while suddenly Results, Discussion are listed with number 3, 4. When it comes to Conclusion, no numbering again.

The Method section is too long, I totally get lost.

Section 1 and 2 are relatively easier to follow. For section 2, the subsection 2.1 is titled only for places, but the firing rules are explained as well, better put them into separate subsections.

For section 3, examples, a huge chunk of text is super difficult, if not impossible to get readers involved. Better separate them into subsections, each subsection describe one or two examples that are most relevant to each other, and add a title for each subsection.

Details/Typos:

P11 (Figures 4). → Figure

P24 R(k’)j, P33 R(k)j, → are they referring to the same thing? If yes, better make consistent, and many other places of R(k’)j or R(k)j

P25 transcribed into RNAt composed of bases → RNA

P34 a very long space between ‘D(k)0°(B(k)j●B(k)l)= and D(k)0=[...|Em|Em+1|Em+2|Em+3|...]’, → better remove the space

Figure 1, the labels of the two morphisms at the left corner should be f(1→4) and f(4→1)

Same typo in Figure 2 as the one mentioned above in Figure 1

In Figure 4, first place pk has f(k)a on the left and f(k)b on the right, while when the token a(k)i flows in at the second place pk, f(k)b becomes left while f(k)a right, is this switch intentional or by mistake?

P82 a unique morphism is definable between a terminal object and a final object → an initial ?

P82 ‘● R(k1)j=[a(k)j1|a(k1)j2|a(k1)3||r(k1)0r(k1)0 …]=[{R(k1)j}||r(k1)0r(k1)0 …] → a(k1)j1|a(k1)j2|a(k1)j3

P83 G(1,−1) ↔ G(=Exp(4·ω·i)) between two figures → diagrams

P83 Cayley table for the base and operator → bases and operators

P83 Figure 12 legend ‘D(k)j=[C0|C1A2E3T4||E5E6…]’ → E0

Figure 22, morphism f(5→6) is missing?

P88 Figure 25 legend αD(k)j°F(B(k)(j→l))=G(B(k)(j→l))°αD(k)jl. → αD(k)l°F(B(k)(j→l))=G(B(k)(j→l))°αD(k)j.

P88 Figure 27 legend by functor B, R(k’)l is transformed as B(R(k)l)=D(k)l, → R(k’)l

P89 Figure 28 legend using ‘hom functor C(D(k)j, D(k)l)’, → C(D(k)j, ⎯)

P90 Figure 30 legend to category Y (for the complemental RNA sequences; R(k)j † ). → complementary DNA sequences; D(k†)j † ’

P90 Figure 30 legend G is defined from category X (for ‘D(k)j’s) to category Y (for ‘R(k)j † ’s) → Z (for ‘R(k’)j † ’s)

Other suggestions:

Could also refer to the paper “A compositional account of motifs, mechanisms, and dynamics in biochemical regulatory networks”, which uses Open Petri Net for gene regulatory networks.

**********

6. PLOS authors have the option to publish the peer review history of their article (what does this mean?). If published, this will include your full peer review and any attached files.

If you choose “no”, your identity will remain anonymous but your review may still be made public.

Do you want your identity to be public for this peer review? For information about this choice, including consent withdrawal, please see our Privacy Policy.

Reviewer #1: No

Reviewer #2: Yes: Yanying Wu

**********

[NOTE: If reviewer comments were submitted as an attachment file, they will be attached to this email and accessible via the submission site. Please log into your account, locate the manuscript record, and check for the action link "View Attachments". If this link does not appear, there are no attachment files.]

While revising your submission, please upload your figure files to the Preflight Analysis and Conversion Engine (PACE) digital diagnostic tool, https://pacev2.apexcovantage.com/. PACE helps ensure that figures meet PLOS requirements. To use PACE, you must first register as a user. Registration is free. Then, login and navigate to the UPLOAD tab, where you will find detailed instructions on how to use the tool. If you encounter any issues or have any questions when using PACE, please email PLOS at figures@plos.org. Please note that Supporting Information files do not need this step.

10.1371/journal.pone.0302710.r002
Author response to Decision Letter 0
Submission Version1
2 Dec 2023

Dr. Emily Chenette

Editor-in-Chief

Ms. Hanna Landenmark

Staff Editor

PLOS ONE

2 December 2023

Dear Dr. Chenette and Ms. Landenmark

Re: MS: PONE-D-23-19401—

“Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Toward an abstract algebraic formulation of molecular/genetic biology”

Jitsuki Sawamura, Shigeru Morishita, and Jun Ishigooka

Please find enclosed our revised manuscript, which we resubmit for consideration as a Research Article in PLOS ONE.

We thank the reviewers for their helpful comments. We have considered them very carefully and revised the manuscript accordingly. Please note that all revisions to the revised manuscript have been highlighted in blue. Moreover, we have provided below point-by-point responses that address the concerns raised by the reviewers.

Additionally, in this revision, following the suggestion from Mr./Ms. Audyssa Banlaygas Auditor, a staff member at PLOS ONE, we have added explanatory text regarding the following data availability statement to the manuscript in the “Introduction” section.

“Regarding the availability statement in this paper, the data used in this manuscript were built up and prepared for the purpose of elucidating the methodology, and were not collected from actual experiments or real-world sources. They were strictly created within the text to facilitate readers’ comprehension. The data, represented in the form of equations, are exemplified within fictional scenarios and do not have a corresponding minimal data set underlying the results outside of the paper. While there are sections in which figures and methodologies are cited from other papers, this is exclusively confined to the aforementioned context (with proper citation).” Your understanding in this matter is greatly appreciated.

Please address all correspondence to:

Jitsuki Sawamura, MD, PhD

Nishigahara Hospital,

9-46-2 Nishigahara, Kita-ku, Tokyo-to 114-0024, Japan

E-mail: jsawamura246@gmail.com

Phone: +81-3-3917-6561

Fax: +81-3-3576-4808

 

Point-by-Point Response to Reviewer 1

Reviewer #1 Comment 1.

In Section 2. Illustrations of hybrid models based on category theory and EPN, each concept of petri nets should be described with the help of an example, as this is not a standard Petri net.

Response to Comment 1.

As the reviewer has pointed, the illustrations of hybrid models are based on category theory and extended Petri net (EPN). Therefore, we should describe the simple and practical example of them. In this regard, from the viewpoint of standard EPN, our hybrid model could be also regarded as one for which the standard EPN was composed using category theory as a material. In other words, the example of the EPN using category theory is one of the EPN models. Hence, we have presented an example of EPN using category theory (please see newly described Figure 1). Together with this, we added the following description in the legends of the new Figure 1; “In the realm of a formal system modeling, the integration of category theory concepts within the framework of Petri nets presents an intriguing avenue for mathematical abstraction. Consider the fundamental elements of category theory: objects A, B, and C, along with arrows f: A → B, g: B → C, and h: A → C, which denote morphisms between objects.

This abstract structure finds its correspondence in Petri nets:

Places:

A (Place representing Object A)

B (Place representing Object B)

C (Place representing Object C)

Transitions:

f (Transition representing Arrow f)

g (Transition representing Arrow g)

h (Transition representing Arrow h)

Arcs:

Input arc from A to f (Signifying the starting point of Arrow f being Object A)

Input arc from B to f (Denoting the endpoint of Arrow f being Object B)

Input arc from B to g (Indicating the starting point of Arrow g being Object B)

Input arc from C to g (Representing the endpoint of Arrow g being Object C)

Input arc from A to h (Symbolizing the starting point of Arrow h being Object A)

Input arc from C to h (Marking the endpoint of Arrow h being Object C)

This Petri net representation elegantly captures the essence of category theory constructs, whereby transitions correspond to arrows, and places represent distinct objects. The interconnected arcs delineate the relationships between these objects and morphisms, forming a cohesive and visually intuitive model.”

Additionally, to help readers to understand better, we have added the following explanation in the main text on about page 7; “At this stage, to help the reader’s understanding, we illustrate the extended Petri net (EPN) using category theory (Figure 1). From the viewpoint of the standard extended Petri net (EPN), a hybrid model that we present in this article may be regarded as one for which the standard EPN is composed using category theory as a material with some options. The main characteristics of our model may be summarized in three points: 1) places correspond to objects, 2) arcs correspond to morphisms, and 3) tokens are defined as those that can act as the operator.”

Hence, the indexing of all figures after the new Figure 1 have been augmented by one (Consequently, in the revised manuscript, we have now 33 Figures).

Moreover, we note that various sorts of EPNs have been reported and cited in references [1,2,6,12−19,21,22,24−28,30,32−41,45,53−55] in the revised manuscript.

Reviewer #1 Comment 2.

The format of the formulas seems not standard.

Response to Comment 2.

As noted, some parts of the formulas do not follow the standard style of presentation. This is because the concepts we have introduced in this article are somewhat novel and the optimal style of presentation is not determined at this time. We envisage that the formatting of formulas will improve through rigorous discussion by other researchers in the field, including mathematicians. In particular, we think that the parts of the presentation treating matrix multiplication includes operators (e.g., f[ ]s) for the elements of vectors (e.g., R(3)j†) as coordinates to express the central dogma (Appendices B, i) Case A and ii) Case B) seem considerably peculiar; for example, R(3)j†;f[ ]s = f[R(3)j†]s = R(4)j† (right translation rule) is not contingent on the standard matrix operation (left translation rule). Therefore, at least by making use of the left translation rule instead of the right translation rule, the operators in Appendix A are defined as ‘right translation rule’ (e.g., R(3)j†;f[ ]s = f[R(3)j†]s = R(4)j†). In the matrix calculation in Appendix B, we adhere to conventional matrix operations.

Furthermore, the font of letters denoting operators have been changed to emphasize these operator constructs. Minor typographic errors of operators have been corrected in Appendices A and B (colored in blue).

Reviewer #1 Comment 3.

Is there a tool that can support the modeling of this kind of Petri nets?

Response to Comment 3.

Several sophisticated tools exist to model the extended Petri nets, enabling intricate system analysis, simulation, and design. We delineate two tools tailored for this purpose:

PIPE2 (http://pipe2.sourceforge.net/): PIPE2, an advanced modeling tool, provides support for a diverse range of Petri net types. Its versatility extends to the modeling, simulation, and analysis of extended Petri nets, making it an invaluable asset for researchers and practitioners alike.

TINA (http://projects.laas.fr/tina/): TINA, short for Timed Interactive Nets Analyzer, caters to the modeling needs of Petri nets with intricate timing constraints. Specifically designed for real-time system modeling, TINA excels in capturing the nuanced behaviors of systems with temporal intricacies.

These tools, steeped in computational prowess, not only enable the modeling of traditional Petri nets but also empower researchers to delve into the complexities of extended Petri nets. Their intuitive interfaces coupled with powerful analytical capabilities make them indispensable assets for scholarly endeavors and practical applications alike. It is considered that researchers and practitioners should meticulously evaluate these tools to discern the ideal solution aligning with the nuanced requirements of their academic and professional pursuits.

Reviewer #1 Comment 4.

The writing may be not easy to be understood by computational biologists.

Response to Comment 4.

Our description may not be easy to understand by computational biologists. One reason is that the content of the article overlaps a plurality of technical fields. However, our approach is but one step in a field. We expect future publications by researchers covering other fields using more appropriate descriptions, definitions, and illustrations that provide easier comprehension for computational biologists and those working in other fields.

In accordance with the Reviewer #2 Comment, we have introduced separate subsections with changes in indexing, and corrected typographic errors and descriptions in the main text and legends, e.g.: 1) we deleted an odd description ‘(50)’ from page 27, line 1 and corrected unpaired quotation marks, 2) we added necessary opening and closing quotation marks in the text, and 3) following the advice of Reviewer #2, we included a new [reference 1], and accordingly, augmented the indexing of all references (Consequently, we have 55 references). Moreover, the technical term ‘ordinal Petri net’ has been changed to ‘standard Petri net’.

Additionally, in this revision, following the suggestion from a staff member at PLOS ONE, we have added explanatory text regarding the following data availability statement to the manuscript in the “Introduction” section.

“Regarding the availability statement in this paper, the data used in this manuscript were built up and prepared for the purpose of elucidating the methodology, and were not collected from actual experiments or real-world sources. They were strictly created within the text to facilitate readers’ comprehension. The data, represented in the form of equations, are exemplified within fictional scenarios and do not have a corresponding minimal data set underlying the results outside of the paper. While there are sections in which figures and methodologies are cited from other papers, this is exclusively confined to the aforementioned context (with proper citation).”

Point-by-Point Response to Reviewer 2

Reviewer #2 Comment.

General comments:

This manuscript is conceptually very interesting.

The figures provide novel visualization of DNA sequences and the central dogma.

The employment of ideas from category theory such as Yoneda embedding, Kan extension and adjoint functors are potentially very promising to help disclose some fundamental principles in biology.

The structure of the manuscript is very confusing and hard to follow.

Introduction and Method are not numbered, while suddenly Results, Discussion are listed with number 3, 4. When it comes to Conclusion, no numbering again.

Response to comment.

Following the advice of Reviewer #1, we have added a new Figure 1 to illustrate the concept of an extended Petri net (EPN) using category theory. Further details have been added in the main text (page 7, in blue), as suggested by Reviewer #1. All Figures after Figure 1 have been augmented by one (Consequently, we have 33 Figures).

We have added section numbering beginning with §1 for the Introduction section, and ending with §6 for the Conclusion section. All changes are highlighted in blue.

Reviewer #2 Comment. (in continuation)

The Method section is too long, I totally get lost.

Section 1 and 2 are relatively easier to follow. For section 2, the subsection 2.1 is titled only for places, but the firing rules are explained as well, better put them into separate subsections.

Response to comment.

We have divided subsection §2-1 into three parts §2-2-1, §2-2-2, and §2-2-3; §2-2-2 is subtitled ‘Firing rules: For a morphism (transition), there are two types of firing rules labeled I and II.’ Additionally, §2-2-3 is subtitled ‘Marking of a PN as an optional display.’

Reviewer #2 Comment. (in continuation)

For section 3, examples, a huge chunk of text is super difficult, if not impossible to get readers involved. Better separate them into subsections, each subsection describe one or two examples that are most relevant to each other, and add a title for each subsection.

Response to comment.

To improve the article’s readability, we have separated section 3 into subsections so that each subsection describes one or two examples of relevance to the topic at hand, and added titles for each subsection (in blue).

Reviewer #2 Comment. (in continuation)

Details/Typos:

P11 (Figures 4). → Figure

Response to comment.

We corrected the error. Figure 4 has been renumbered as Figure 5 with the insertion of a new figure.

Reviewer #2 Comment. (in continuation)

P24 R(k’)j, P33 R(k)j, → are they referring to the same thing? If yes, better make consistent, and many other places of R(k’)j or R(k)j

Response to comment.

As noted, the places of R(k’)j and R(k)j are the same. We have identified and corrected many similar inconsistencies in the text.

Reviewer #2 Comment. (in continuation)

P25 transcribed into RNAt composed of bases → RNA

Response to comment.

The typographic error has been corrected.

Reviewer #2 Comment. (in continuation)

P34 a very long space between ‘D(k)0°(B(k)j●B(k)l)= and D(k)0=[...|Em|Em+1|Em+2|Em+3|...]’, → better remove the space

Response to comment.

The spaces between coordinates are half-spaces (they seem wide because of Word formatting). We believe that when they are formally printed, these spaces will shrink within the ordinal spaces.

Reviewer #2 Comment. (in continuation)

Figure 1, the labels of the two morphisms at the left corner should be f(1→4) and f(4→1)

Same typo in Figure 2 as the one mentioned above in Figure 1

Response to comment.

For Figures 1 and 2, these errors have been corrected; note, in the revised manuscript, these figures become Figures 2 and 3.

Reviewer #2 Comment. (in continuation)

In Figure 4, first place pk has f(k)a on the left and f(k)b on the right, while when the token a(k)i flows in at the second place pk, f(k)b becomes left while f(k)a right, is this switch intentional or by mistake?

Response to comment.

As mentioned, f(k)a and f(k)b in at the second place in Figure 4 were switched and have been interchanged.

Reviewer #2 Comment. (in continuation)

P82 a unique morphism is definable between a terminal object and a final object → an initial ?

Response to comment.

As noted, a final object should be exchanged by an initial object; this has been corrected.

Reviewer #2 Comment. (in continuation)

P82 ‘●R(k1)j=[a(k)j1|a(k1)j2|a(k1)3||r(k1)0r(k1)0 …]=[{R(k1)j}||r(k1)0r(k1)0 …] → a(k1)j1|a(k1)j2|a(k1)j3

Response to comment.

We have corrected the expression.

Reviewer #2 Comment. (in continuation)

P83 G(1,−1) ↔ G(=Exp(4·ω·i)) between two figures → diagrams

Response to comment.

We have corrected the description.

Reviewer #2 Comment. (in continuation)

P83 Cayley table for the base and operator → bases and operators

P83 Figure 12 legend ‘D(k)j=[C0|C1A2E3T4||E5E6…]’ → E0

Response to comment.

We have made corrections to both.

Reviewer #2 Comment. (in continuation)

Figure 22, morphism f(5→6) is missing?

Response to comment.

Because sequences in place p5 such as <Rs(5)2†>=[E0|(A1U2G3)(C4U5G6)(A7G8U9)||E10E11E12E13…] (about p.39) do not include ‘E’s as coordinates other than an initial E0 and an infinite tail of ‘E0’s at the end of the sequence, only products that can go through morphism f(5→7) (when f(5→7) is fireable) such as ‘<Rs(5)2†>;f(5→7)=<Pr(7)2>=[Δ0|(M1)(L2)(S3)||Δ4Δ5Δ6…]’ in place p7 can also be outputs in place p6 such as a sequence like Pr(6)2=[Δ0|(M1)(L2)(S3)||Δ4Δ5Δ6…] via morphism f(5→6) (when f(5→6) is fireable). Therefore, there can certainly be cases where morphism f(5→6) is fireable. However, morphism f(5→7) is sufficient, and morphism f(5→6) is not always necessary. For simplicity of the model, we omit morphism f(5→6). We have inserted these sentences in the main text (about p.39, in blue).

Moreover, we have missed two notational

Attachment Submitted filename: Response to Reviewers.docx

10.1371/journal.pone.0302710.r003
Decision Letter 1
Fallahi Hossein Academic Editor
© 2024 Hossein Fallahi
2024
Hossein Fallahi
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
Submission Version1
8 Jan 2024

PONE-D-23-19401R1Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Towards an abstract algebraic formulation of molecular/genetic biologyPLOS ONE

Dear Dr. Sawamura,

Thanks for providing the revision and addressing the comments raised by the respected reviewers. I have received positive comments on your manuscript from the reviewers. The manuscript is in a much better shape and I feel that it has merit but does not fully meet PLOS ONE’s publication criteria as it currently stands. Therefore, I invite you to address the following issues. Please note that without these corrections I am unable to proceed with a proper decision.

==============================1- Although the overall English of the paper is good, it is hard to read some parts and in some sections, it is hard to understand. Please carefully check the main text of the manuscript and edit it thoroughly to make it easier to follow for readers of the journal. Some examples:

-"....In addition, it seems important to us that while Figure 30 may not hold precisely, the existence of functors between cells may be assured because, ordinarily, the entire sequences of DNA are equivalent in a single human being..."

-"At this early stage in the development, our proposition in using category theory and EPN in the algebraic formulation of biology needs to be interpreted in light of considerable limitations....."

-"For all manipulations described above, the identity morphism performs nothing on any token. Thereby, the morphisms associated with combination, splitting, and insertion are considered to satisfy the postulate within category theory because associativity and the existence of an identity is met..."

These and other instances need revision and even rewriting. Please read through the entire MS and correct all errors in the revision.

2- The main problem with your paper is the number of images you have in the main document. Although there is no limit to the number of figures in PlLOS ONE, please try to reduce the number of figures to below 10 by presenting them in multi-panel figures and moving some to the supplementary materials. In this way, the readers would not be interrupted while reading your article.

3- Some figure legends are too short and uninformative (Figures 10, 11 ...). Please fix these instances. In some figure legends, you have referred to other figure legends. Please try to make each figure legend independent with a minimum referral.

4- Please transfer the paragraphs concerning the "Data availability statements" to the methods section. I suggest to make a subheading here and put these sentences in that subheading.

5- Another issue is that you have mentioned that you have somehow borrowed from your previous work (Reference 44); "the topics of Figures 8–11, and 16 in the present article are used as examples presented in previous work of ours published in Theoretical Biology and Medical Modeling on May 7, 2014." Even though, you have clarified these points to us, it is hard to explain to the readers after your paper has been published. I suggest you give examples in a supplementary file whenever possible. For example, figure 10 of this MS is extracted from that study (Reference 44). Unfortunately, the similarity score for this MS and your previous paper is high due to the use of some examples from previous studies. Anyway, I do not think you need to borrow as much from that paper. So I suggest fixing this overlapping issue either by removing this part and referring to that paper or by rewording and reformatting these sections.

==============================

Please submit your revised manuscript by Feb 22 2024 11:59PM. If you will need more time than this to complete your revisions, please reply to this message or contact the journal office at plosone@plos.org. When you're ready to submit your revision, log on to https://www.editorialmanager.com/pone/ and select the 'Submissions Needing Revision' folder to locate your manuscript file.

Please include the following items when submitting your revised manuscript:A rebuttal letter that responds to each point raised by the academic editor and reviewer(s). You should upload this letter as a separate file labeled 'Response to Reviewers'.

A marked-up copy of your manuscript that highlights changes made to the original version. You should upload this as a separate file labeled 'Revised Manuscript with Track Changes'.

An unmarked version of your revised paper without tracked changes. You should upload this as a separate file labeled 'Manuscript'.

If you would like to make changes to your financial disclosure, please include your updated statement in your cover letter. Guidelines for resubmitting your figure files are available below the reviewer comments at the end of this letter.

If applicable, we recommend that you deposit your laboratory protocols in protocols.io to enhance the reproducibility of your results. Protocols.io assigns your protocol its own identifier (DOI) so that it can be cited independently in the future. For instructions see: https://journals.plos.org/plosone/s/submission-guidelines#loc-laboratory-protocols. Additionally, PLOS ONE offers an option for publishing peer-reviewed Lab Protocol articles, which describe protocols hosted on protocols.io. Read more information on sharing protocols at https://plos.org/protocols?utm_medium=editorial-email&utm_source=authorletters&utm_campaign=protocols.

We look forward to receiving your revised manuscript.

Kind regards,

Hossein Fallahi, Ph.D

Academic Editor

PLOS ONE

[Note: HTML markup is below. Please do not edit.]

Reviewers' comments:

Reviewer's Responses to Questions

Comments to the Author

1. If the authors have adequately addressed your comments raised in a previous round of review and you feel that this manuscript is now acceptable for publication, you may indicate that here to bypass the “Comments to the Author” section, enter your conflict of interest statement in the “Confidential to Editor” section, and submit your "Accept" recommendation.

Reviewer #1: All comments have been addressed

Reviewer #2: All comments have been addressed

**********

2. Is the manuscript technically sound, and do the data support the conclusions?

The manuscript must describe a technically sound piece of scientific research with data that supports the conclusions. Experiments must have been conducted rigorously, with appropriate controls, replication, and sample sizes. The conclusions must be drawn appropriately based on the data presented.

Reviewer #1: Yes

Reviewer #2: Yes

**********

3. Has the statistical analysis been performed appropriately and rigorously?

Reviewer #1: Yes

Reviewer #2: N/A

**********

4. Have the authors made all data underlying the findings in their manuscript fully available?

The PLOS Data policy requires authors to make all data underlying the findings described in their manuscript fully available without restriction, with rare exception (please refer to the Data Availability Statement in the manuscript PDF file). The data should be provided as part of the manuscript or its supporting information, or deposited to a public repository. For example, in addition to summary statistics, the data points behind means, medians and variance measures should be available. If there are restrictions on publicly sharing data—e.g. participant privacy or use of data from a third party—those must be specified.

Reviewer #1: Yes

Reviewer #2: Yes

**********

5. Is the manuscript presented in an intelligible fashion and written in standard English?

PLOS ONE does not copyedit accepted manuscripts, so the language in submitted articles must be clear, correct, and unambiguous. Any typographical or grammatical errors should be corrected at revision, so please note any specific errors here.

Reviewer #1: Yes

Reviewer #2: Yes

**********

6. Review Comments to the Author

Please use the space provided to explain your answers to the questions above. You may also include additional comments for the author, including concerns about dual publication, research ethics, or publication ethics. (Please upload your review as an attachment if it exceeds 20,000 characters)

Reviewer #1: All my comments have been addressed by the authors now, which seems fine to me. No further comments now.

Reviewer #2: The core concept presented in the manuscript is both intriguing and valuable. The authors have invested considerable effort in elucidating an extensive array of details. This manuscript holds reference potential for individuals keen on applying category theory to the broader context of biology, with a specific emphasis on genetics and genomics. The wealth of information provided not only underscores the authors' dedication but also positions the work as a valuable resource for those seeking insights into the intersection of category theory and the fields of genetics, and genomics.

**********

7. PLOS authors have the option to publish the peer review history of their article (what does this mean?). If published, this will include your full peer review and any attached files.

If you choose “no”, your identity will remain anonymous but your review may still be made public.

Do you want your identity to be public for this peer review? For information about this choice, including consent withdrawal, please see our Privacy Policy.

Reviewer #1: No

Reviewer #2: Yes: 

**********

[NOTE: If reviewer comments were submitted as an attachment file, they will be attached to this email and accessible via the submission site. Please log into your account, locate the manuscript record, and check for the action link "View Attachments". If this link does not appear, there are no attachment files.]

While revising your submission, please upload your figure files to the Preflight Analysis and Conversion Engine (PACE) digital diagnostic tool, https://pacev2.apexcovantage.com/. PACE helps ensure that figures meet PLOS requirements. To use PACE, you must first register as a user. Registration is free. Then, login and navigate to the UPLOAD tab, where you will find detailed instructions on how to use the tool. If you encounter any issues or have any questions when using PACE, please email PLOS at figures@plos.org. Please note that Supporting Information files do not need this step.

10.1371/journal.pone.0302710.r004
Author response to Decision Letter 1
Submission Version2
2 Feb 2024

Dr. Hossein Fallahi

Academic Editor

PLOS ONE

2 February 2024

Dear Dr. Fallahi

Re: MS: PONE-D-23-19401R1—

“Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Toward an abstract algebraic formulation of molecular/genetic biology”

Jitsuki Sawamura, Shigeru Morishita, and Jun Ishigooka

Please find enclosed our revised manuscript, which we resubmit for consideration as a Research Article in PLOS ONE.

We thank you for your helpful comments. We have considered them very carefully and revised the manuscript accordingly. Please note that all revisions to the revised manuscript have been highlighted in blue. Moreover, we have provided below our point-by-point responses that address the concerns raised.

Thank you also for the opportunity to resubmit our manuscript.

Please address all correspondence to:

Jitsuki Sawamura, MD, PhD

Nishigahara Hospital,

9-46-2 Nishigahara, Kita-ku, Tokyo-to 114-0024, Japan

E-mail: jsawamura246@gmail.com

Phone: +81-3-3917-6561

Fax: +81-3-3576-4808

 

Point-by-Point Response to Editor

Editor Comment 1.

• 1- Although the overall English of the paper is good, it is hard to read some parts and, in some sections, it is hard to understand. Please carefully check the main text of the manuscript and edit it thoroughly to make it easier to follow for readers of the journal. Some examples:

-"....In addition, it seems important to us that while Figure 30 may not hold precisely, the existence of functors between cells may be assured because, ordinarily, the entire sequences of DNA are equivalent in a single human being..."

-"At this early stage in the development, our proposition in using category theory and EPN in the algebraic formulation of biology needs to be interpreted in light of considerable limitations....."

-"For all manipulations described above, the identity morphism performs nothing on any token. Thereby, the morphisms associated with combination, splitting, and insertion are considered to satisfy the postulate within category theory because associativity and the existence of an identity is met..."

These and other instances need revision and even rewriting. Please read through the entire MS and correct all errors in the revision.

Response to Comment 1.

To address the issues of readability, we have added further description to the troublesome passage (p.70) for greater comprehension.

“We believe that by considering identity units for the respective levels such as an identity base E for bases, an identity protein Δ for proteins, an identity cell □ for cells, an identity organ ◎ for organs, and an identity individual for individuals, the functor comprehension of a human body and the human community in a hierarchical-cluster form is possible (Figure 9(c)).”

Additionally, we replaced Figure 30 with a new more explanatory version, and replaced the legend.

We have simplified the sentence (p. 65) using a more standard expression as follows (p.65):

“Inevitably, at this initial stage of development, our proposal to incorporate category theory and EPN into the algebraic formulation of biology must be understood in the context of significant limitations.”

Regarding the passage “For all manipulations described above…”, the content that is described refers to well-known characteristics and postulates of category theory that readers who have some knowledge of the field should be familiar with. However, we added reference [28] at the end of the sentence (p.53) so that readers unfamiliar with the field may refer to it.

“Thereby, the morphisms associated with combination, splitting, and insertion are considered to satisfy the postulate within category theory because associativity and the existence of an identity is met [26, 28].”

Additionally, we have read through the entire manuscript carefully to identify any other errors. Some descriptions (p.54) were corrected and simplified. Figure 30 (Figure 9(c)) and legends (in the previous version) have been heavily revised. All changes made in the manuscript appear in blue text (e.g., p.23, 24, 26, 45, 87, 88, 90, 91, 95)

Editor Comment 2.

• 2- The main problem with your paper is the number of images you have in the main document. Although there is no limit to the number of figures in PlLOS ONE, please try to reduce the number of figures to below 10 by presenting them in multi-panel figures and moving some to the supplementary materials. In this way, the readers would not be interrupted while reading your article.

Response to Comment 2.

Following your advice, we have reduced the number of Figures from 33 to 9 by integrating them as multi-panel figures 1−9.

Editor Comment 3.

• 3- Some figure legends are too short and uninformative (Figures 10, 11 ...). Please fix these instances. In some figure legends, you have referred to other figure legends. Please try to make each figure legend independent with a minimum referral.

Response to Comment 3.

In accordance with your comments and proposals, including Editor Comment 5, we excluded Figures 10 and 11 (previous version). Additionally, so that all figure legends are independent, we improved the figure legends by expanding the description of each in greater detail; specifically Figures 8, 14, 17, 19, 21, 26, 28, 29, 30, 31, 32 (previous version). In this regard, please be mindful that figure indexing has been changed/updated through the multi-panel reformatting of the figures.

Editor Comment 4.

4- Please transfer the paragraphs concerning the "Data availability statements" to the methods section. I suggest to make a subheading here and put these sentences in that subheading.

Response to Comment 4.

Following your advice, we transferred the paragraphs to the methods section under a separate subheading.

Editor Comment 5.

• 5- Another issue is that you have mentioned that you have somehow borrowed from your previous work (Reference 44); "the topics of Figures 8–11, and 16 in the present article are used as examples presented in previous work of ours published in Theoretical Biology and Medical Modeling on May 7, 2014." Even though, you have clarified these points to us, it is hard to explain to the readers after your paper has been published. I suggest you give examples in a supplementary file whenever possible. For example, figure 10 of this MS is extracted from that study (Reference 44). Unfortunately, the similarity score for this MS and your previous paper is high due to the use of some examples from previous studies. Anyway, I do not think you need to borrow as much from that paper. So I suggest fixing this overlapping issue either by removing this part and referring to that paper or by rewording and reformatting these sections.

Response to Comment 5.

Following your advice, for Figure 8 (previous version), we added the following explanations on page 23. “Note that, in the above description, the display of coordinates of tokens is essentially based on our previous article [44].” We believe that this explanation addresses sufficiently the issue of Figure 8 because there is a non-specific corresponding figure in [Ref.44]. As you pointed out, a supplementary file is indeed necessary.

For Figures 9 and 16, we attached “supplementary file 1” in which practical URLs are cited. Additionally, a URL of Figure 1 of [Ref.44] is added that provides readers an alternative, convenient reference. We have excluded the two figures, Figures 10 and 11, from this revised paper, and changed the description to “All compositional scenarios are based on and referenced as diagrams (Figures 2 and 3 [Ref. 44]; see supplementary file 1).” (p.26) Additionally, we added URLs of the two Figures in “supplementary file 1.” We have minimized the overlapping parts of the description and have borrowed little from our previous paper.

Attachment Submitted filename: Response to Editor.docx

10.1371/journal.pone.0302710.r005
Decision Letter 2
Fallahi Hossein Academic Editor
© 2024 Hossein Fallahi
2024
Hossein Fallahi
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
Submission Version2
5 Feb 2024

PONE-D-23-19401R2Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Towards an abstract algebraic formulation of molecular/genetic biologyPLOS ONE

Dear Dr. Sawamura,

Thank you for submitting your manuscript to PLOS ONE. After careful consideration, we feel that it has merit but does not fully meet PLOS ONE’s publication criteria as it currently stands. Therefore, we invite you to submit a revised version of the manuscript that addresses the points raised during the review process.

==============================

I have carefully studied the new version of the paper entitled "Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Towards an abstract algebraic formulation of molecular/genetic biology". I am pleased to see that all my comments and the past reviewers comments have been adequately addressed. 

At this stage my only concern is the quality and format of the images. Please note that reading the numbers and other characters from current images are almost impossible without zooming-in.  

I invite the authors to look at the PLOS ONE figure's policy page that could be found in (https://journals.plos.org/plosone/s/figures) and prepare all images according to the required format. 

==============================

Please submit your revised manuscript by Mar 21 2024 11:59PM. If you will need more time than this to complete your revisions, please reply to this message or contact the journal office at plosone@plos.org. When you're ready to submit your revision, log on to https://www.editorialmanager.com/pone/ and select the 'Submissions Needing Revision' folder to locate your manuscript file.

Please include the following items when submitting your revised manuscript:A rebuttal letter that responds to each point raised by the academic editor and reviewer(s). You should upload this letter as a separate file labeled 'Response to Reviewers'.

A marked-up copy of your manuscript that highlights changes made to the original version. You should upload this as a separate file labeled 'Revised Manuscript with Track Changes'.

An unmarked version of your revised paper without tracked changes. You should upload this as a separate file labeled 'Manuscript'.

If you would like to make changes to your financial disclosure, please include your updated statement in your cover letter. Guidelines for resubmitting your figure files are available below the reviewer comments at the end of this letter.

If applicable, we recommend that you deposit your laboratory protocols in protocols.io to enhance the reproducibility of your results. Protocols.io assigns your protocol its own identifier (DOI) so that it can be cited independently in the future. For instructions see: https://journals.plos.org/plosone/s/submission-guidelines#loc-laboratory-protocols. Additionally, PLOS ONE offers an option for publishing peer-reviewed Lab Protocol articles, which describe protocols hosted on protocols.io. Read more information on sharing protocols at https://plos.org/protocols?utm_medium=editorial-email&utm_source=authorletters&utm_campaign=protocols.

We look forward to receiving your revised manuscript.

Kind regards,

Hossein Fallahi, Ph.D

Academic Editor

PLOS ONE

Journal Requirements:

Please review your reference list to ensure that it is complete and correct. If you have cited papers that have been retracted, please include the rationale for doing so in the manuscript text, or remove these references and replace them with relevant current references. Any changes to the reference list should be mentioned in the rebuttal letter that accompanies your revised manuscript. If you need to cite a retracted article, indicate the article’s retracted status in the References list and also include a citation and full reference for the retraction notice.

Additional Editor Comments (if provided):

I have carefully studied the new version of the paper entitled "Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Towards an abstract algebraic formulation of molecular/genetic biology". I am pleased to see that all my comments and the past reviewers comments have been adequately addressed.

At this stage my only concern is the quality and format of the images. Please note that reading the numbers and other characters from current images are almost impossible without zooming-in.

I invite the authors to look at the PLOS ONE figure's policy page that could be found in (https://journals.plos.org/plosone/s/figures) and prepare all images according to the required format.

[Note: HTML markup is below. Please do not edit.]

Reviewers' comments:

[NOTE: If reviewer comments were submitted as an attachment file, they will be attached to this email and accessible via the submission site. Please log into your account, locate the manuscript record, and check for the action link "View Attachments". If this link does not appear, there are no attachment files.]

While revising your submission, please upload your figure files to the Preflight Analysis and Conversion Engine (PACE) digital diagnostic tool, https://pacev2.apexcovantage.com/. PACE helps ensure that figures meet PLOS requirements. To use PACE, you must first register as a user. Registration is free. Then, login and navigate to the UPLOAD tab, where you will find detailed instructions on how to use the tool. If you encounter any issues or have any questions when using PACE, please email PLOS at figures@plos.org. Please note that Supporting Information files do not need this step.

10.1371/journal.pone.0302710.r006
Author response to Decision Letter 2
Submission Version3
19 Mar 2024

Dr. Hossein Fallahi

Academic Editor

PLOS ONE

20 March 2024

Dear Dr. Fallahi

Re: MS: PONE-D-23-19401R2—

“Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Toward an abstract algebraic formulation of molecular/genetic biology”

Jitsuki Sawamura, Shigeru Morishita, and Jun Ishigooka

Please find enclosed our revised manuscript, which we resubmit for consideration as a Research Article in PLOS ONE.

We extend our sincere appreciation for your invaluable comment. We have considered your feedback carefully and subsequently revised the manuscript, with particular attention to improving the quality and formatting of images. Our revisions are highlighted in blue for your convenience.

We trust that these adjustments address the concerns raised in your comment and contribute positively to the overall quality of the manuscript. Your continued guidance is highly valued, and we remain open to any further suggestions or recommendations you may have.

Thank you also for the opportunity to resubmit our manuscript.

Please address all correspondence to:

Jitsuki Sawamura, MD, PhD

Nishigahara Hospital,

9-46-2 Nishigahara, Kita-ku, Tokyo-to 114-0024, Japan

E-mail: jsawamura246@gmail.com

Phone: +81-3-3917-6561

Fax: +81-3-3576-4808

Response to Editor

Editor Comment.

I have carefully studied the new version of the paper entitled "Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Towards an abstract algebraic formulation of molecular/genetic biology". I am pleased to see that all my comments and the past reviewers’ comments have been adequately addressed.

At this stage my only concern is the quality and format of the images. Please note that reading the numbers and other characters from current images are almost impossible without zooming-in.

I invite the authors to look at the PLOS ONE figure's policy page that could be found in (https://journals.plos.org/plosone/s/figures) and prepare all images according to the required format.

Response to Comment.

We wish to express our sincere gratitude for your invaluable advice regarding the quality and formatting of images, which we found both valid and indispensable. In accordance with your guidance and after a detailed review of the page regarding journal policy on figures, we have diligently re-edited nearly all figures. Our primary focus was on enhancing the readability of text and numerical characters.

However, it is essential to highlight a distinctive feature of our paper wherein the images themselves contain numerous nested diagrams. Figures and their corresponding legends play a pivotal role, and incorporating four images into one figure poses a challenge, as it necessitates significant magnification to make the text legible.

After careful consideration of these challenges, we have opted to include a maximum of two images per figure. As a result, the total number of figures has increased from 9 to 16. We apologize for any inconvenience this adjustment may cause. Nevertheless, given the unique characteristics of the concepts presented in our manuscript, we believe this approach aligns most appropriately with the nature of the work. In response to your insightful feedback, we wish to inform you of a minor revision made to Figure 1(b), 12(b), 14(b) and 15(b), as well as the legend of Figure 12(b) (p.86). Furthermore, we have augmented the explanatory content by including several fundamental formulas derived from the main text (pages 22-23) to facilitate the reader’s comprehension, while ensuring that the text remains within the word limit.

We appreciate your understanding and cooperation in this matter.

Attachment Submitted filename: Response to Reviewers.docx

10.1371/journal.pone.0302710.r007
Decision Letter 3
Lin Fucai Academic Editor
© 2024 Fucai Lin
2024
Fucai Lin
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
Submission Version3
9 Apr 2024

Several supplementary concepts for applied category-theoretical states over an extended Petri net using an example relating to genetic coding: Towards an abstract algebraic formulation of molecular/genetic biology

PONE-D-23-19401R3

Dear Dr. Sawamura,

We’re pleased to inform you that your manuscript has been judged scientifically suitable for publication and will be formally accepted for publication once it meets all outstanding technical requirements.

Within one week, you’ll receive an e-mail detailing the required amendments. When these have been addressed, you’ll receive a formal acceptance letter and your manuscript will be scheduled for publication.

An invoice will be generated when your article is formally accepted. Please note, if your institution has a publishing partnership with PLOS and your article meets the relevant criteria, all or part of your publication costs will be covered. Please make sure your user information is up-to-date by logging into Editorial Manager at Editorial Manager® and clicking the ‘Update My Information' link at the top of the page. If you have any questions relating to publication charges, please contact our Author Billing department directly at authorbilling@plos.org.

If your institution or institutions have a press office, please notify them about your upcoming paper to help maximize its impact. If they’ll be preparing press materials, please inform our press team as soon as possible -- no later than 48 hours after receiving the formal acceptance. Your manuscript will remain under strict press embargo until 2 pm Eastern Time on the date of publication. For more information, please contact onepress@plos.org.

Kind regards,

Fucai Lin, Ph.D.

Academic Editor

PLOS ONE

**********

10.1371/journal.pone.0302710.r008
Acceptance letter
Lin Fucai Academic Editor
© 2024 Fucai Lin
2024
Fucai Lin
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
1 May 2024

PONE-D-23-19401R3

PLOS ONE

Dear Dr. Sawamura,

I'm pleased to inform you that your manuscript has been deemed suitable for publication in PLOS ONE. Congratulations! Your manuscript is now being handed over to our production team.

At this stage, our production department will prepare your paper for publication. This includes ensuring the following:

* All references, tables, and figures are properly cited

* All relevant supporting information is included in the manuscript submission,

* There are no issues that prevent the paper from being properly typeset

If revisions are needed, the production department will contact you directly to resolve them. If no revisions are needed, you will receive an email when the publication date has been set. At this time, we do not offer pre-publication proofs to authors during production of the accepted work. Please keep in mind that we are working through a large volume of accepted articles, so please give us a few weeks to review your paper and let you know the next and final steps.

Lastly, if your institution or institutions have a press office, please let them know about your upcoming paper now to help maximize its impact. If they'll be preparing press materials, please inform our press team within the next 48 hours. Your manuscript will remain under strict press embargo until 2 pm Eastern Time on the date of publication. For more information, please contact onepress@plos.org.

If we can help with anything else, please email us at customercare@plos.org.

Thank you for submitting your work to PLOS ONE and supporting open access.

Kind regards,

PLOS ONE Editorial Office Staff

on behalf of

Professor Fucai Lin

Academic Editor

PLOS ONE
==== Refs
References

1 Tuyéras R. , Category Theory for Genetics, arXiv:1708.05255. [math.CT] (2018) accessed 18 May 2018.
2 Tuyéras R. , Category theory for genetics I: mutations and sequence alignments, Theory and Applications of Categories, 2018;33 (40 ):1269–1317.
3 Tuyéras R. , Category theory for genetics II: genotype, phenotype and haplotype, Arxiv 2018. arXiv:1805.07004v2 [math.CT] (2018) accessed 1 Aug 2018.
4 Sawamura J. , Morishita S. and Ishigooka J. , A group-theoretical notation for disease states: an example using the psychiatric rating scale, Theor Biol and Med Model, 2012;9 :28. doi: 10.1186/1742-4682-9-28 22776348
5 Sawamura J. , Morishita S. and Ishigooka J. , Interpretation for scales of measurement linking with abstract algebra, J Clin Bioinform, 2014;4 :9. https://jclinbioinformatics.biomedcentral.com/articles/10.1186/2043-9113-4-9 24987515
6 Sawamura J. , Morishita S. and Ishigooka J. , A symmetry model for genetic coding via a wallpaper group composed of the traditional four bases and an imaginary base E: Towards category theory-like systematization of molecular/genetic biology, Theor Biol Med Model, 2014;11 :18. https://tbiomed.biomedcentral.com/articles/10.1186/1742-4682-11-18 24885369
7 A. W. Holt, H. Saint, R. Shapiro and S. Warshall, Final report on the information systems theory project, Tech. Rep. RADC-TR-68-305. New York: Griffiss Air Force Base; 1968.
8 Leinster T. , Basic Category Theory, Cambridge University Press; 2016.
9 MacLane S. , Categories for the working mathematician (2nd edition), Graduate Texts in Mathematics 5, New York: Springer; 1998.
10 C.A. Petri, Kommunikation mit Automaten, Bonn: Institut für Instrumentelle Mathemakik, Schriftendes IIM Nr. 3, 1962. Also, English translation, Communication with automata, Tech. Rep. RADC-TR-65-377. New York: Griffiss Air Force Base; 1966.
11 A. W. Holt and F. Commoner, Events and conditions, In: Record Project MAC Conf. Concurrent Systems Parallel Computation. Princeton, N.J.: Applied Data Research Inc., Information System Theory Project. 1970;3–52.
12 Holt A. W. and Commoner F. , Introduction to occurrence systems, In: Jack L , editor. Associative information techniques. New York: American Elsevier; 1971. p. 175–203.
13 Peterson J.L. , Petri net theory and the modeling of systems, Englewood Cliffs, NJ: Prentice-Hall; 1981.
14 Wu Y. , An open Petri net implementation of gene regulatory networks, Arxiv 2019. arXiv:1907.11316v1 [q-bio.MN] (2019) accessed 24 Jul 2019.
15 Wu Y. , Applied category theory for genomics—An initiative, Arxiv 2020. arXiv:2009.02822v1 [q-bio.GN] (2020) accessed 6 Sep 2020.
16 Aduddell R. , Fairbanks J. , Kumar A. , Ocal P. S. , Patterson E. and Shapiro B. T. , A compositional account of motifs, mechanisms, and dynamics in biochemical regulatory networks, Arxiv 2023. arXiv:2301.01445 [math.CT] (2023) accessed 28 Mar 2023.
17 Alam A. , Neyaz M.K. and Ikramul H.S. , Exploiting unique structural and functional properties of malarial glycolytic enzymes for antimalarial drug development, Malar Res Treat. 2014;2014 :451065. doi: 10.1155/2014/451065 25580350
18 Chaouiya C. , Petri net modeling of biological networks, Brief Bioinform. 2007;8 :210–9.17626066
19 Georgakopoulos D. , Hornick M. and Sheth A. , An overview of workflow management—from process modeling to workflow automation infrastructure. Distrib. Parallel Databases 3, 1995;119–53.
20 Heiner M. and Koch I. , Petri net-based model validation in systems biology. Applications And Theory of Petri Nets. Berlin Heidelberg: Springer. 2004:216–37.
21 Heiner M. , Koch I. and Will J. , Model validation of biological pathways using Petri nets–demonstrated for apoptosis, Biosystems. 2004;75 :15–28. doi: 10.1016/j.biosystems.2004.03.003 15245801
22 M. I. Ivan, Modeling Biological Systems with Stochastic Petri Nets, Technical Report CoSBi 08/2010.
23 Jitsukawa M. , Kawamoto P. N. and Shidama Y. , Formulation of Cell Petri Nets, Formalized Mathematics. 2013;21 :241–7.
24 Liu D-R and Shen M , Workflow modeling for virtual processes: an order-preserving process-view approach, Information Systems. 2003;28 :505–32.
25 Murata T. , Petri nets. Properties, analysis and applications, Proceedings of the IEEE. 1989 Apr;77 (4 ):541–580.
26 Oyelade J. , Isewon I. , Rotimi S. , Isewon I. , Rotimi S. and Okunoren I. , Modeling of the Glycolysis Pathway in Plasmodium falciparum using Petri Nets, Bioinformatics and Biology Insights. 2016;10 :49–57.27199550
27 Peleg M. , Rubin D. and Altman R.B. , M.D., Using Petri Net Tools to Study Properties and Dynamics of Biological Systems, J Am Med Inform Assoc. 2005;12 :181–99. doi: 10.1197/jamia.M1637 15561791
28 Pinney J.W. , Westhead D.R. and McConkey G.A. , Petri Net representations in systems biology, Biochemical Society Transactions. 2003;31 :1513–5. doi: 10.1042/bst0311513 14641101
29 Popova-Zeugmann L. , Time and Petri Nets, Berlin Heidelberg: Springer-Verlag; 2013.
30 Popova-Zeugmann L. , Heiner M. and Koch I. , Time Petri nets for modeling and analysis of biochemical networks, Fundamenta Informaticae. 2005;67 :149–62.
31 Reisig W. , Introduction of Petri net theory, Springer-Verlag; 1988.
32 van Riel N.A. , Dynamic modeling and analysis of biochemical networks: mechanism-based models and model-based experiments, Brief Bioinform. 2006;7 :364–74.17107967
33 M. Silva, Petri Nets and Flexible Manufacturing, Petri Nets and Flexible Manufacturing, rebuilt version January 24, 2005;1–32.
34 Banks R. and Steggles L.J. , A high-level Petri net framework for genetic regulatory networks, J Integr Bioinform. 2007;4 :1–12.
35 Steggles L.J. , Banks R. , Shaw O. and Wipat A. , Qualitatively modeling and analysing genetic regulatory networks: a Petri net approach, Bioinform, February 2007;23 (1 ):336–43.
36 M. Herajy, F. Liu and C. Rohr, Coloured hybrid Petri nets for systems biology, M. Heiner (Ed.): BioPPN 2014, a satellite event of PETRI NETS 2014, CEUR Workshop Proceedings 2014;1159.
37 Wu N. , Necessary and Sufficient Conditions for Deadlock-Free Operation in Flexible Manufacturing Systems Using a Colored Petri Net Model, IEEE Transactions on systems, and Cybernetics—Part C: Applications and Reviews. 1999;29 (2 ).
38 J. Comet, H. Klaudel and S. Liauzu, Modeling multi-valued genetic regulatory networks using high-level Petri nets, In: Proceedings of International Conference on Application and Theory of Petri Nets. 2005;208–227.
39 Pastor E. , Roig O. , Cortadella J. and Badia R.M. , Petri net analysis using Boolean manipulation, in Proceedings of Application and Theory of Petri Nets ‘94, LNCS. 1994;815 :416–35.
40 Best E. , Devillers R. and Koutny M. , Petri nets, process algebras and concurrent programing languages, in Lecture Notes in Computer Science (LNCS), Berlin: Springer; 1998. p. 1492.
41 Konar A. , Artificial Intelligence and Soft Computing: Behavioral and Cognitive Modeling of the Human Brain, Boca Raton: CRC Press; 1999.
42 Konar A. and Mandal A.K. , Uncertainty management in expert systems using fuzzy Petri nets, IEEE Trans. Knowledge Data Eng. 1996;8 :96–105.
43 A. Konar, Uncertainty management in expert system using fuzzy Petri nets, Ph.D. dissertation, Jadavpur University, India, 1994.
44 Ito S. , Ohta A. and Tsuji K. , Modeling of quantum computer by using quantum Petri net, Proc. ITC-CSCC2008, Shimonoseki, Japan. July 2008. p.281–284.
45 Ito S. , Ohta A. and Tsuji K. , On a new quantum net model for quantum computer, Proc. WiNF2e08, Nagoya, Japan, Sept. 2008. p. 185–190.
46 Meseguer J. and Montanari U. , Petri nets are monoids. Information and Computation, 1990;88 :105–155.
47 Crick F. H. C. , Codon-anticodon pairing: The wobble hypothesis, J Mol Biol. 1966;19 :548–555. doi: 10.1016/s0022-2836(66)80022-0 5969078
48 Crick F. H. C. , The origin of the genetic code, J Mol Biol. 1968;38 :367–379. doi: 10.1016/0022-2836(68)90392-6 4887876
49 The Geometry of Rene Descartes, Kessinger Publishing Whitefish, 2010.
50 Naganuma S. , Intuitive methods for physical mathematics, 2nd edition, Tokyo: Tsusho Sangyo Kenkyusha; 2000. p. 183−246.
51 Tonegawa S. , Somatic generation of antibody diversity, Nature, 1983;302 :575–581. doi: 10.1038/302575a0 6300689
52 bitterharvest’s diary: http://bitterharvest.hatenablog.com/entry/2018/04/17/093013
53 Dawkins R. , The Selfish Gene, Anniversary Ed. Oxford University Press, Oxford, England, 2006 (1976).
54 Wirth N. , Program Development by Stepwise Refinement, in Communications of the ACM, vol. 14 , (4 ), (1971), 221–227.
55 Wirth N. , The Programming Language Pascal, Acta Informatica. 1971;1 (1 ):35–63.
