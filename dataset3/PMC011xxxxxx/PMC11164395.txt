
==== Front
PLoS One
PLoS One
plos
PLOS ONE
1932-6203
Public Library of Science San Francisco, CA USA

10.1371/journal.pone.0303313
PONE-D-24-01820
Research Article
Computer and Information Sciences
Computing Methods
Cloud Computing
Physical Sciences
Mathematics
Applied Mathematics
Algorithms
Research and Analysis Methods
Simulation and Modeling
Algorithms
Physical Sciences
Mathematics
Applied Mathematics
Algorithms
Machine Learning Algorithms
Research and Analysis Methods
Simulation and Modeling
Algorithms
Machine Learning Algorithms
Computer and Information Sciences
Artificial Intelligence
Machine Learning
Machine Learning Algorithms
Computer and Information Sciences
Computer Architecture
Computer Hardware
Computer and Information Sciences
Computer Applications
Computerized Simulations
Research and Analysis Methods
Mathematical and Statistical Techniques
Statistical Methods
Physical Sciences
Mathematics
Statistics
Statistical Methods
Computer and Information Sciences
Computer Networks
Network Bandwidth
Research and Analysis Methods
Mathematical and Statistical Techniques
Statistical Methods
Forecasting
Physical Sciences
Mathematics
Statistics
Statistical Methods
Forecasting
E2SVM: Electricity-Efficient SLA-aware Virtual Machine Consolidation approach in cloud data centers
E2SVM consolidation approach in cloud data centers
Kumar Vaneet Conceptualization Methodology Writing – original draft 1
Ali Aleem Formal analysis Methodology Writing – original draft 1
Mittal Payal Formal analysis Investigation Methodology Writing – review & editing 2
https://orcid.org/0000-0002-1211-5425
Aqeel Ibrahim Formal analysis Funding acquisition Visualization Writing – review & editing 3 *
Shuaib Mohammed Data curation Investigation Validation Writing – review & editing 3
https://orcid.org/0000-0003-0504-4515
Alam Shadab Conceptualization Formal analysis Project administration Writing – original draft 3
Aalsalem Mohammed Y. Formal analysis Funding acquisition Project administration Supervision Writing – review & editing 3
1 Department of Computer Science and Engineering, Chandigarh University, Gharuan, India
2 University Institute of Pharma Sciences, Chandigarh University, Gharuan, India
3 College of Engineering and Computer Science, Jazan University, Jazan, Saudi Arabia
Soldani Jacopo Editor
University of Pisa, ITALY
Competing Interests: The authors have declared that no competing interests exist.

* E-mail: iahmed@jazanu.edu.sa
10 6 2024
2024
19 6 e030331315 1 2024
23 4 2024
© 2024 Kumar et al
2024
Kumar et al
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.

Cloud data centers present a challenge to environmental sustainability because of their significant energy consumption. Additionally, performance degradation resulting from energy management solutions, such as virtual machine (VM) consolidation, impacts service level agreements (SLAs) between cloud service providers and users. Thus, to achieve a balance between efficient energy consumption and avoiding SLA violations, we propose a novel VM consolidation algorithm. Conventional algorithms result in unnecessary migrations when improperly selecting VMs. Therefore, our proposed E2SVM algorithm addresses this issue by selecting VMs with high load fluctuations and minimal resource usage from overloaded servers. These selected VMs are then placed on normally loaded servers, considering their stability index. Moreover, our approach prevents server underutilization by either applying all or no VM migrations. Simulation results demonstrate a 12.9% decrease in maximum energy consumption compared with the minimum migration time VM selection policy. In addition, a 47% reduction in SLA violations was observed when using the medium absolute deviation as the overload detection policy. Therefore, this approach holds promise for real-world data centers because it minimizes energy waste and maintains low SLA violations.

Deputyship for Research& Innovation, Ministry of Education in Saudi Arabia ISP-2024 https://orcid.org/0000-0002-1211-5425
Aqeel Ibrahim The authors extend their appreciation to the Deputyship for Research& Innovation, Ministry of Education in Saudi Arabia, for funding this research work through the project number ISP-2024. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript. Data AvailabilityAll relevant data are within the manuscript.
Data Availability

All relevant data are within the manuscript.
==== Body
pmcIntroduction

Cloud computing is an architecture that delivers a cost-effective, flexible, and shared pool of resources to its clients [1]. These resources can be hardware or software (e.g., memory, CPUs, bandwidth, services, and applications), and serve in a pay-as-you-go model. With this client’s favorable features, cloud computing has become a popular computing platform for users [2]. Although edge computing reduces the computational load of cloud data centers (CDCs) even than emerging technologies powered by the cloud, such as blockchain, and the Internet of things (IoT), they generate heterogeneous data traffic for processing on CDCs [3, 4].

According to a report by Globe Newswire, cloud data centers are projected to experience a compound annual growth rate of 17.5%, i.e. from USD 0.37 trillion in 2020 to USD 0.83 trillion by 2025 [5]. A statistical survey has shown that data centers consume 7% of the worldwide generated electricity, with an anticipated growth of 13% by 2030 [6]. Poor server utilization provokes energy consumption as an idle state server consumes approximately 70% of its peak power [7]. Another study indicates that servers typically operate at less than 50% of their maximum capacity [8]. Beloglezove et al. proposed an architectural framework for optimizing data center resources called VM consolidation.

This process is divided into four layers (1) underutilized server detection to put them in low power mode; (2) determining over-utilized hosts for smooth provisioning of requested resources; (3) selection of VMs for migration; and (4) assigning selected VMs to active or reactivated hosts [9]. Although VM consolidation maximizes resource utilization by shifting the workload from little-loaded servers and turning them to power-saving mode, it introduces a new problem of performance degradation with aggressive VM migrations that may raise SLA violations [10]. Existing studies work on a joint solution considering adaptive threshold (underload/overload detection) for maintaining low SLA violations and VM selection as well as VM placement for energy efficiency [11–13] Nevertheless, none of the existing VM selection approaches consider a reduction in SLA violations while minimizing energy consumption.

A schematic diagram of energy consumption and SLA violation tradeoff is shown in Fig 1. The hashed arrow represents reduced energy consumption by minimizing active servers and reduced SLA violations by minimizing unnecessary migrations. To stabilize the tradeoff between SLA violations and energy consumption, third and fourth-layer policies for VM consolidation are developed.

10.1371/journal.pone.0303313.g001 Fig 1 The trade-off between energy consumption and SLAV in cloud data center.

The key contributions of our research can be summarized below:

A novel Energy-Efficient SLA-aware Virtual Machine (E2SVM) consolidation algorithm is designed to deal with energy-SLA tradeoff. This algorithm significantly reduces unnecessary migrations and thereby controls the reactivation of hosts.

A dynamic Minimum utilization Maximum deviation (MuMd) algorithm is proposed to select VMS from an over-utilized server. The basic idea of this algorithm is to migrate the VMs to improve the stability of the consolidation process, thereby maintaining SLA.

We introduced the MuMd aware Best Fit Decrease (MuMdBFD) VM placement algorithm. This algorithm maximizes resource utilization with optimal use of fluctuations in resource provisioning.

The efficiency of the proposed algorithm has been studied using computer-based simulations implemented in MatLab and exhibits its superiority over existing VM selection policies. The proposed algorithm is assessed on dynamic workload to check its validity. Compared with other energy-aware algorithms the proposed algorithm can handle unnecessary VM migrations with heavy load fluctuations and shows a maximum 27.3% reduction in the number of migrations.

The paper is structured as follows: related work section provides a comprehensive review of the literature, focusing on the research challenges concerning energy-efficient SLA-aware VM consolidation. Material and methods section details the application of the E2SVM algorithm. In Experiment Setup and Efficiency Matrices section, the cloud data center and diverse metrics used to evaluate the performance of the proposed method are discussed. Results and Discussion section presents the results obtained from the proposed study. Finally, Conclusion and Future Work section outlines the conclusions of this study and future research works.

Related work

The energy consumption is linearly proportional to CPU utilization, while the quality of Services (QoS) in terms of SLA is controlled by migration thrashing [14]. Although abundant studies have sought to address these issues, even then minimization of SLA violations, maximization of resource utilization, and energy efficiency are still challenging issues [15]. Authors [16] analyzed EC2 instances and found that 20% of performance degradation is due to poor communication systems. Authors in [17] proposed adaptive-based algorithms focusing on past CPU utilization of allocated virtual machines to detect or predict overloaded hosts. Authors in [18] proposed load aware three gear threshold (LATHR) overloaded host detection algorithm to encircle the power of adaptive threshold and static threshold policies. Before these approaches, Beloglazov and Buyya proposed various adaptive and statistical methods to fix the upper threshold values required for the migration process [19]. In [20], the authors have designed multi-resource selection (MRS) VM consolidation using the concept of hottest resource to determine overloaded hosts. They introduced the concept of resource temperature and resourced correlation to determine potential VM for migration.

After detecting an overloaded host, VM selection has always been a part of VM consolidation to make an optimal decision. Beloglazov and Buyya proposed minimum migration time (MMT), maximum correlation (MC), and random selection (RS) VM selection policies. The RC policy selects VMs randomly to reduce the load from the host. The MMT approach selects the VM with least memory utilization among all the VMs from the overloaded host, taking minimum migration overhead. The MC approach selects VM with maximum correlation and proves more power saving but lacks QoS. In contrast, MMT provides better performance incurring more power.

Additionally, Zhou et al. [21] offered five VM selection rules and a three-threshold energy-saving algorithm (TESA) to enhance SLA. Furthermore, Zhou et al.’s [22] innovative flexible three-threshold energy aware (ATEA) VM placement method has decreased energy use and SLA violations. Minimum memory size and lowest CPU utilization constraints are taken for designing VM selection policies. Monil and Rahman have introduced fuzzy logic-based energy-saving VM consolidation algorithms [23]. The standard deviation, memory size, and correlation have been used for defuzzification to select VMs for migration.

Further, Yadav et al. [24] have come up with an idea of ’M estimation regression’ (MeReg) for managing the energy-SLA tradeoff. They used VM’s CPU utilization history to detect the hotspot server to address this issue. In continuation, authors in [25] have proposed two adaptive heuristic models, gradient recent-based regression (Gdr) and bandwidth responsive algorithm for VM selection whereas maximum correlation percentage (MCP) to fix dynamic upper threshold. Noteworthy progress has been recounted regarding energy efficiency and QoS in the cloud data center (DC). Yadav et al. [26] have extended the research for over-utilized host detection using the least medial square regression (LmsReg) heuristics algorithm and introduced a utilization-based prediction method for VM selection. These heuristic algorithms significantly reduced energy consumption with improved SLA violations. This approach is high energy saving but lacks in maintaining low SLA violations. In the latest work by Mandal et al. [27], they introduced an approach aimed at relocating VMs with a dual objective: minimizing size while consuming high energy. While this approach demonstrates significant energy savings, it falls short in maintaining low SLA violations.

All the above approaches improved energy efficiency, focusing on unnecessary VM migrations by simultaneously overlooking fluctuations and current CPU utilization. Migrations of VMs with constant load can fall the DC in migration thrashing (MT) due to redundant migrations resulting in performance degradation. Similarly, heavily loaded VMs should not be migrated to achieve minimum live migration cost. As studied in the literature that requested workload is uncertain in the real world. Thus, utilization aware robust statistical method needs to be designed for handling dynamic consolidation.

Materials and methods

In this section, we will discuss the resource provisioning architecture of VM consolidation in a dynamic environment, which involves using virtual machines as shown in Fig 2 [28]. The main challenges of this architecture are achieving maximum resource utilization and delivering high-quality services. The quality of service is measured using SLA metrics. In order to optimize resource utilization, VMs with high remaining utilization and maximum deviation are migrated to hosts with high remaining utilization and minimum deviation [29].

10.1371/journal.pone.0303313.g002 Fig 2 Multi-objective VM consolidation architecture.

The fundamental process of consolidating VMs to enhance resource utilization and guarantee QoS maintenance is shown in Algorithm 1.

Algorithm 1: Energy-Efficient SLA aware Virtual Machine (E2SVM) consolidation algorithm

Input:hlist,vmlist

Output: hchosen: Detected destination host

1. for each host h in data center

2. for each VM on current host

3. Step-1: Uthrh = MeanAbsoluteDeviation (hlist)||DoubleThreshold

4. Step-2: MigVMlist = MuMd (Hostover,Uthrh)

5. Step-3: hchosen = MuMdBFD (Hlist,MigVMlist,uth)

6. end

The process begins with selecting the list of allocated VMs as input. Then, the workload on each VM is determined at regular time intervals. During each interval, overutilized and underutilized hosts are identified using MAD and THR policies. In the subsequent steps, we delve into the discussion of a dynamic workload-aware VM selection policy called Minimum Utilization Maximum deviation (MuMd) under subsection A. By migrating VMs with minimal utilization, energy efficiency can be enhanced. Additionally, by considering maximum deviation, we can control fluctuations in host status, thereby reducing the number of migrations. This approach is important because VMs with high standard deviation and low current utilization on a host are more likely to cause host overload once again. Following this, the selected VMs from the previous step are mapped to suitable hosts utilizing the suggested VM placement algorithm discussed in subsection B. The combined behavior of these proposed algorithms promotes higher resource utilization, controlled migrations, and ultimately leads to improved SLA compliance and energy efficiency. Table 1 provides a list of notations used throughout this paper.

10.1371/journal.pone.0303313.t001 Table 1 Notations.

V h	Number of virtual machines	
δ v	Deviation in utilization of VM for last n iterations	
L v	Load ratio of current VM	
curr_utiv	Current utilization of VM v	
mips	Million instructions per second	
CPUmips(vτ)	CPU utilization in mips at time τ	
aveCPUmips(v)	Average CPU utilization in mips of VM v	

Proposed MuMd based VM selection algorithm

It has been proved that prudent migrations can optimize VM consolidation and save unwanted traffic load. Therefore, SLA-obedient energy-efficient VM selection is as important as overutilized and underutilized host detection. The suggested algorithm calculates the CPU fluctuations ratio with the summation of current CPU utilization and fluctuations individually for all the virtual machines using the following equation [30]. Further, one or more VMs with the maximum ratio is being selected for migration, explained using flowchart shown in the Fig 3.

Vh={v|visaVMallocatedonthehosth}

ratio=δvδv+curr_utiv×Lv (1)

Lv=curr_utivavailability (2)

Where the set of allocated VMs on host h are represented by Vh. The current CPU utilization curr_utiv of virtual machine v is unitized according to standard deviation (δv) for last n iterations as referred in (3).

Let us consider CPUmips(vτ) representing the MIPS allocated to virtual machine v at time τ. The CPU utilizations of previous itr number of different time slots are denoted as CPUmips(vτ−1), CPUmips(vτ−2) ……..CPUmips(vτ−itr) and aveCPUmips(v) is the average CPU utilization of virtual machine v.

δv=1itr∑i=1itr(CPUmips(v)−avgCPUmips(v))2 (3)

10.1371/journal.pone.0303313.g003 Fig 3 Flow chart of proposed technique (MuMd).

Algorithm 1 shows the implementation of the proposed work in two phases. In the first phase, Line 5- Line 8 determine the CPU utilization (huti) of host in MIPS. As indicated by Line 10 onwards, in the second phase, one or more VMs are selected until the victim host changes its state to normal load, narrated in Fig 2. Line 13 is used to find the ratio of CPU utilization of individual VMs as represented in (1). The best virtual machine will be selected as indicated by Line 14–16 after finding the ratio of all allocated VMs. The proposed algorithm (MuMd) is represented in algorithm 1, and Fig 3 represented the flow of algorithm pictorially.

Algorithm 2 Proposed Algorithm (MuMd VMs Selection)

1. Input:VM_list from overloaded host h

2. Output: Selected VMs

3. MigVM_list←NULL

4. Huti←0

5. MaxRatio←MIN

6. Vh←Each and every virtual Machines on h

7. for each v in Vh do

8. huti←huti+v.utilization

9. end for

10. while (huti≥Uthr)

11. for each VM v in Vh do

12. δv←Stdev(v)

13. ratio=δvδv+curr_utiv

14. if ratio≥MaxRatio then

15. MaxRatio←ratio

16. vchosen←v

17. end if

18. end for

19. huti←huti−CPUmips(v)

20. MigVM_list←vchose

21. end while

22. end

The entanglement of the suggested algorithm depends upon the total number of hosts (M) and virtual machines (N), or O(M+N).

Proposed MuMd based VM placement algorithm

VM placement is considered to be a bin packing optimization problem [31]. As bin packing is an NP-hard problem thus, placement for increasing idle hosts while considering intra VM dependency is a big challenge [32]. Power-aware best-fit decrease (PABFD) is the single prime objective VM placement algorithm. The flow of the proposed MuMd based Best Fit Decrease (MuMdBFD) VM Placement policy is discussed as pseudo-code in algorithm 2. The algorithm reinforces the full flow of VM allocations to the suitable servers and depicts that the system restricts SLA violations with controlled migration thrashing, hence reducing energy consumption.

Algorithm 3: MuMD Based Best Fit Decrease Algorithm (MuMdBFD)

Input: Hlist: all hosts, vm: a new virtual machine, uth: upper threshold

Output: hchosen: the selected destination host

 1. hchosen←null

 2. hratio←0

 3. MinRatio←MAX

 4. Choose cluster c

 5. for each host h in HCc do

 6. huti←0

 7. Vh←All virtual Machines on h

 8. for each v in Vh do

 9. huti←huti+v.utilization

 10. hratio=hratio+δvδv+curr_utiv

 11. end for

 12. if huti>0 then // check active/inactive state of host

 13. utilization←huti+v.utilization

 14. if utilization>1 then

 15. continue

 16. else if utilization≤uth then

 17. ratio=hratio+δvmδvm+curr_utivm

 18. if ratio ≤ MinRatio then

 19. MinRatio←ratio

 20. hchosen←h

 21. endif

 22. endfor

 23. Return: hchosen

In Algorithm 2, Line 8, CPU utilization (huti) of the host is determined. Line 9 determines the CPU utilization to standard deviation ratio (hratio) for each virtual machine (VM) allocated to host h. The purpose of obtaining hratio is to identify a suitable host where the unsettled CPU utilization is maximized for VM placement. Overall deviation is minimum among all the hosts as described by line 16-line 18. After all iterations algorithm returns the best host with high remaining utilization and comparatively minimum deviation.

Theorem 1: The time complexity of the algorithm O(M×N) and depends upon the total number of hosts (M) and virtual machines (N).

Proof: E2SVM algorithm comprises of three steps in sequence. Initialy, adaptive threshold is determind for overload server detection in O(M×k) time, where k is the number of virtual macines on a server. In the second step VM is selected in O(M+N) time. Finally, VMs in migration list are allocated or placed in suitable host in O(M×N) time. Therefore, the overall time complexity of the proposed algorithm is O(M×N).

Experiment setup and efficiency matrices

In this section, we will explain the simulation setup of a cloud data center for comparison and evaluation of existing algorithms with proposed VM selection approach. Thereafter, basic definitions (includes energy consumption models, energy efficiency metric, and SLA violation metrics). In the end, results and discussion are presented in the next section. Table 2 below provides list of abbreviation and notations used to define the different efficiency matrices used in this study.

10.1371/journal.pone.0303313.t002 Table 2 Abbreviations and notations.

H h	Set of M hosts	
CPUmips(h)	CPU utilization of host h in mips	
CPUmips(v)	CPU utilization of VM v in mips	
PC h	Power consumption of host h	
PC max	Power consumption at full utilization	
CPUmips(hτ)	CPU utilization of host in mips at time τ	
EC h	Energy consumption by host h	
TEC	Total energy consumed by data center	
a vh	Allocation of v on host h.	

Modeling of physical machines and VM requests

The experimental setup to run application on IaaS environment, involves configuring N virtual machines {V = (v1,v2,⋯,vN)} and M servers {S = (s1,s2,⋯,sM)}. Each host h is delineated by its processing capacity (CPUmips(h)) in MIPs and PCh as its power usage is measured in watts per second. Likewise, the processing capacity of each virtual machine, represented by v ∈ (v1,v2,⋯,vN). is characterized by CPUmips(v).we simulate a data center with 290 virtual machines and 100 physical hosts of heterogeneous configuration as mentioned in Tables 4 and 5.

Modeling of energy consumption

The CPU utilization, measured in MIPS, is recognized as a crucial factor in governing energy consumption because the power consumption (PCh) of a server is directly proportional to its CPU usage, as indicated in Eq 4 [33]. To accurately describe the energy consumption, we use real data on energy consumption, all of which derive from the SPECpower benchmark [34]. For the experimental study of the proposed work, the HP G4 server is utilized and details of energy consumption is illustrated in Table 3. The maximum power (PCmax) consumed by the HP G4 server amounts to 117 watts [35]. It is observed that, when a server remains idle, it still consumes approximately 70% of its total power. Consequently, underutilized servers consume more power per instruction (about 0.7 times) compared to fully utilized servers.

10.1371/journal.pone.0303313.t003 Table 3 Power consumption by the two servers at different load levels in watts.

Server Utilization	0%	20%	40%	60%	80%	100%	
Power Consumption	86	92.6	99.5	106	112	117	

C.PCh={0.7×PCmax×CPUmips(h)+0.3×PCmax,CPUmips(h)>00,Otherwise (4)

Due to the dynamic nature of workloads, the CPU workload of a host (h) differs over time (τ), which can be represented as CPUmips(hτ). As a result, the energy usage (ECh) over a given time period can be considered an inherent factor of power consumption.

D.ECh=∫τ0τ1PCh(CPUmips(hτ))dt (5)

SLA Metric

Beloglazov and Buyya provided an explanation for SLA violations within the context of the Infrastructure as a Service (IaaS) model, as demonstrated in Eq (6). They introduced the concept of SLATH, which represents the time duration during which SLA violations occur on an active host operating at maximum CPU utilization. Additionally, they introduced PDM as an abbreviation for Performance Degradation by VM resulting from live migrations.

SLAV=SLATH×PDM (6)

IER Metric

Instruction Energy Ratio is another metric that consider both the performance and energy consumption in Million instructions per joule as referred in (7).

IER(M)=∑h=1M∑v=iN(avh.CPUmips(v))TEC (7)

This study’s primary objectives are to increase the number of instructions carried out per unit of energy usage and reduce SLA breaches.

Results and discussion

The effectiveness of the proposed algorithm is evaluated through computer-based simulation conducted in Matlab version R2017a. The specifications of the hosts and virtual machines, obtained from prior studies, are presented in Tables 4 and 5. To ensure result accuracy, the data center undergoes ten iterations during the simulation. The validation of the findings is done by examining SLA violations and energy efficiency metrics. Additionally, the previous section on Experiment Setup and Efficiency Matrices discusses the utilization of IER to demonstrate energy savings per instruction

10.1371/journal.pone.0303313.t004 Table 4 Specifications of data center.

Number of Hosts	Number of Virtual Machines	Data Center	
290	100	1	

10.1371/journal.pone.0303313.t005 Table 5 Specifications of machines.

Type	RAM (MB)	CPU	MIPS	
Host	8192	1	1000–3000	
Virtual Machine	128	1	250–1000	

The effectiveness of the proposed algorithm is evaluated against existing VM selection policies, namely minimum migration time (Mmt), maximum correlation (Mc) [36], and maximum utilization minimum size (MuMs) [37]. In the Mmt policy, the VM with the least remaining time to complete migration is chosen. Conversely, in the Mc policy, the VM with the highest correlation among others on the oversubscribed server is selected for migration to alleviate the workload below the threshold level. In our simulations, we utilize the medium absolute deviation (MAD) and interquartile range (Iqr) policies to establish threshold levels.

The proposed approach reduces energy consumption by an average of 9.9% and 9% compared to the Mad and Iqr algorithms, respectively, as shown in Figs 4 and 5. Fig 6 depicts the energy consumption in joules per million instructions using IER. According to the interpretation, the proposed approach demonstrates a significant 13.3% improvement in the instructions performed per unit of energy.

10.1371/journal.pone.0303313.g004 Fig 4 Energy usage with varying VMs for double threshold (THR) as overload detection policy.

10.1371/journal.pone.0303313.g005 Fig 5 Energy usage with varying VMs for Median Absolute Deviation (MAD) as overload detection policy.

10.1371/journal.pone.0303313.g006 Fig 6 Change in IER for MAD and THR as overload detection policies v/s increasing virtual machines.

SLA violations are a critical concern for cloud service providers because financial penalties may be imposed by users for the duration of the performance degradation. SLA is considered to be a standard parameter to determine the quality of service. The proposed approach in the present study reduces an average 10% SLA violations as shown in Fig 7.

10.1371/journal.pone.0303313.g007 Fig 7 SLA Violations for MAD and THR as overload detection policy v/s virtual machines.

After selecting the victim VMs, it needs to be migrated to other suitable host machines. Thus, migration of virtual machines also degrades the desired performance level and imparts processing overhead to the entire system. Fig 8, reveals that the suggested algorithm has a significantly lower number of migrations than MM and RC algorithms. In order to place underloaded hosts in a low-power mode, all virtual machines (VMs) residing on those hosts are migrated. After the installation of migrable VMs, Fig 9 compares the number of idle hosts that are still present. The results demonstrate that the proposed technique exhibits superior performance compared to the MAD and THR algorithms, with reductions of 10.4 percent and 6.2 percent in idle hosts, respectively.

10.1371/journal.pone.0303313.g008 Fig 8 Change in migrations count for MAD and THR as overload detection policies against increasing virtual machines.

10.1371/journal.pone.0303313.g009 Fig 9 Controlling idle servers for MAD and THR as overload detection policies against increasing virtual machines.

Results in Fig 10 reveals the improvement of overall percentage of suggested algorithm (MuMd) with Minimum Migration (MM) and Random Choice (RC) VM selection algorithms using Median Absolute Deviation (MAD) and Double Threshold (THR) as host overload detection policies. It can be clearly noted that the proposed scheme offers improvement for energy consumption, idle servers, migrations count, instruction energy ratio and service level agreement.

10.1371/journal.pone.0303313.g010 Fig 10 Percentage improvement in various metrices using proposed algorithm compared with existing policies.

Conclusion and future work

In this paper, we proposed an Energy Efficient SLA-aware Virtual Machine Consolidation (E2SVM) algorithm. Initially, we employed existing Median Absolute Deviation (MAD) and Interquartile Range (IQR) policies for detecting overloaded servers. Subsequently, victim virtual machines were selected based on fluctuations using the last 10 historical utilizations and current resource requirements. The proposed Minimum Utilization Maximum Deviation (MuMd) approach considered both past CPU utilization and current resource requirements simultaneously.

This study addressed two critical challenges in the IaaS cloud platform: reducing energy consumption and preventing server overutilization to minimize SLA violations. We implemented the proposed approach using computer-based simulations and evaluated it in Matlab version 2017a. The simulation results demonstrated significant improvements compared to existing benchmark algorithms, including an average reduction of 18.9% in the number of migrations, 12.7% in idle hosts, and a 9.5% decrease in electrical energy usage.

In the future, we aim to incorporate machine learning algorithms for forecasting server workload and apply our approach to real-world data centers.

10.1371/journal.pone.0303313.r001
Decision Letter 0
Soldani Jacopo Academic Editor
© 2024 Jacopo Soldani
2024
Jacopo Soldani
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
Submission Version0
27 Feb 2024

PONE-D-24-01820E2SVM: Electricity-Efficient SLA-aware Virtual Machine Consolidation Approach in Cloud Data CentersPLOS ONE

Dear Dr. Aqeel,

Thank you for submitting your manuscript to PLOS ONE. After careful consideration, we feel that it has merit but does not fully meet PLOS ONE’s publication criteria as it currently stands. Therefore, we invite you to submit a revised version of the manuscript that addresses the points raised during the review process.

Please submit your revised manuscript by Apr 12 2024 11:59PM. If you will need more time than this to complete your revisions, please reply to this message or contact the journal office at plosone@plos.org. When you're ready to submit your revision, log on to https://www.editorialmanager.com/pone/ and select the 'Submissions Needing Revision' folder to locate your manuscript file.

Please include the following items when submitting your revised manuscript:A rebuttal letter that responds to each point raised by the academic editor and reviewer(s). You should upload this letter as a separate file labeled 'Response to Reviewers'.

A marked-up copy of your manuscript that highlights changes made to the original version. You should upload this as a separate file labeled 'Revised Manuscript with Track Changes'.

An unmarked version of your revised paper without tracked changes. You should upload this as a separate file labeled 'Manuscript'.

If you would like to make changes to your financial disclosure, please include your updated statement in your cover letter. Guidelines for resubmitting your figure files are available below the reviewer comments at the end of this letter.

If applicable, we recommend that you deposit your laboratory protocols in protocols.io to enhance the reproducibility of your results. Protocols.io assigns your protocol its own identifier (DOI) so that it can be cited independently in the future. For instructions see: https://journals.plos.org/plosone/s/submission-guidelines#loc-laboratory-protocols. Additionally, PLOS ONE offers an option for publishing peer-reviewed Lab Protocol articles, which describe protocols hosted on protocols.io. Read more information on sharing protocols at https://plos.org/protocols?utm_medium=editorial-email&utm_source=authorletters&utm_campaign=protocols.

We look forward to receiving your revised manuscript.

Kind regards,

Jacopo Soldani

Academic Editor

PLOS ONE

Journal requirements:

When submitting your revision, we need you to address these additional requirements.

1. Please ensure that your manuscript meets PLOS ONE's style requirements, including those for file naming. The PLOS ONE style templates can be found at

https://journals.plos.org/plosone/s/file?id=wjVg/PLOSOne_formatting_sample_main_body.pdf and

https://journals.plos.org/plosone/s/file?id=ba62/PLOSOne_formatting_sample_title_authors_affiliations.pdf

2. Please note that PLOS ONE has specific guidelines on code sharing for submissions in which author-generated code underpins the findings in the manuscript. In these cases, all author-generated code must be made available without restrictions upon publication of the work. Please review our guidelines at https://journals.plos.org/plosone/s/materials-and-software-sharing#loc-sharing-code and ensure that your code is shared in a way that follows best practice and facilitates reproducibility and reuse.

3. Thank you for stating the following financial disclosure:

“The authors extend their appreciation to the Deputyship for Research& Innovation, Ministry of Education in Saudi Arabia, for funding this research work through the project number ISP-2024.”

Please state what role the funders took in the study.  If the funders had no role, please state: "The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript."

If this statement is not correct you must amend it as needed.

Please include this amended Role of Funder statement in your cover letter; we will change the online submission form on your behalf.

4. Thank you for stating the following in the Acknowledgments Section of your manuscript:

“The authors extend their appreciation to the Deputyship for Research& Innovation, Ministry of Education in Saudi Arabia, for funding this research work through the project number ISP-2024.”

We note that you have provided funding information that is currently declared in your Funding Statement. However, funding information should not appear in the Acknowledgments section or other areas of your manuscript. We will only publish funding information present in the Funding Statement section of the online submission form.

Please remove any funding-related text from the manuscript and let us know how you would like to update your Funding Statement. Currently, your Funding Statement reads as follows:

“The authors extend their appreciation to the Deputyship for Research& Innovation, Ministry of Education in Saudi Arabia, for funding this research work through the project number ISP-2024.”

Please include your amended statements within your cover letter; we will change the online submission form on your behalf.

[Note: HTML markup is below. Please do not edit.]

Reviewers' comments:

Reviewer's Responses to Questions

Comments to the Author

1. Is the manuscript technically sound, and do the data support the conclusions?

The manuscript must describe a technically sound piece of scientific research with data that supports the conclusions. Experiments must have been conducted rigorously, with appropriate controls, replication, and sample sizes. The conclusions must be drawn appropriately based on the data presented.

Reviewer #1: Yes

Reviewer #2: Yes

Reviewer #3: Partly

**********

2. Has the statistical analysis been performed appropriately and rigorously?

Reviewer #1: Yes

Reviewer #2: Yes

Reviewer #3: I Don't Know

**********

3. Have the authors made all data underlying the findings in their manuscript fully available?

The PLOS Data policy requires authors to make all data underlying the findings described in their manuscript fully available without restriction, with rare exception (please refer to the Data Availability Statement in the manuscript PDF file). The data should be provided as part of the manuscript or its supporting information, or deposited to a public repository. For example, in addition to summary statistics, the data points behind means, medians and variance measures should be available. If there are restrictions on publicly sharing data—e.g. participant privacy or use of data from a third party—those must be specified.

Reviewer #1: Yes

Reviewer #2: No

Reviewer #3: Yes

**********

4. Is the manuscript presented in an intelligible fashion and written in standard English?

PLOS ONE does not copyedit accepted manuscripts, so the language in submitted articles must be clear, correct, and unambiguous. Any typographical or grammatical errors should be corrected at revision, so please note any specific errors here.

Reviewer #1: Yes

Reviewer #2: Yes

Reviewer #3: Yes

**********

5. Review Comments to the Author

Please use the space provided to explain your answers to the questions above. You may also include additional comments for the author, including concerns about dual publication, research ethics, or publication ethics. (Please upload your review as an attachment if it exceeds 20,000 characters)

Reviewer #1: To reduce energy consumption and SLA violations, the authors propose a VM consolidation algorithm. The experimental results illustrate that the proposed algorithm performs better than other algorithms in terms of energy consumption and SLA violations. However, the following problem should be addressed:

(1)The Abstract of this paper should be rewritten.

(2) In the paper, what is the time complexity for the proposed algorithm? It is better for the authors to give more explanations of the algorithms, such as the function of each step, and the overall basic idea.

(3)The authors make a comparison with other algorithms in the paper. However, these algorithms are out of date. It is not fair to make a comparison with these algorithms. Could the authors make a comparison with the newly published algorithms in the field of VM deployment, e.g., “An Energy-efficient VM Allocation Algorithm for IoT Applications in a Cloud Data Center”, 2021 (The source code and videos are shared on GitHub https://github.com/mshojafar/sourcecodes/tree/master/Zhou2021AFED-EF_Sourcecode); and “Minimizing SLA Violation and Power Consumption in Cloud Data Centers Using Adaptive Energy-aware Algorithms”.

(4)For the comparison algorithms, It is suggested to make a simple introduction in the experiment part.

(5) The quality of the Figures in the paper should be further improved in the revision.

(6) In the paper, the authors evaluate the energy consumption. However, any power model is essential for energy-aware algorithms. Have the authors considered selecting other energy consumption models? The author can benefit from these references to enrich these parts, such as “IECL: An Intelligence Energy Consumption Model for Cloud Manufacturing”, DOI: 10. 1109/TII. 2022.3165085; doi:10.1109/TGCN.2021.3121961; DOI: 10.1007/s00521-019-04119-7.

(7) There are many spelling errors in the manuscript. A thorough spelling check is required in the revision.

Reviewer #2: This paper proposes an approach to improve Virtual Machines (VMs) consolidation in a data center by balancing Service Level Agreement (SLA) violations and energy consumption. The approach is based on a multi-objective consolidation architecture that individuates under-utilised servers to be put in low power mode and over-utilised servers to migrate VMs in order to avoid performance degradation which could lead to SLA violations.

The devised algorithms are evaluated by simulation and compared with existing VM migration policies.

The topics of the paper are interesting and with growing importance in the last few years. The paper has a standard structure and, generally, is well-written with only some typos and small spelling mistakes.

Given that energy consumption is a central topic of the paper, I think the energy model should be motivated and explained better to convince the reader that energy consumption is linearly proportional to CPU utilisation. The cited energy model refers to a study from 2007 and I believe that data center technologies are changed in the meantime. Moreover, my intuition is that such linear relation is referred to CPU-bound applications only, and I do not know if can be considered for the general case. I suggest studying and discussing these points in the paper.

Moreover, I think that the used algorithm's execution should be evaluated in terms of energy consumption since the result of about 9% energy consumption in the evaluation section could be decreased by the algorithms. E.g. if the algorithms execution consumes 10% of the overall energy there is no gain in terms of energy consumption.

Furthermore, I suggest evaluating if unutilised servers can be automatically shut down to reduce energy consumption and if the power-up when they are needed is feasible in terms of time to avoid SLA violations.

In conclusion, I think that the paper can be improved but could be accepted after revision of some parts.

Reviewer #3: In this paper, the authors proposed an Energy-Efficient Service Level Agreement (SLA)-‎aware Virtual Machine (E2SVM) to control energy consumption through optimization of ‎existing resources. Overall, the paper is well organized and written in a rigorous and clear ‎style. The current article necessitates a comprehensive structural revision to enhance its ‎coherence. Please revise the following issues:‎

‎-‎ Although the ABSTRACT structure is good, I suggest that the philosophy of using the ‎proposed method should be explained.‎

‎-‎ In my opinion, the INTRODUCTION section needs to be revised. In this section there ‎should be three points: 1) motivation, 2) a summary of the challenges of previous ‎studies, and 3) contribution.‎

‎-‎ The Related Work section is too short, should have additional resources, and may be ‎separated by subjects: QoS, Energy consumption, and SLA, subjects related to the ‎article. Here are some suggestions: " Server ‎Consolidation Algorithms for Cloud ‎Computing: Taxonomies and Systematic Analysis of ‎Literature", “MECpVmS: an SLA ‎aware energy-efficient virtual machine selection policy for green cloud computing”, " ‎Reducing Energy Footprint in Cloud Computing: A Study on the Impact of ‎Clustering ‎Techniques and Scheduling Algorithms for Scientific Workflows", “Power and thermal-‎aware virtual machine scheduling optimization in cloud data center”, "Computing ‎‎Resources Scalability Performance Analysis in Cloud Computing Data Center", ‎‎"HEPGA: a ‎new effective hybrid ‎algorithm for scientific workflow scheduling in cloud ‎computing ‎environment", "Modeling and analysis of quality of service and energy ‎consumption in cloud environment”. ‎

‎-‎ The authors stated in the abstract “So, this approach can be used in real-world data ‎centers through minimizing of energy wastage thereby maintaining low SLA violations ‎or fluctuations”, but no real implementation was made in the paper. While the ‎experiment and results presented are intriguing and indicative of promise, it is ‎imperative to validate these outcomes through real-world application. I recommend the ‎incorporation of empirical experiments to facilitate a meaningful comparison with ‎simulation results; it is better to analyze the time complexity of the proposed method in ‎the worst case.‎

‎-‎ While the article alludes to cost reduction associated with Cloud services, a ‎comprehensive examination of this aspect remains elusive. It would be prudent for the ‎author to expound upon the topic, particularly focusing on unreliable services like ‎preemptible servers (e.g., Spot Instances on Amazon and Preemptible instances on ‎Google). Noteworthy articles like "MULTS: A Multi-cloud Fault-tolerant Architecture to ‎Manage Transient Servers in Cloud Computing" (Journal of Systems Architecture, 2019) ‎and "Portfolio-driven Resource Management for Transient Cloud Servers" (ACM on ‎Measurement and Analysis of Computing Systems 2019) are worth considering. The ‎viability of unreliable services could be assessed within the framework of Fault ‎Tolerance approaches, thereby underlining the potential trade-offs in terms of Quality of ‎Service (QoS). In light of these considerations, the article's focus may be refined to ‎address these intricate aspects;‎

‎-‎ The main limitation of the proposed methods should be explained in detail;‎ ‎

‎-‎ The contribution and novelty of this work should be further justified and future studies ‎‎should be given;‎ ‎

‎-‎ The simulation environment should be provided in detail, e.g., software, sampling size, ‎solver ‎type, etc.‎

‎-‎ An important point needs to be included in this article: the type of application that can ‎be executed using the proposed model. The inclusion of this facet would enrich the ‎article's scope and applicability;‎

‎-‎ There are still some grammatical errors in the manuscript. Authors should use software ‎such as Grammarly for proof-checking. ‎

‎-‎ The tense of the verbs in the CONCLUSION section must be past tense. In this section, ‎the most important numerical improvements of the proposed method should be ‎mentioned and marginal explanations should be avoided. In addition, the suggestions ‎mentioned for further research should be well presented.‎

**********

6. PLOS authors have the option to publish the peer review history of their article (what does this mean?). If published, this will include your full peer review and any attached files.

If you choose “no”, your identity will remain anonymous but your review may still be made public.

Do you want your identity to be public for this peer review? For information about this choice, including consent withdrawal, please see our Privacy Policy.

Reviewer #1: Yes: ZHOU ZHOU

Reviewer #2: No

Reviewer #3: No

**********

[NOTE: If reviewer comments were submitted as an attachment file, they will be attached to this email and accessible via the submission site. Please log into your account, locate the manuscript record, and check for the action link "View Attachments". If this link does not appear, there are no attachment files.]

While revising your submission, please upload your figure files to the Preflight Analysis and Conversion Engine (PACE) digital diagnostic tool, https://pacev2.apexcovantage.com/. PACE helps ensure that figures meet PLOS requirements. To use PACE, you must first register as a user. Registration is free. Then, login and navigate to the UPLOAD tab, where you will find detailed instructions on how to use the tool. If you encounter any issues or have any questions when using PACE, please email PLOS at figures@plos.org. Please note that Supporting Information files do not need this step.

10.1371/journal.pone.0303313.r002
Author response to Decision Letter 0
Submission Version1
15 Mar 2024

The response to review comments have been attached in separate sheet.

Attachment Submitted filename: Reply to Reviewer comments E2VSM.docx

10.1371/journal.pone.0303313.r003
Decision Letter 1
Soldani Jacopo Academic Editor
© 2024 Jacopo Soldani
2024
Jacopo Soldani
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
Submission Version1
23 Apr 2024

E2SVM: Electricity-Efficient SLA-aware Virtual Machine Consolidation Approach in Cloud Data Centers

PONE-D-24-01820R1

Dear Dr. Aqeel,

We’re pleased to inform you that your manuscript has been judged scientifically suitable for publication and will be formally accepted for publication once it meets all outstanding technical requirements.

Within one week, you’ll receive an e-mail detailing the required amendments. When these have been addressed, you’ll receive a formal acceptance letter and your manuscript will be scheduled for publication.

An invoice will be generated when your article is formally accepted. Please note, if your institution has a publishing partnership with PLOS and your article meets the relevant criteria, all or part of your publication costs will be covered. Please make sure your user information is up-to-date by logging into Editorial Manager at Editorial Manager® and clicking the ‘Update My Information' link at the top of the page. If you have any questions relating to publication charges, please contact our Author Billing department directly at authorbilling@plos.org.

If your institution or institutions have a press office, please notify them about your upcoming paper to help maximize its impact. If they’ll be preparing press materials, please inform our press team as soon as possible -- no later than 48 hours after receiving the formal acceptance. Your manuscript will remain under strict press embargo until 2 pm Eastern Time on the date of publication. For more information, please contact onepress@plos.org.

Kind regards,

Jacopo Soldani

Academic Editor

PLOS ONE

Additional Editor Comments (optional):

Reviewers' comments:

Reviewer's Responses to Questions

Comments to the Author

1. If the authors have adequately addressed your comments raised in a previous round of review and you feel that this manuscript is now acceptable for publication, you may indicate that here to bypass the “Comments to the Author” section, enter your conflict of interest statement in the “Confidential to Editor” section, and submit your "Accept" recommendation.

Reviewer #1: All comments have been addressed

Reviewer #2: All comments have been addressed

Reviewer #3: All comments have been addressed

**********

2. Is the manuscript technically sound, and do the data support the conclusions?

The manuscript must describe a technically sound piece of scientific research with data that supports the conclusions. Experiments must have been conducted rigorously, with appropriate controls, replication, and sample sizes. The conclusions must be drawn appropriately based on the data presented.

Reviewer #1: Yes

Reviewer #2: Yes

Reviewer #3: Yes

**********

3. Has the statistical analysis been performed appropriately and rigorously?

Reviewer #1: Yes

Reviewer #2: Yes

Reviewer #3: Yes

**********

4. Have the authors made all data underlying the findings in their manuscript fully available?

The PLOS Data policy requires authors to make all data underlying the findings described in their manuscript fully available without restriction, with rare exception (please refer to the Data Availability Statement in the manuscript PDF file). The data should be provided as part of the manuscript or its supporting information, or deposited to a public repository. For example, in addition to summary statistics, the data points behind means, medians and variance measures should be available. If there are restrictions on publicly sharing data—e.g. participant privacy or use of data from a third party—those must be specified.

Reviewer #1: Yes

Reviewer #2: Yes

Reviewer #3: Yes

**********

5. Is the manuscript presented in an intelligible fashion and written in standard English?

PLOS ONE does not copyedit accepted manuscripts, so the language in submitted articles must be clear, correct, and unambiguous. Any typographical or grammatical errors should be corrected at revision, so please note any specific errors here.

Reviewer #1: Yes

Reviewer #2: Yes

Reviewer #3: Yes

**********

6. Review Comments to the Author

Please use the space provided to explain your answers to the questions above. You may also include additional comments for the author, including concerns about dual publication, research ethics, or publication ethics. (Please upload your review as an attachment if it exceeds 20,000 characters)

Reviewer #1: All of my concerns have been addressed (including the experiment part and other parts). It is suggested that you accept this paper.

Reviewer #2: (No Response)

Reviewer #3: (No Response)

**********

7. PLOS authors have the option to publish the peer review history of their article (what does this mean?). If published, this will include your full peer review and any attached files.

If you choose “no”, your identity will remain anonymous but your review may still be made public.

Do you want your identity to be public for this peer review? For information about this choice, including consent withdrawal, please see our Privacy Policy.

Reviewer #1: Yes: Zhou Zhou

Reviewer #2: No

Reviewer #3: No

**********

10.1371/journal.pone.0303313.r004
Acceptance letter
Soldani Jacopo Academic Editor
© 2024 Jacopo Soldani
2024
Jacopo Soldani
https://creativecommons.org/licenses/by/4.0/ This is an open access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.
4 May 2024

PONE-D-24-01820R1

PLOS ONE

Dear Dr. Aqeel,

I'm pleased to inform you that your manuscript has been deemed suitable for publication in PLOS ONE. Congratulations! Your manuscript is now being handed over to our production team.

At this stage, our production department will prepare your paper for publication. This includes ensuring the following:

* All references, tables, and figures are properly cited

* All relevant supporting information is included in the manuscript submission,

* There are no issues that prevent the paper from being properly typeset

If revisions are needed, the production department will contact you directly to resolve them. If no revisions are needed, you will receive an email when the publication date has been set. At this time, we do not offer pre-publication proofs to authors during production of the accepted work. Please keep in mind that we are working through a large volume of accepted articles, so please give us a few weeks to review your paper and let you know the next and final steps.

Lastly, if your institution or institutions have a press office, please let them know about your upcoming paper now to help maximize its impact. If they'll be preparing press materials, please inform our press team within the next 48 hours. Your manuscript will remain under strict press embargo until 2 pm Eastern Time on the date of publication. For more information, please contact onepress@plos.org.

If we can help with anything else, please email us at customercare@plos.org.

Thank you for submitting your work to PLOS ONE and supporting open access.

Kind regards,

PLOS ONE Editorial Office Staff

on behalf of

Dr. Jacopo Soldani

Academic Editor

PLOS ONE
==== Refs
References

1 Flynn MJ . Very high-speed computing systems. Proc IEEE Int Conf Cloud Comput Intell Syst CCIS. 1966;54 : 1901–1909. doi: 10.1109/PROC.1966.5273
2 Zhou Z , Shojafar M , Alazab M , Abawajy J , Li F . AFED-EF: An Energy-Efficient VM Allocation Algorithm for IoT Applications in a Cloud Data Center. IEEE Trans Green Commun Netw. 2021;5 : 658–669. doi: 10.1109/TGCN.2021.3067309
3 Buvana M , Loheswaran K , Madhavi K , Ponnusamy S , Behura A , Jayavadivel R . Improved resource management and utilization based on a fog-cloud computing system with IOT. Microprocess Microsyst. 2021;2 : 103815. doi: 10.1016/j.micpro.2020.103815
4 Chinnasamy P , Albakri A , Khan M , Raja AA , Kiran A , Babu JC . Smart Contract-Enabled Secure Sharing of Health Data for a Mobile Cloud-Based E-Health System. Appl Sci. 2023;13 : 3970.
5 Temjanovski R , Bezovski Z , Jovanov T . Cloud computing in logistic and Supply Chain Management environment. J Int Board Contents. 2021;6 : 23–33. doi: 10.46763/JOE216.10023t
6 Shaw R , Howley E , Barrett E . Applying Reinforcement Learning towards automating energy efficient virtual machine consolidation in cloud data centers. Inf Syst. 2021;107 : 101–122. doi: 10.1016/j.is.2021.101722
7 Uddin M , Shah A , Memon J . Measuring Efficiency of Tier Level Data Centers to Implement Green Energy Efficient Data Centers Measuring Efficiency of Tier Level Data Centers to Implement Green Energy Efficient Data Centers. 2013. doi: 10.5829/idosi.mejsr.2013.15.2.2356
8 Bermejo B , Juiz C , Guerrero C . Virtualization and consolidation: a systematic review of the past 10 years of research on energy and performance. J Supercomput. 2019;75 : 808–836. doi: 10.1007/s11227-018-2613-1
9 Goyal P , Mittal P . Pharmacognostical and Pharmacological Review on Crinum Latifolium. Plant Cell Biotechnol Mol Biol. 2020;21 : 207–211.
10 Aqeel I , Khormi IM , Khan SB , Shuaib M , Almusharraf A , Alam S , et al . Load Balancing Using Artificial Intelligence for Cloud-Enabled Internet of Everything in Healthcare Domain. Sensors. 2023;23 : 5349.37300076
11 Mikram H , El Kafhali S , Saadi Y . Server Consolidation Algorithms for Cloud Computing: Taxonomies and Systematic Analysis of Literature. Int J Cloud Appl Comput. 2022;12 : 1–24. doi: 10.4018/IJCAC.311034
12 Kumar V , Jindal B . Load Aware Hotspot Selection for SLA Improvement in Cloud Computing and Protect Environment by Reduction In CO 2 Emissions. IOP Conf Ser Earth Environ Sci. 2021;889 : 012–028. doi: 10.1088/1755-1315/889/1/012028
13 Garg V , Jindal B . Resource optimization using predictive virtual machine consolidation approach in cloud environment. Intell Decis Technol. 2023;Preprint: 1–14. doi: 10.3233/IDT-220222
14 Alharbi F , Tian YC , Tang M , Zhang WZ , Peng C , Fei M . An Ant Colony System for energy-efficient dynamic Virtual Machine Placement in data centers. Expert Syst Appl. 2019;120 : 228–238. doi: 10.1016/j.eswa.2018.11.029
15 Hsieh SY , Liu CS , Buyya R , Zomaya AY . Utilization-prediction-aware virtual machine consolidation approach for energy-efficient cloud data centers. J Parallel Distrib Comput. 2020;139 : 99–109. doi: 10.1016/j.jpdc.2019.12.014
16 Schad J , Dittrich J , Quiané-Ruiz J-AA . Runtime measurements in the cloud: Observing, analyzing, and reducing variance. Proc VLDB Endow. 2010;3 : 460–471. doi: 10.14778/1920841.1920902
17 Ranjbari M , Akbari Torkestani J . A learning automata-based algorithm for energy and SLA efficient consolidation of virtual machines in cloud data centers. J Parallel Distrib Comput. 2018;113 : 55–62. doi: 10.1016/j.jpdc.2017.10.009
18 Vaneet K , Balkrishan J . Energy efficient virtual machine migration approach with SLA conservation in cloud computing. J Cent South Univ. 2021;28 : 760–770.
19 Buyya R , Beloglazov A , Abawajy J . Energy-efficient management of data center resources for cloud computing: A vision, architectural elements, and open challenges. International Conference on Parallel and Distributed Processing Techniques and Applications. 2010. pp. 1–12. doi: 10.1002/cpe.1867
20 Hieu NT , Di Francesco M , Yla-Jaaski A . A multi-resource selection scheme for virtual machine consolidation in cloud data centers. 6th IEEE Int Conf Cloud Comput Technol Sci. 2015;2015 (2 ): 234–239. doi: 10.1109/CloudCom.2014.130
21 Zhou Z , Hu ZG , Song T , Yu JY . A novel virtual machine deployment algorithm with energy efficiency in cloud computing. J Cent South Univ. 2015;22 : 974–983. doi: 10.1007/s11771-015-2608-5
22 Zhou Z , Hu Z , Li K . Virtual Machine Placement Algorithm for Both Energy-Awareness and SLA Violation Reduction in Cloud Data Centers. Sci Program. 2016;2016 : 1–11. doi: 10.1155/2016/5612039
23 Monil MAH , Rahman RM . VM consolidation approach based on heuristics fuzzy logic, and migration control. J Cloud Comput. 2016;5 : 1–18. doi: 10.1186/s13677-016-0059-7
24 Yadav R , Zhang W . MeReg: Managing energy-SLA tradeoff for green mobile cloud computing. Wirel Commun Mob Comput. 2017;2017 : 1–11. doi: 10.1155/2017/6741972
25 Yadav R , Zhang W , Kaiwartya O , Singh PR , Elgendy IA , Tian YC . Adaptive Energy-Aware Algorithms for Minimizing Energy Consumption and SLA Violation in Cloud Computing. IEEE Access. 2018;6 : 55923–55936. doi: 10.1109/ACCESS.2018.2872750
26 Yadav R , Zhang W , Li K , Liu C , Shafiq M , Karn NK . An adaptive heuristic for managing energy consumption and overloaded hosts in a cloud data center. Wirel Networks. 2020;26 : 1905–1919. doi: 10.1007/s11276-018-1874-1
27 Mandal R , Mondal MK , Banerjee S , Srivastava G , Alnumay W , Ghosh U , et al . MECpVmS: an SLA aware energy-efficient virtual machine selection policy for green cloud computing. Cluster Comput. 2023;26 : 651–665. doi: 10.1007/s10586-022-03684-2
28 Thakur N , Goswami M , Mittal P , Goyal P , Sood A . Research Article Solid Dispersion: A Novel Approach for Bioavailability Enhancement. 2016;39 : 265–272.
29 Rana N , Abd Latiff MS , Abdulhamid SM , Misra S . A hybrid whale optimization algorithm with differential evolution optimization for multi-objective virtual machine scheduling in cloud computing. Eng Optim. 2022;54 : 1999–2016.
30 Qamar S , Amaan M , Rahman MI , Aqeel I , Shuaib M , Khormi IM , et al . Cloud data transmission based on security and improved routing through hybrid machine learning techniques. Soft Comput. 2023; 1–8.
31 Rana N , Latiff MSA , Abdulhamid SM , Chiroma H . Whale optimization algorithm: a systematic review of contemporary applications, modifications and developments. Neural Comput Appl. 2020;32 : 16245–16277.
32 Ahmad RW , Gani A , Siti SH , Shiraz M , Xia F , Madani SA . Virtual machine migration in cloud data centers: a review, taxonomy, and open research issues. J Supercomput. 2015;71 : 2473–2515. doi: 10.1007/s11227-015-1400-5
33 Saadi Y , El Kafhali S . Energy-efficient strategy for virtual machine consolidation in cloud environment. Soft Comput. 2020;2 : 14845–14859. doi: 10.1007/s00500-020-04839-2
34 Zhou Z , Abawajy J , Chowdhury M , Hu Z , Li K , Cheng H , et al . Minimizing SLA violation and power consumption in Cloud data centers using adaptive energy-aware algorithms. Futur Gener Comput Syst. 2017. doi: 10.1016/j.future.2017.07.048
35 Zhang X , Wu T , Chen M , Wei T , Zhou J , Hu S , et al . Energy-aware virtual machine allocation for cloud with resource reservation. J Syst Softw. 2019;147 : 147–161. doi: 10.1016/j.jss.2018.09.084
36 Beloglazov A , Buyya R . Optimal online deterministic algorithms and adaptive heuristics for energy and performance efficient dynamic consolidation of virtual machines in Cloud data centers. Concurr Comput Pract Exp. 2012;24 : 1397–1420. doi: 10.1002/cpe.1867
37 Yadav R, Zhang W, Chen H, Guo T. MuMs: Energy-aware VM selection scheme for cloud data center. 28th International Workshop on Database and Expert Systems Applications, DEXA. Lyon, France; 2017. pp. 132–136. doi: 10.1109/DEXA.2017.43
