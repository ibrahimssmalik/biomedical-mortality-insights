
==== Front
Front Neurorobot
Front Neurorobot
Front. Neurorobot.
Frontiers in Neurorobotics
1662-5218
Frontiers Media S.A.

10.3389/fnbot.2024.1363366
Neuroscience
Original Research
On designing a configurable UAV autopilot for unmanned quadrotors
Bhar Ali 1 2 *

Sayadi Mounir 1
1University of Tunis, ENSIT, Labo SIME, Tunis, Tunisia
2Military Academy of Fondouk Jedid, Nabeul, Tunisia
Edited by: Hassene Seddik, University of Tunis, Tunisia

Reviewed by: Khaled Nouri, ENICarthage, Tunisia

Balti Ala, Carthage University, Tunisia

Wassim Arfa, Carthage University, Tunisia

Khaled Khnissi, Higher National Engineering School of Tunis, Tunisia

*Correspondence: Ali Bhar, bhar.ali@topnet.tn
30 5 2024
2024
18 136336630 12 2023
15 3 2024
Copyright © 2024 Bhar and Sayadi.
2024
Bhar and Sayadi
https://creativecommons.org/licenses/by/4.0/ This is an open-access article distributed under the terms of the Creative Commons Attribution License (CC BY). The use, distribution or reproduction in other forums is permitted, provided the original author(s) and the copyright owner(s) are credited and that the original publication in this journal is cited, in accordance with accepted academic practice. No use, distribution or reproduction is permitted which does not comply with these terms.
Unmanned Aerial Vehicles (UAVs) and quadrotors are being used in an increasing number of applications. The detection and management of forest fires is continually improved by the incorporation of new economical technologies in order to prevent ecological degradation and disasters. Using an inner-outer loop design, this paper discusses an attitude and altitude controller for a quadrotor. As a highly nonlinear system, quadrotor dynamics can be simplified by assuming several assumptions. Quadrotor autopilot is developed using nonlinear feedback linearization technique, LQR, SMC, PD, and PID controllers. Often, these approaches are used to improve control and to reject disturbances. PD-PID controllers are also deployed in the tracking and surveillance of smoke or fire by intelligent algorithms. In this paper, the efficiency using a combined PD-PID controllers with adjustable parameters have been studied. The performance was assessed by simulation using matlab Simulink. The computational study conducted to assess the proposed approach showed that the PD-PID combination presented in this paper yields promising outcomes.

unmanned aerial vehicles
autopilot
design
PD/PID control
quadrotor
The author(s) declare that no financial support was received for the research, authorship, and/or publication of this article. section-at-acceptanceFrontiers in Neurorobotics
==== Body
pmc1 Introduction

Recently, there is increasing interest in unmanned aerial vehicles (UAVs) in a wide variety of fields. Recent investigations and researches are published (Akhloufi et al., 2021) regularly since many years. Using UAVs to detect and monitor fire hazards demonstrates an effective contribution, whether they are controlled remotely or incorporated with intelligent computer vision software (Zhang et al., 2014). Indeed, the autonomous drones are becoming an essential tool in fire and rescue management (Moumgiakmas et al., 2021). Even though many technology advances have been made in relevant designing technologies looking for the maximum of efficiency with popular items still challenging. In fact, a huge advancement is continuously made in (MEMS) Micro-Electro-Mechanical Systems and (NEMS) Nano-Electro-Mechanical Systems technologies allowing manufacturing miniature sensors, actuators and controllers (Burggräf et al., 2019). Autonomous applications have to be built for specific missions. Quadrotors are one of the most popular (Manoj Kumar et al., 2021) and their advantages of hovering capabilities, vertical taking off and landing (VTOL) are applied to fixed wing.

The flight behavior of a quadrotor is impacted by several factors such as the wind, the weight variation, the speed, the trajectory to follow and the evolution of its own internal parameters (e.g., Wei et al., 2023). Due to sophisticated nonlinearity and strong coupling parameters under-actuating an absolutely unstable dynamic model, these phenomena are augmented. Indeed, to control a quadcopter we have four fixed rotors to control its six degrees of freedom in space. Any control strategy for manual, or autonomous missions depends on the reliability of the mathematical model. A valid and accurate mathematical model can be extracted from a commercial or self-designed Quadrotor using identification and laboratory experiments (Tahir et al., 2023).

Research has been conducted on the altitude and attitude control methods for quadrotors in the literature. The control strategy including Sliding Mode Control (SMC) is often used (Rinaldi et al., 2023). It presents good robustness results for nonlinear systems in presence of parameter uncertainties and external disturbances (Manoj Kumar et al., 2021). It has been shown that this technique can be applied in model-free control (Wang et al., 2016) or associated with LQR optimization, adaptive or back-stepping modes (e.g., Bouabdallah and Siegwart, 2005; Li et al., 2014; Ghamry et al., 2016) for indoor and outdoor operations. The augmented SMC controller reduces the disadvantage of the chattering problem. There may be undesirable oscillations in practice, called chattering problems, of finite frequency and amplitude.

For general application, Proportional Derivatives (PD) and Proportional Integrator Derivatives (PID) control techniques continue to be widely used due to their simplicity, real-time implementation and no mathematical model requirement (e.g., He and Zhao, 2014; Nguyen and Hong, 2018). Recently, has proposed a PID approach control for enhancement of a DJI-F450 drone model. They are also associated with other control techniques to improve their efficiency and reduce their disadvantages. To compensate disturbances in attitude and altitude control, a PID and fuzzy – PID controls combination was proposed by Kuantama et al. (2017). Using predictive models and linear quadratic optimisation techniques, PID controllers in discrete version have also been investigated by Khan and Kadri (2015) and Reizenstein (2017). In fact, a PID controller cannot cover all fluctuations in the dynamics of a system. However, it can cover a significant amount of uncertainty and ensure fast control response. This is crucial for aerial quadrotors controlling attitude to avoid obstacles and perform demanding maneuvers in urban or forest areas. PID control has been combined with a variety of tuning approaches in several studies in order to improve its efficiency. Auto-tuning algorithms using metaheuristics deep reinforcement learning, neural network or fuzzy rules are recently explored (e.g., Doukhi et al., 2017; Sheta et al., 2021). Basically, the PD-PID controllers present the advantage of having only two effects (for the PD controller) and three effects (for the PID controller) adjusted with the corresponding parameters. The system behavior could be modified with the forementioned parameters. In the existing literature, many works have been conducted for the evaluation of these parameters without necessarily appealing a mathematical model of the system. The effectiveness of controllers has long been established in the industry. Their utilization in more advanced systems such as robots and drones has also been demonstrated. In fact, their flexibility and simplicity made the PD-PID controllers gain popularity among researchers and practitioners.

There is no doubt that forest fire detection and surveillance are becoming increasingly important issues all over the world. The degradation of the ecosystem due to climate change is more and more visible. Several monitoring and management strategies involve the use of cooperative UAVs and Unmanned Ground Vehicles (UGVs) (e.g., Ghamry and Zhang, 2015; Bhar et al., 2017). Wild expanses to be explored require UAVs that are economical, have the capability of generating a trajectory, tracking, and avoiding obstacles (e.g., Ait El Cadi, 2010; Bhar et al., 2018).

The main contribution of this study is using simple PD with adjustable parameter controller associated with PID controller to make the quadrotor more stable when dealing with changes in weight and compensating for wind gusts. Our work involves designing a quadrotor UAV autopilot that will be used later in collaboration with intelligent navigation algorithms for surveillance and detection. By combining PD and PID controllers, the quadrotor autopilot offers a configurable architecture and a significant advantage over other autopilots. Through simulations under multiple disturbances, its performance were assessed.

The remainder of this article is organized as follows. Section 2 reports the motion mechanism and the dynamic model. Section 3 describes the design of the controller architecture. Section 4 details the Simulink parameters and reports the main numerical results. Conclusions and avenues for future work are drawn in Section 5.

2 Dynamic model

2.1 Quadrotor configuration

A Quadrotor includes 4 rotors arranged in a cross-like shape as displayed in Figure 1. Rotor blades are equipped with propellers powered by one-by-one DC motors. Rotors 1 and 3 rotate within side the equal route at the same time as rotors 2 and 4 rotate in a contrary route in order to balance the whole machine torque and cancel the gyroscopic and aerodynamics torques.

Figure 1 Quadrotor model.

2.2 Flight mechanisms

The motion of quadcopters can be achieved through six distinct maneuvers, which involve a combination of translational and rotational motion as illustrated in Figure 2. There are four inputs on the quadcopter:Thrust (z): This input generates a vertical force that enables the quadcopter to hover or move up and down through the air. Increased or decreased speed of all four rotors by a similar amount, greater or lesser than gravitational force, creates the force.

Roll angle (ϕ): It denotes the quadcopter rotation around the x-axis. In order to create the roll motion, the second rotor’s speed is decreased and the fourth rotor’s speed is increased. These “rolls” move the quadcopter sideways along the y + and y- axis, while maintaining its altitude position.

Pitch (θ): It corresponds to the quadcopter rotation around the y-axis. By decreasing the first rotor’s speed and increasing the third rotor’s speed, pitch motion can be created. Depending on the quadcopter’s orientation and the position of its nose, the pitch action causes it to tilt upwards or downwards. An upward tilt moves the quadcopter in a backward motion (x-), while a downward tilt moves it forward (x+).

Yaw (ψ): It refers to the quadcopter rotation around the z-axis. Angular velocities are increased of two opposite rotors while angular velocities of the other two are decreased. Thus, the Yaw motion is generated. Precisely, In both clockwise and counterclockwise rotations, the quadcopter’s front faces the same direction.

Figure 2 Quadrotor flight mechanisms.

2.3 System coordinates

First, let us begin by precising the reference coordinate frame and the coordinate frame of the vehicle body, in order to construct the quadrotor’s mathematical model. Let us denote by B = [Bx, By, Bz]T the body-fixed frame (BFF) and (EFF) E = [Ex, Ey, Ez]T the ground fixed reference coordinate frame also called inertial frame. The center of the BFF origin is aligned with the center of mass of the quadcopter, and its origin is connected to the body of the vehicle.

In the 3-dimensional Euclidean space, we denote B = (x,y,z)T. The coordinate vector IB→ describes the distance between the Inertia frame and the body frame. The three Euler angles 𝜙, 𝜃 and 𝜓 (so called: roll, pitch, and yaw) describing the quadrotor orientation are represented by the vector Γ = [𝜙,,𝜓]𝑇.

The vehicle body frame BFF is considered the base for reference frame analysis. To catch the 3D space’s movements and create our mathematical references, Equations 1–5 are considered:- Body frame rotated in 𝜓+:

(1) RBIzψ=cosψ−sinψ0sinψcosψ0001

- Body frame rotated in 𝜙 +:

(2) RBIxϕ=1000cosϕ−sinϕ0sinϕcosϕ

- Body frame rotated in 𝜃 +:

(3) RBIyθ=cosθ0sinθ010−sinθ0cosθ

The movement from one frame to another in this case is defined by Equation 4: (4) RBIψθϕ=RBIzψRBIyθRBIxϕ

The rotational matrix is then derived as (5) RBI=cosψcosθsinθsinϕcosψ−cosθsinψsinθcosϕcosψ+sinϕsinψsinψcosθsinθsinϕsinψ+cosϕcosψsinθcosϕsinψ−sinϕcosψ−sinθsinϕcosθcosϕcosθ

2.4 Actuator dynamics

The actuator dynamic refers to the correlation between the voltage applied to the actuator, which serves as the real control input, and the speed of the rotor. Designers are particularly interested in the speed of the actuator’s response, as it plays a crucial role in the performance of the system. Based on Kirchhoff laws and the law of rotation, we derive the following simplified actuator dynamic model described by Equation 6: (6) dwidt=−1τwi+Kwτui,∀i=1,..,4

where 𝜏 and Kw denotes the delay and gain coefficient, respectively (Bouabdallah et al., 2004). Furthermore, dwidt and ui represent the speed and the input voltage of actuator 𝑖, =1,..,4 . Actuator delay assumes a critical role, especially in cases where the attitude control loop is functioning at a low frequency.

2.5 Kinematics

Let us move on to the kinematics side of the conducted study. Herein, the rigid “+” symmetric quadrotor is shown in Figure 1 with four rotors producing (Th1, Th2, Th3, Th4) forces. Quadrotor structure center of mass and origin of body coordinate system are the same. The center of gravity of the system coincides with the origin of the body-fixed frame (BFF). It is assumed that propellers are rigid and that thrust and drag are proportional to the square of the propeller’s rotational speed. The difference between the body rates p, q, r in BFF and the angle rates expressed in EFF should be calculated following Equations 7, 8. (7) pqr=10−sinθ0cosθsinϕcosθ0−sinθcosϕcosθϕ˙θ˙ψ˙

(8) v=MΓ˙

Where v and Γ˙ represent the angular velocity vectors in both frames the B-frame and E-frame, respectively. Furthermore, the inverse of the matrix M is expressed in Equation 9 as (9) M−1=1tanθsinϕtanθcosϕ0cosϕ−sinϕ0sinϕcosθcosϕcosθ

During position control, the quadrotor’s body must be compensated for rotation. Compensation is obtained by transposing the rotation matrix.

2.5.1 Translation dynamics

Based on the works of Barzegar and Lee (2022) and Quan (2017), the system under study was subjected to the following forces:

The vehicle’s total weight: (10) P=00−mg

The rotors’ generated thrust: (11) Fth=RBI∑i=14Thi=b∑i=14ωi2sinϕsinψ+sinθcosψcosϕ−sinϕcosψ+sinψcosϕsinθcosθcosϕ

The drag force and air friction: (12) Fdr=CdB˙=−Cdx000Cdy000Cdzx˙y˙z˙=Cdxx˙Cdyy˙Cdzz˙

(13) F=mB¨=P+Fth+Fdr

The mass of the quadrotor is represented by m and the acceleration due to gravity is represented by g in Equation 10. Equation 11 expresses that the angular velocity and thrust constant of the ith propeller are represented by ωi and b , respectively. Equation 12 contains the translational drag coefficient matrix denoted by Cd . The position of the center of mass in the coordinates of the Flat Earth, as given in Equation 10, is a vector of the dimensions 3 times 1. Then, the total force is expressed by Equation 13. The equation of motion describing the translational motion of the quadcopter is expressed using Newton’s second law and reads are Equations 14–16: (14) x¨=1mb∑i=14ωi2sinϕsinψ+cosϕsinθcosψ−Cdxx˙

(15) y¨=1mb∑i=14ωi2−sinϕcosψ+sinψcosϕsinθ−Cdyy˙

(16) z¨=1mb∑i=14ωi2cosθcosϕ−Cdzz˙−mg

2.5.2 Rotation dynamics

The motion of a quadrotor is clearly attributed to an array of forces and moments resulting from various physical phenomena. A quadrotor experiences torques in roll, pitch, and yaw, as well as aerodynamic friction torque and gyroscopic effects caused by the propellers. To calculate angular acceleration on the body frame, the second law of Newton for rotational motion must be applied, and the Coriolis effect should be taken into account. We can consider for this model the torques detailed in Table 1.

Table 1 Torques details.

Type	Designation	Expression	
Rolling moments ( τx)	Body gyro effect	θ˙ψ˙Iy−Iz	
Propeller gyro effect	Jrθ˙Ωr	
Roll actuators action	l−Th2+Th4	
Rolling moment due to air resistance	Caxϕ˙2	
Pitching moments ( τy)	Body gyro effect	ϕ˙ψ˙Iz−Ix	
Propeller gyro effect	Jrϕ˙Ωr	
Pitch actuators action	lTh1−Th3	
Pitch moment due to air resistance	Cayθ˙2	
Yawing moments ( τz)	Body gyro effect	θ˙ϕ˙Ix−Iy	
Inertial counter-torque	JrΩ˙r	
Counter-torque unbalance	−1i∑i=14Qi	
Yaw moment due to air resistance	Cazψ˙2	

Accordingly, the torques can be derived as follows: (17) τx=0−l0∧00Th2+0l0∧00Th4=lbω42−ω2200

(18) τy=l00∧00Th1+−l00∧00Th3=0lbω32−ω120

(19) τz=00d∑i=14ωi2

(20) τa=Caψ˙2ϕ˙2θ˙2=Cazψ˙2Caxϕ˙2Cayθ˙2

(21) τgp=JrΩr0θ˙−ϕ˙

Equations 17–21 denote that the parameter l indicates the distance of the motor axis from the center of gravity of the quadcopter, while d represents the drag coefficient. Equation 20 depicts Ca as the 3×3 matrix of aerodynamic friction coefficients. In Equation 21, Jr and Ωr represent the rotor’s inertia and rotation velocity, respectively. The rotational motion of the quadrotor is governed by the equations of motion, expressed by Equations 22–24, obtained by using Euler’s rotation equations. In Equations 22–24, moments of inertia along x , y and z directions are represented by Ix , Iy and Iz respectively: (22) ϕ¨=1Ix−Caxϕ˙2−JrΩrθ˙−Iz−Iyθ˙ψ˙+lbω42−ω22

(23) θ¨=1Iy−Cayθ˙2−JrΩrϕ˙−Ix−Izϕ˙ψ˙+lbω32−ω12

(24) ψ¨=1Iz−Cayθ˙2−JrΩrϕ˙−Ix−Izϕ˙ψ˙+∑i=14−1i+1ωi2

2.5.3 Mathematical model

Considering both the translational and rotational dynamics, the entire dynamic model of the quadcopter is expressed as follows: (25) x¨=1muzux−Cdxx˙

(26) y¨=1muzuy−Cdyy˙

(27) z¨=1muzcosθcosϕ−Cdzz˙−mg

(28) ϕ¨=1Ix−Caxϕ˙2−JrΩrθ˙−Iz−Iyθ˙ψ˙+uϕ

(29) θ¨=1Iy−Cayθ˙2−JrΩrϕ˙−Ix−Izϕ˙ψ˙+uθ

(30) ψ¨=1Iz−Cayθ˙2−JrΩrϕ˙−Ix−Izϕ˙ψ˙+uψ

where u=uxuyuzuϕuθuψ is a vector expressed by Equations 31–33 with d as the drag coefficient: (31) ux=sinϕsinψ+cosϕsinθcosψ

(32) uy=−sinϕcosψ+sinψcosϕsinθ

(33) uzuϕuθuψ=bbbb0−lb0lb−lb0lb0d−dd−dω12ω22ω32ω42

Equations 25–30 exhibit the complete nonlinear model of a quadrotor, revealing its complex dynamics. The strong nonlinearity, including inter-state multiplication, intensive variable coupling, and the presence of multivariable features, poses challenges in designing controllers, while simultaneously eliciting significant researchers’ attention.

2.5.4 Simplified system

The purpose of the mathematical model is to facilitate the construction of a control system. Nevertheless, if the mathematical model is overly sophisticated, the design of the control system will also be complex. A state space model could be adapted for the control system X˙=fXU where X and U are the state and input vectors, respectively. The state vector X reads as: (34) X=x,y,z,x˙,y˙,z,˙ϕ,θ,ψ,ϕ˙,θ˙,ψ˙

Let us begin by assuming that (35) {x1=xx2=yx3=zx4=x˙=x˙1x5=y˙=x˙2x6=z˙=x˙3x7=ϕx8=θx9=ψx10=ϕ˙=x˙7x11=θ˙=x˙8x12=ψ˙=x˙9

Then, Equations 25–40 leads to (36) X˙=x4x5x61muzux−Cdxx˙1muzuy−Cdyy˙1muzcosθcosϕ−Cdzz˙−mgx10x11x1211x−Caxϕ˙2−JrΩrθ˙−Iz−Iyθ˙ψ˙+uϕ11y−Cayθ˙2−JrΩrϕ˙−Ix−Izϕ˙ψ˙+uθ11z−Cayθ˙2−JrΩrϕ˙−Ix−Izϕ˙ψ˙+uψ

Equation 36 indicates that rotational movements are functionally independent of translational movements and are entirely actuated. However, translational movements are under actuated and highly dependent on rotational movements. A control loop structure comprising both an inner and outer loop has been devised. The inner control loop guarantees asymptotic tracking of the desired attitude and altitude, ensuring precise control. On the other hand, the outer loop is responsible for conducting navigation, overseeing the path planning and overall trajectory of the system.

It is possible to make certain simplifying assumptions for the previous model, without compromising the precision of the motion behavior to a significant extent. To minimize the complexity of calculations, it is presumed that the quadrotor is near a hovering position, with very little changes in angles and angular acceleration contribution. Resulting in a null attitude angular rates ( ϕ˙=0 , θ˙=0 , ψ˙=0 ), this enables neglecting of the gyroscopic effects and moments of inertia terms. Additionally, assuming that the angles ϕ and θ are small and the Coriolis terms can be neglected, we can consider that the Coriolis effect terms do not exert a significant influence on linear acceleration. Additionally, considering the quadcopter’s movement near a hovering state allows the approximation of the velocities transformation matrix M between the BFF and EFF frames to be close to identity.

Thereby, the motion Equation 36 becomes (37) X˙=x4x5x61muzux1muzuy1muzcosθcosϕ−mgx10x11x12uϕIxuθIyuψIz.

3 Controller design

In this section, the control strategy and design of the attitude and elevation controller are described in detail.

3.1 Control strategy

Achieving seamless tracking performance utilizing traditional gains is the primary goal of the proposed PD-PID controller, while simultaneously ensuring satisfactory performance in position hold mode through gain adjustment aimed at mitigating the effects of wind disturbances. A schematic representation of the proposed PD-PID technique is depicted in Figure 3. The proportional, integral, and derivative gains are optimized utilizing gain scheduling, which is determined by variations in natural frequency and the Ziegler-Nichols methods.

Figure 3 The full quadrotor control scheme.

3.2 Attitude control

The primary control loop, as proposed, governs four Degrees of Freedom (DOF) in the quadrotor system, namely the altitude z , roll angle ϕ , pitch angle θ , and yaw angle ψ . Given that the quadrotor dynamic system is under-actuated, an outer loop is employed to derive the desired control inputs for roll and pitch, denoted as ϕd and θd , respectively, based on the desired positions in the earth frame xeye . For the linear acceleration, very small angles ϕ and θ are assumed. Inspired from the work of Kotarski et al. (2016), the following desired angles are derived: (38) ϕdθd=1gsinψ−cosψcosψsinψTxTy

A configurable PD controller is also envisaged, following the work of Nguyen and Hong (2018). the controller produces virtual accelerations Tx and Ty along the X and Y axes, respectively, such as (39) Tx=k1xk2xxd−x−x˙

(40) Ty=k1yk2yyd−y−y˙

where the coordinates ( xd,yd) refer to the desired position in the XY plane, whereas ( k1x , k2x) and ( k1y , k2y ) represent the controller gains along the X and Y axes, respectively.

To summarize, the block diagram shown in Figure 4 represents the roll controller for the X-axis. It is evident that the structure of the roll controller for the Y direction is highly similar.

Figure 4 X-direction PD roll controller.

Now, let ξ and wn denote and the controller’s damping ratio and the natural frequency, respectively. Accordingly, Equation 41 was derived as a transfer function of second order that leads to the controller gains k1x and k2x , expressed by Equations 42, 43, respectively: (41) TxpXdp=k1xk2xp2+k1xp+k1xk2x

(42) k1x=2ξwn

(43) k2x=wn2ξ

3.3 Roll control

To facilitate roll control and achieve motion along the Y-axis, the PID controller is utilized to generate small variations in forces which are then applied to rotors 3 and 4. If we assume that the roll parameters of the PID controller are represented by KPϕ , KIϕ , and KDϕ , and that the actual roll angle is ϕm , then the roll angle error eϕ can be expressed as ϕd−ϕm . Accordingly, ΔThϕ can be represented by Equation 44: (44) ΔThϕ=KPϕeϕ+KIϕ∫eϕ+KDϕe˙ϕ

3.4 Pitch control

In order to generate motion along the X-axis, a PID controller is employed to generate a small variation in forces, denoted as ΔThθ , which is then applied to rotors 1 and 2. If the quadrotor needs to move backwards, the speed of rotor 2 is decreased while the speed of rotor 1 is increased. This differential change in rotational speeds causes the quadrotor to move in a backward direction along the X-axis. This speed variation is controlled by PID which pitch angle parameters are KPθ , KIθ , and KDθ so that ΔThϕ is expressed according to Equation 45: (45) ΔThθ=KPθeθ+KIθ∫e+KDθe˙θ

and eθ=θd−θm , such that the pitch angle error eθ is associated with the measured pitch angle θm .

3.5 Yaw control

The quadrotor’s counter clockwise and clockwise movements can be controlled by altering the yaw angle. The yaw angle parameters of the considered PD or PID controller are KPψ , KIψ , and KDψ . Additionally, ψm represents the sensor measured yaw angle, and eψ represents the yaw angle error. Thus, as with the roll and pitch control, eψ equals ψd−ψm . Equations 46, 47 represent the yaw control equations for the PID and PD controllers, respectively: (46) ΔThψ=KPψeψ+KIψ∫eψ+KDψe˙ψ

(47) ΔThψ=KPψeψ+KDψe˙ψ

3.6 Altitude control

A thrust force is created to compensate for the gravitational force. Altering the angular velocities of all rotors at equal speed is the way to achieve the desired altitude of the quadrotor. Let KPz , KIz , and KDz denote the altitude parameters of the PID controller, zm be the sensor measured altitude, and ez be the altitude error. Obviously, ez equals zd−zm . According to these notations, the thrust forces for the PID and PD controllers, respectively, could be expressed by Equations 48, 49 as (48) ΔThz=KPzez+KIz∫ez+KDze˙z

(49) ΔThz=KPzez+KDze˙z

4 Simulation and experiments

Using Matlab Simulink, we implemented the simulation study, the experiments, and the parameter tuning for the PD and PID controllers (Figure 3). The control scheme can be generally characterized as being comprised of a waypoint input, which in turn is divided into a position component and a yaw angle orientation component. In the upcoming subsections, we will provide concise descriptions of the primary controllers and quadrotor parameters. Subsequently, we will present simulation results pertaining to main movements and trajectory tracking. Finally, we will evaluate control robustness by examining the quadrotor’s response to wind disturbances across various trajectories.

4.1 Controllers and quadrotor parameters setting

For the simulation study, we have adopted a quadrotor which main parameters are displayed in Table 2.

Table 2 Main quadrotor parameters.

Parameter	Value	Unit	
L	0.24	m	
m	0.9	Kg	
g	9.81	m.s−2	
d	3.59 10−5	N.m	
Jx	0.00963	Kg.m2	
Jy	0.00963	Kg.m2	
Jz	0.019	Kg.m2	

For the design of the quadrotor autopilot, a PD/PID controller is implemented as presented in Section 3. As a result of Ziegler-Nichols PID parameters setting rules, the proportion and derivative coefficients of the controller are adjusted. According to this parameter-setting method, parameters are set according to stability analysis. Therefore, Kp the proportion coefficient is set such that KD and KI are fixed to 0. Then, an iterative increase in Kp is made until the closed-loop system begins to shock, i.e., as soon as the poles of the closed-loop system cross the 𝑗𝑤 axis. Equations 50–52 express the final Kp , KD , and KI values as (50) Kp=0.6Km

(51) KD=KPπ4wm

(52) KI=KPwmπ

where the value of Kp at which the system experiences shock is represented by Km , while wm denotes the frequency of oscillation. The root locus method is applied to determine Km and wm . The root locus of the controlled object’s transfer function can be obtained for a given system. Km corresponds to the gain traversing the 𝑗𝑤 axis, with the oscillation frequency of the point corresponding to wm .

4.2 Main movements

In order to assess and validate the PD and PID controller simulator, several numerical experiments were conducted.

The time evolution of the X, Y, Z, and Yaw angle positions of the tuned PD/PID controllers are reported in Figures 5–8. The PD and PID controllers have similar performance in terms of X and Y-axis motion, as shown in Figures 5, 6. It should also be noted that the Z position controller does not affect movement along the X and Y axes. The PID controller proves to be more efficient in reducing altitude position errors (Figure 7), whereas the PD controller only manages to keep a minor, permanent error. Additionally, the PD controller exhibits a marginally quicker rise time compared to its counterpart, the PID controller. The dynamics of the response of both PD/PID yaw controllers to the input reference show comparative behavior, as displayed in Figure 8.

Figure 5 Time history of the X-position.

Figure 6 Time history of the Y-position.

Figure 7 Time history of the Z-position.

Figure 8 Quadrotor’s yaw angle.

Based on the information presented in Figures 9, 10, we can infer that the PID controlled inner loop has a quick response time as well as high degree of accuracy. The overshoot is well-damped, and the system stabilizes the roll and pitch input angles of the quadrotor. It succeeds to maintain these angles as minimal as possible, assuming negligible values for the ϕ and θ angles. In general, higher roll and pitch angles correlate with greater speeds along the X and Y directions.

Figure 9 Quadrotor’s roll angle.

Figure 10 Quadrotor’s pitch angle.

4.3 Main results of the trajectory trucking

A wide range of signal shapes, such as square, circular, and sinusoidal trajectories, have been tested for trajectory trucking. In order to evaluate the performance of the proposed control architecture, a number of time-varying input references were examined and implemented.

Figure 11 illustrates the time history of helical paths. When the quadrotor is being controlled by a PD command, the PD controller produces a small permanent position error. However, the PID controller operates dynamically to ensure precise control. Besides, Figure 12 highlights that the pitch and roll controllers ensure that the quadrotor remains very stable. It can be observed that the trajectory tracking performance is satisfactory with both PD and PIC controllers, particularly when considering the application of the designed autopilot.

Figure 11 Quadrotor’s trajectory tracking.

Figure 12 The roll and pitch angles time evolution.

4.4 Assessment of the control robustness

As an input signal to the quadrotor model, a wind force model was added to test whether the control response of the quadrotor was affected by wind disturbances. We have implement the wind force inspired from the work of Alexis et al. (2012). We begin by assessing the impact of disturbances along X and Y axes. The corresponding simulation results are reported in Figure 13.

Figure 13 Simulation of disturbances along X and Y axes.

It is worth mentioning that the quadrotor is capable of following any rectangular trajectory accurately in the absence of disturbances. Now, when adding the wind gusts scenario, the controller shows very good robustness. Indeed, by properly compensating for wind gusts, the controller corrects any deviation caused by the wind as displayed by Figure 14.

Figure 14 Wind gusts response for a square trajectory tracking.

Furthermore, controlling a circular trajectory yields the same promising results. As can be clearly observed in Figure 15, the controller succeeds to keep the quadrotor’s trajectory around the input reference in a highly accurate and dynamic manner. For both circular and rectangular trajectories, the simulation results confirm that the quadrotor, utilizing the designed autopilot, can deal with disturbances equivalent to more than 30% of its weight without experiencing any significant deviation from its reference trajectory.

Figure 15 Wind gusts response for a circular trajectory tracking.

At this stage, it is noteworthy that as the parameters of the controllers are adjustable, their determination could be calculated in several ways and using multiple methods. The mathematical approach used in this paper consists of calculating the parameters according to a second order model that corresponds to the system response. In future work, another approach to be considered involves implementing a more intelligent strategy. This entails using machine learning algorithms trained with historical data. In fact, additional IoT sensors could be deployed for example to continuously update the parameters according to weight variation, flight behavior, environment/landscape nature, and weather information.

5 Conclusion

This study explores the design of an autopilot for a quadrotor unmanned aerial vehicle to analyze intelligent navigation algorithms for surveillance and detection purposes. Its purpose is to serve as a tool for simulating intelligent trajectory tracking algorithms, aiding in the enhancement and refinement of detection and surveillance tasks. Toward this goal, a configurable PD/PID controller is introduced. Simulation study of the controllers were conducted using Matlab Simulink. The simulation results, concerning main movements and trajectory tracking, were presented to demonstrate the controllers’ good performance. With the introduction of wind gusts, the proposed controllers effectively maintained the quadrotor’s trajectory close to multiple provided input references in an accurate manner. While the PID-controlled autopilot exhibited slightly superior performance, the hybrid version emerged as an enticing alternative, capitalizing on the simplicity of the PD control approach.

Future research could delve deeper into exploring controllers with improved efficiency, given the established understanding that the PID controller falls short of optimality and fails to meet all stability requirements for flight. In addition to studying the performance of the proposed control scheme with respect to other disturbances types, it would also be possible to investigate the accuracy of the quadrotor parameters as well.

Data availability statement

The original contributions presented in the study are included in the article/supplementary material, further inquiries can be directed to the corresponding author.

Author contributions

AB: Conceptualization, Data curation, Formal analysis, Investigation, Methodology, Software, Validation, Writing – original draft. MS: Supervision, Validation, Writing – review & editing.

Conflict of interest

The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest.

The reviewer KK declared a shared affiliation with the authors to the handling editor at the time of review.

Publisher’s note

All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher.
==== Refs
References

Ait El Cadi A. (2010). Planification de trajectoires pour une flotte d'UAVs. Doctoral dissertation École Polytechnique de Montréal.
Akhloufi M. A. Couturier A. Castro N. A. (2021). Unmanned aerial vehicles for wildland fires: sensing, perception, cooperation and assistance. Drones 5 :15. doi: 10.3390/drones5010015
Alexis K. Nikolakopoulos G. Tzes A. (2012). Model predictive quadrotor control: attitude, altitude and position experimental studies. IET Control Theory Appl. 6 , 1812–1827. doi: 10.1049/iet-cta.2011.0348
Barzegar A. Lee D. J. (2022). Deep reinforcement learning-based adaptive controller for trajectory tracking and altitude control of an aerial robot. Appl. Sci. 12 :4764. doi: 10.3390/app12094764
Bhar A. Sayadi M. Fnaiech F. (2017). “Improved modular UAV autopilot simulator for Pinguin BE aircraft” in In 2017 international conference on control, automation and diagnosis (ICCAD) (IEEE), 125–129.
Bhar A. Sayadi M. Fnaiech F. (2018). “Modular navigation strategy for autonomous robot” in In 2018 15th international multi-conference on systems, signals & devices (SSD) (IEEE), 396–401.
Bouabdallah S. Noth A. Siegwart R. (2004). “PID vs LQ control techniques applied to an indoor micro quadrotor” in 2004 IEEE/RSJ international conference on intelligent robots and systems (IROS) (IEEE Cat. No. 04CH37566), vol. 3 (IEEE), 2451–2456.
Bouabdallah S. Siegwart R. (2005). “Backstepping and sliding-mode techniques applied to an indoor micro quadrotor” in Proceedings of the 2005 IEEE international conference on robotics and automation (IEEE), 2247–2252.
Burggräf P. Pérez Martínez A. R. Roth H. Wagner J. (2019). Quadrotors in factory applications: design and implementation of the quadrotor’s P-PID cascade control system: modeling and implementation. SN Appl. Sci. 1 :722. doi: 10.1007/s42452-019-0698-7
Doukhi O. Fayjie A. R. Lee D. J. (2017). Intelligent controller design for quad-rotor stabilization in presence of parameter variations. J. Adv. Transp. 2017 , 1–10. doi: 10.1155/2017/4683912
Ghamry K. A. Kamel M. A. Zhang Y. (2016). “Cooperative forest monitoring and fire detection using a team of UAVs-UGVs” in In 2016 international conference on unmanned aircraft systems (ICUAS) (IEEE), 1206–1211.
Ghamry K. A. Zhang Y. (2015). “Formation control of multiple quadrotors based on leader-follower method” in In 2015 international conference on unmanned aircraft systems (ICUAS) (IEEE), 1037–1042.
He Z. Zhao L. (2014). A simple attitude control of quadrotor helicopter based on Ziegler-Nichols rules for tuning PD parameters. Sci. World J. 2014 , 1–13. doi: 10.1155/2014/280180
Khan H. S. Kadri M. B. (2015). “Attitude and altitude control of quadrotor by discrete PID control and non-linear model predictive control” in In 2015 international conference on information and communication technologies (ICICT) (IEEE), 1–11.
Kotarski D. Benić Z. Krznar M. (2016). Control design for unmanned aerial vehicles with four rotors. Interdiscip. Descrip. Complex Syst. 14 , 236–245. doi: 10.7906/indecs.14.2.12
Kuantama E. Vesselenyi T. Dzitac S. Tarca R. (2017). PID and fuzzy-PID control model for quadcopter attitude with disturbance parameter. Int. J. Comput. Commun. Control 12 , 519–532. doi: 10.15837/ijccc.2017.4.2962
Li S. Li B. Geng Q. (2014). “Adaptive sliding mode control for quadrotor helicopters” in Proceedings of the 33rd Chinese control conference (IEEE), 71–76.
Manoj Kumar M. Arun Sankar M. Jeeva M. Sasi G. (2021). Autonomous drone using Pixhawk flight controller with live stream and mask detection features. Int. J. Eng. Res. Technol. 10 , 104–107.
Moumgiakmas S. S. Samatas G. G. Papakostas G. A. (2021). Computer vision for fire detection on UAVs—from software to hardware. Future Internet 13 , 1–17. doi: 10.3390/fi13080200
Nguyen N. P. Hong S. K. (2018). Position control of a hummingbird quadcopter augmented by gain scheduling. Int. J. Eng. Res. Technol. 11 , 1485–1498.
Quan Q. (2017). Introduction to multicopter design and control (pp. 150–160). Singapore: Springer.
Reizenstein A. (2017). Position and trajectory control of a quadcopter using PID and LQ controllers. Doctoral dissertation. Linköping: Linköping University).
Rinaldi M. Primatesta S. Guglieri G. (2023). A comparative study for control of quadrotor uavs. Appl. Sci. 13 :3464. doi: 10.3390/app13063464
Sheta A. Braik M. Maddi D. R. Mahdy A. Aljahdali S. Turabieh H. (2021). Optimization of pid controller to stabilize quadcopter movements using meta-heuristic search algorithms. Appl. Sci. 11 :6492. doi: 10.3390/app11146492
Tahir M. A. Mir I. Islam T. U. (2023). Control algorithms, Kalman estimation and near actual simulation for UAVs: state of art perspective. Drones 7 :339. doi: 10.3390/drones7060339
Wang H. Ye X. Tian Y. Zheng G. Christov N. (2016). Model-free–based terminal SMC of quadrotor attitude and position. IEEE Trans. Aerosp. Electron. Syst. 52 , 2519–2528. doi: 10.1109/TAES.2016.150303
Wei X. XianYu W. Jiazhen L. Yasheng Y. (2023). Design of anti-load perturbation flight trajectory stability controller for agricultural UAV. Front. Plant Sci. 14 :1030203. doi: 10.3389/fpls.2023.1030203, PMID: 36818868
Zhang X. Li X. Wang K. Lu Y. (2014). “A survey of modelling and identification of quadrotor robot” in Abstract and applied analysis, vol. 2014 (Hindawi)
