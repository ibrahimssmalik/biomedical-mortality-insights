
==== Front
Heliyon
Heliyon
Heliyon
2405-8440
Elsevier

S2405-8440(24)08503-7
10.1016/j.heliyon.2024.e32472
e32472
Research Article
Advancing reliability and efficiency of urban communication: Unmanned aerial vehicles, intelligent reflection surfaces, and deep learning techniques
Li Chongyang chongyangli83@126.com

Qiang Xiaohu qiang999xiaohu@163.com
⁎
Hunan Post And Telecommunication College, Hunan Changsha, 410015, China
⁎ Corresponding author. qiang999xiaohu@163.com
05 6 2024
15 6 2024
05 6 2024
10 11 e3247229 2 2024
2 6 2024
4 6 2024
© 2024 The Authors
2024
https://creativecommons.org/licenses/by/4.0/ This is an open access article under the CC BY license (http://creativecommons.org/licenses/by/4.0/).
Unmanned aerial vehicles (UAVs) have garnered attention for their potential to improve wireless communication networks by establishing line-of-sight (LoS) connections. However, urban environments pose challenges such as tall buildings and trees, impacting communication pathways. Intelligent reflection surfaces (IRSs) offer a solution by creating virtual LoS routes through signal reflection, enhancing reliability and coverage. This paper presents a three-dimensional dynamic channel model for UAV-assisted communication systems with IRSs. Additionally, it proposes a novel channel-tracking approach using deep learning and artificial intelligence techniques, comprising preliminary estimation with a deep neural network and continuous monitoring with a Stacked Bidirectional Long and Short-Term Memory (Bi-LSTM) model. Simulation results demonstrate faster convergence and superior performance compared to benchmarks, highlighting the effectiveness of integrating IRSs into UAV-enabled communication for enhanced reliability and efficiency.

Keywords

Unmanned aerial vehicles (UAVs)
Channel modeling
Artificial intelligent (AI)
Intelligent reflection surfaces (IRS)
Deep learning (DL)
==== Body
pmc1 Introduction

Unmanned aerial vehicles, commonly referred to as UAVs, hold promise as aerial base stations, offering benefits such as extended coverage, increased connection reliability, and reduced energy consumption in communication systems [1]. The adaptability of Unmanned Aerial Systems (UASs) has led to a wide range of potential applications, including security surveillance, real-time monitoring, search and rescue missions, and emergency communication [2]. Despite the promising potential of AI-assisted systems for future wireless communications in smart urban environments, the complex urban landscape presents challenges regarding Line-of-Sight (LoS) networks between navigating AIs and terrestrial users. In this context, Intelligent Reflection Surfaces (IRSs) have emerged as crucial tools for overcoming signal attenuation and strengthening communication lines by establishing virtual LoS pathways [3]. The integration of IRSs aims to enable cost-effective modulation of phase shifts, strategically directing signal strength to mitigate information loss. Thus, the integration of IRSs serves as a viable solution to address the obstacles faced by AI-assisted systems [4], extending pervasive communication services facilitated by AI and alleviating challenges posed by distant users in relation to AI navigation.

The synergy between IRSs and artificial intelligence (AIs) within the wireless ecosystem promises significant enhancements in communication performance, driven by their inherent advantages. Moreover, precise channel state information (CSI) acquisition is essential for optimizing transmissions to ensure superior communication quality. However, tracking channels in IRS-supported AI systems presents a more complex challenge compared to CSIestimation in traditional communication setups due to factors such as the extensive array of reflecting elements within the IRS, the mobility of both AIs and human entities, and limitations in signal processing capabilities.

Despite the potential of LoS connectivity provided by UAVs to establish reliable communication channels and reduce communication distances, obstacles such as natural barriers like trees and tall buildings may occasionally disrupt communication pathways. In the realm of innovative communication paradigms, the integration of IRSs into AI communication methodologies has garnered increasing scholarly interest [5]. For example, previous research explored the combination of IRS beamforming and AI trajectory optimization to enhance the mean achievable data rate of the system. Additionally, investigations into the energetics of using an IRS to empower a mobile AI relay have highlighted the intricate relationship between energy efficiency and communication efficacy [6].

Research examining UAV relaying systems augmented by IR) positioned within buildings, aimed at facilitating communication between the device and AI, has been meticulously scrutinized. Similarly, studies involving cooperative passive beamforming of the IRS alongside AI position optimization have been conducted to reduce error rates during data decoding operations [7]. It is important to note that these studies presume foreknowledge of CSI, emphasizing the need for robust channel-tracking mechanisms tailored to IRS-empowered AI communication systems. Factors such as robust estimation performance, efficient pilot overhead management, and the impact of time-varying channels resulting from the mobility of communicating entities underscore the urgency of developing such mechanisms. A comprehensive survey of existing literature has spurred the development of a Deep Learning (DL)-based channel locating algorithm calibrated for IRS-assisted systems, promising not only a reduction in training costs but also an enhancement in tracking precision.

The ensuing enumeration encapsulates the pivotal contributions borne by this study.1. To the best of our knowledge, the present endeavor stands as the maiden effort to formulate a dynamic channel model grounded in 3D geometry for IRS-enhanced communication systems integrated with UAVs, catering to both stationary IRS configurations, navigating AIs, and mobile user units. The methodological pursuit is characterized by the derivation of a time-varying channel model achieved through the amalgamation of a dynamic cascade of virtual LoS connections (user-IRS-AI) underscored by an activation parameter, in conjunction with a dynamic LoS link (user-AI) articulated by a blockage parameter. Within the construct of the system model, a comprehensive delineation encompasses parameters encompassing velocities, maximal Doppler effects, propagation delays, and temporal delays, elucidating the intricate facets that collectively mold the operational fabric of the proposed system.

2. Within the configured architectural paradigm, a channel tracking apparatus grounded in DL principles is propounded to orchestrate the continual monitoring of the temporally evolving communication channel. The delineation of the proposed mechanism discernibly bifurcates into two salient components. The pre-estimation facet is effectuated through the offline training regimen of a deep neural network (DNN) fortified with a repository of meticulously amassed training datasets. On the other front, the tracking module integrates the innovative Bi-directional Long Short-Term Memory, a data-driven architecture adept at adeptly capturing the evolution of CSI within a dynamic channel milieu. This diligently orchestrated, characterized by a bidirectional configuration spanning multiple layers aggregated with a historically informed trace-back phase within the chronological time sequence.

3. In juxtaposition with established benchmark methodologies, the advanced channel tracking algorithm articulated in this study exhibits a propensity for achieving convergence of the loss function within a reduced number of offline training epochs. Furthermore, computational simulations duly manifest that the novel approach, epitomized by the tandem interplay of ‘DNN followed by the Bi-directional Long and ‘Short-Term Memory (Stacked Bi-LSTM), mirrors complexity profiles inherent in the benchmark algorithms. However, surpassing them in both the realm of channel tracking efficacy and the management of pilot overheads stands as the hallmark of its superior performance.

2 Literature review

An innovative approach to college English education involves the integration of virtual reality (VR), artificial intelligence (AI), and machine learning technologies. This integrated approach aims to enhance experiential learning by creating immersive and interactive environments tailored to various learning styles, thus fostering better English language acquisition. Utilizing virtual reality (VR) and AI technologies empowers educators to construct dynamic learning environments that cater to diverse student needs. AI-powered speech recognition systems play a crucial role in improving listening and oral communication skills, thereby enhancing classroom instruction effectiveness. Moreover, the fusion of deep learning and VR presents a novel method for English education, stimulating deep learning and student engagement through innovative teaching methodologies. The integration of these advanced technologies has the potential to revolutionize college English teaching, making it more engaging, effective, and adaptable to the challenges posed by the Fourth Industrial Revolution and digital transformation.

Upcoming wireless communication paradigms need to confront the extensively explored challenge of realizing wireless communication that is both ultra-reliable and high-capacity within dynamic environments. Implementing power and beam forming control, as well as developing efficient coding and modulation algorithms, have all received a lot of attention. However, the wireless connection that connects the communication endpoints is ignored in these analyses. Recent years have seen a lot of interest in emerging technologies, including communications made possible by AIs and IRS [8]. AI-based aerial base stations have a height and mobility advantage over terrestrial base stations. AIs are particularly beneficial in wireless communications because of their versatility. AIs in particular can support energy-constrained and short-range communication equipment such as sensors and monitoring [9]. In spite of their applicability across a wide spectrum of communication scenarios, the currently employed statistical (MIMO) channel models are not capable enough in their ability capturing distinct characteristics, such as the three-dimensional (3D) spatial mobility exhibited by AIs at elevated altitudes [10]. Recent investigations [11] have introduced geometry-based channel models tailored to AIs for air-to-ground communications. This study marked the pioneering attempt to comprehensively assess AI mobility spanning velocity vectors and directional changes within the plane, as documented in Ref. [12]. Additionally, the papers in deduced time-varying parameters referring to angles of ‘arrival (AoAs) and ‘departure (AoDs) to effectively represent the channel's dynamic non-stationarity due to AI movement. Notably [13], focused solely on a single non-Line-of-Sight link and overlooked the mobility of scatterers. On a related note, delved into cluster-based propagation channels, while [14] extended the investigation to include initial azimuth, elevation, angle of arrival (AoA), and angle of departure (AoD) considerations.

Alongside the potential of AI-assisted communications to offer efficient connectivity, the incorporation of IRSs into wireless communication systems has garnered considerable attention. The utilization of IRSs can extend to various applications including road signs, architectural exteriors, ceilings, indoor walls, and even portable devices worn by pedestrians [15]. It is composed of a variety of low-cost and energy-efficient reflecting pieces. By altering the phase shifts of the IRS elements, it becomes possible to disperse the reflected signals, thereby enabling the creation of simulated LoS connections. This results in better signal strength [16]. A system with IRSsupport also enhances spectral efficiency and communication coverage [17]. The prospective efficacy of communication facilitated by the IRS critically relies upon its adeptness in capturing and comprehending intricate CSI. Consequently, the practical deployment of IRS encounters a formidable challenge, necessitating the deployment of sophisticated less complex tracking strategies [18]. The contemporary research landscape spans the spectrum from discussed to specific communication scenarios, all targeted at channel estimation within IRS-augmented systems. Addressing the realm of conventional IRS-assisted Multi-User (MU) communications, an innovative three-phase pilot-based channel estimation paradigm was introduced by Ref. [19]. This novel approach entails the meticulous dissection of individual links during distinct phases [20]. These sequential and simultaneous user channel estimation techniques used operate with acute consideration for the salient links within authentic real-world environments. Moreover, delved into scenarios while considering the partial activation of IRS's reflective constituents. For scenarios that deviate from the conventional, such as confined indoor domains characterized by obstructed LoS paths [21] unveiled an innovative IRS-assisted channel model. This conceptual framework assigns primacy to the virtual LoS path, engendered by IRS reflection, over the physical LoS path. Pushing the envelope further [22], ventured into the domain of double-IRS cooperatively augmented Multiple-Input Multiple-Output (MIMO) systems, encompassing a cascade of single-reflection and double-reflection links. The ascent of Deep Learning (DL) methodologies, with their inherent capacity to transcend linear correlations, has imparted a revolutionary contour to communication systems. These methodologies, poised to supplant conventional model-driven channel estimation paradigms, have made significant inroads. Delineating a profound departure from established norms, presented a ‘deep learning paradigm for ‘estimation’ in multi-user featuring IRS, encompassing both physical and virtual LoS connections. Similarly, propounded a learned approximation pass message network tailored to the intricacies of beam space millimeter-wave large MIMO systems. Echoing this theme [23] unfolded a novel approach predicated on deep denoising neural networks, orchestrating a virtuous interplay with Compressed Sensing (CS) channel estimation strategies within IRS systems [24]. in a parallel vein, engineered a DL-centric approach that endowed IRS with an acumen to judiciously interface with signals. Pertinently, engineered a dual Convolutional Neural Network (CNN) architecture as the keystone for IRS-driven MIMO systems, orchestrating estimations for both LoS and cascaded non-LoS propagation paths. The confluence of these endeavours hinges on the tacit supposition of a static environment and immobile mobile users, a premise that aligns with channel estimation in IRS-facilitated communication systems. Yet, the actual operational landscape scarcely aligns with this convenient assumption, necessitating an astute deliberation on the intricate contours of time-varying channel estimation or tracking. Notably, the DL-based channel estimation methodologies proffered in are predominantly underpinned by offline training paradigms. Curiously, none of the extant studies traverse the avenue of harnessing historical data's chronology to effectuate a nuanced trajectory of channel monitoring over time.

3 Method and data

We employ the following standard notation throughout the paper. The letter ℂ stands for complex numbers. The notations employed for the transpose and for the second that is a conjugate transpose operation is represented as (·)T, and (·)H. The identity matrix is symbolized as I. A complex Gaussian random vector, characterized by a predetermined mean and covariance structure, is denoted utilizing the nomenclature CN (Mean, covariance). The matrix trace is denoted by the symbol tr(·). The Kronecker product is shown as A⊗B. The direct sum is indicated by A⊕B. The l2 norm is used to represent expectation as ‖.‖.

The focus of this research encompasses an uplink scenario involving a multi-user system empowered by an IRS in conjunction with UAVs. This configuration is characterized by an M element antenna array integrated onto the AI, alongside N reflective elements strategically positioned upon the IRS, catering to the communication needs of K users. For this analytical framework, each individual kth user is presumed integration with a solitary antenna module. Core impetus underlying this approach is the augmentation of the wireless communication quality that underpins interactions between the AI and the mobile user cohort. To this end, the IRS is strategically deployed atop a high-rise edifice, thereby engendering extended coverage and concurrently curbing the necessity for extensive AI mobility, as evidenced by Ref. [25].

Illustrated in Fig. 1 (a), the system architecture is characterized by two principal link categories: The Line-of-Sight h(LoS) link connecting the user and the AI, and the virtual LoSi link interlinking the user, IRS, and AI. The kth that is a user-AIlink existing at an instance t is mathematically represented as ⅆk(t)∈CM×1. In parallel, the kth (user) ‘IRS-AI virtual LoS link, also evolving at time t, encompasses distinct LoS sub-links:having the user-IRSu sub-link uk(t)∈CM×1, and the “IRS-AI” sub-link (t)∈CM×N. Detailed exposition regarding the dynamic intricacies of the 3D IRS-assisted having a channel model is meticulously presented in the visual depiction encapsulated within Fig. 1(b). The velocities characterizing the Unmanned Aerial Vehicle (UAV) and the kth user are denoted as vU and vk, respectively.Fig. 1 The diagram depicts a multi-user communication system facilitated by Unmanned Aerial Vehicles (UAVs) with assistance from the Intelligent Reflecting Surface (IRS). The present study focuses on the system model pertaining to the uplink of multi-user communication facilitated by unmanned aerial vehicles (UAVs) with the assistance of intelligent reflecting surfaces (IRS).

Fig. 1

The basic is the LoS connection prevailing between kth and the AI during time instance t is encapsulated ⅆk(t)=[ⅆk,m(t,τ)]M×1 in Eq (1).(1) ⅆk,m(t,τ)=ΩK,me−j2πfcτk,mδ(τ−τU,k,LoS)×ⅇj2πfkt[cos(αU,k−γk,α)cosβU,kcosγk,β+sinβU,ksinγk,β]×ⅇj2πfUt[cos(αU,k−γU,α)cosβU,k]

In this context, ΩK,m signifies the attenuation factor characterizing the link between the mth(0≤m′≤m′×≤M)2 antenna elemention the AI and the single antenna positioned on the kth user. The parameter fc corresponds to the carrier frequency, while τk,m=Lk,m/c stands as the lag of waves traversing in the mth antenna element on the AI and the single antenna on the kth at the specific instance t, with Lk,m representing the distance separating the user and the mth antenna element. τU,k,LoS encapsulates the temporal delay intrinsic to the kth user-AI LoS link, operative during time t. Additionally, fU=vuλandfk=ukλ signify the maximal Doppler frequency, stemming from the motion of both the AI and the kth user, wherein λ represents the wavelength. Further attributes include αU,k, and βU,k which denote the azimuth and elevation angles corresponding to the orientation between the kth user and the AI. Likewise, γU,α, and γU,β designate the azimuth and elevation angles characterizing the trajectory of AI's motion. Furthermore, γk,α pertains to the azimuth angle delineating the direction of motion for the k'th user, relative to the AI's location. This complex interplay culminates in the time delay inherent to this LoS connection Eq (2).(2) τU,k,LoS=DKc0cosβU,k

Having Dk denote the xy-plane antenna center distance separating the AI and the kth user, while C0 represents the speed of light, it's noteworthy to emphasize that, when contrasting the virtual LoS connection to each of the system sub-links delineated by dk,m(t,τ) in (1), the principal distinction stems from the fixed placement of the Intelligent Reflection Surface (IRS) without any movement, effectively denoting fS=0. Therefore, the kth user-IRS LoS sub-link, operational during that instance t, assumes the configuration uk(t)=[uk,n(t,τ)]N×1, with N representing the number of elements in the sub-link in Eq (3).(3) uk,n(t,τ)=Ωk,ne−j2πfcτk,nδ(τ−τS,k,LoS)×ej2πfkt[cos(αS,k−γk,α)cosβS,k]

The inclusion of the m′th element within the illustrative depiction, as showcased in Fig. 1, serves the purpose of elucidating the antenna's planar orientation angle, denoted as ψU. In a manner analogous to the presence of the n′th reflectionk element on the IRS, the tangible flat angle finds its expression through the notation ψS.

The attenuation factor see Table 1, designated as Ω(k,n), embodies the quantification of signal attenuation transpiring between the nth(0≤n≤n′≤N) reflecting element on the IRS and the individual antenna affixed to the kth user. The index n spans the range from 0 to n × , where n × is bounded by N. The variable τS,k,LoS encapsulates the temporal lag within the LoS sub-link interlinking the kth user and the IRS during the instant t. Furthermore, the parameters α(S,k) and β(S,k) assume significance as they delineate the azimuth and elevation orientations, respectively, underscoring the angular interplay between the kth operator and the IRS system. Meanwhile, γk,α designates the orientation of the azimuth angle encompassing the motion direction of the kth user. To elucidate the time delay associated with wave propagation spanning the nth to that antenna element on the IRS and the solitary antenna unit stationed upon the kth user at time t, the parameter τk,n is invoked. Within this context, Lk,n conveys spatial separation between the user and the nth element situated on the IRS in Eq (4). The physical constant, embodying the speed of light, is succinctly denoted as C.(4) uk,n(t,τ)=Ωk,nⅇ−j2πfcτk,nδ(τ−τS,k,LoS)×ⅇj2πfkt[cos(αS,k−γk,α)cosβS,k]

Table 1 Table of significate symbols.

Table 1Symbols	Explanations	
M,m,m′	Aggregate count and sequential designation of AI's antenna constituents	
N,n,n′	Cumulative count and sequential labeling of components comprising the Intelligent Reflecting Surface (IRS)	
Np	The overall quantity of a training pilot.	
αU,k,βU,k	The angular positions denoting the horizontal (azimuth) and vertical (elevation) orientations of both arrival and departure (AoAs/AoDs) in the communication link between the user and the unmanned aerial vehicle (UAV).	
αS,k,βS,k	The angular positions denoting the horizontal (azimuth) and vertical (elevation) orientations of both arrival and departure (AoAs/AoDs) in the user-intelligent Reflecting Surface (IRS) connection.	
αU,S,βU,S	The angular positions denoting the horizontal (azimuth) and vertical (elevation) orientations of both arrival and departure (AoAs/AoDs) in the context of the connection between both systems.	
rU,α,rU,β	The azimuth and elevation angles of unmanned aerial vehicle (AI) movement.	
rU,α	The angular measurement of the kth user's movement.	
βT,n	The amplitude of the nth element of the Intelligent Reflecting Surface (IRS) at time slot t.	
φt,n	The phase shift occurs at the nth element of the Intelligent Reflecting Surface (IRS) algorithm during time slot t.	
vU	AI movement speed	
vU,x,y,vU,z	The horizontal and perpendicular components of AI speed.	
vk	Speed of kth user movement	
fU	The maximum Doppler frequency of an Unmanned Aerial Vehicle (UAVs).	
fk	The maximum Doppler frequency of the kth user	
ψU	The topic of interest is to the physical flat angle of antennas on unmanned aerial vehicles (UAVs).	
ψS	The topic of interest is the physical characteristics of flat angles in the context of the IRS	
Tk,m	The time lag associated with the transmission of a wave between the mth antennak element on the AI and the individual antenna of the kth user during time instance t.	
Tk,n	The time lag associated with the transmission of a wave between the nth antenna element on the AI and the individual antenna of the kth user during time instance t.	
Tm,n	The time lag associated with the transmission of the wave in AI mth antenna part element and nth users’ single antennas at time t	
TU,k,LoS	Temporal lag of the link between the kth (user) and AI during time t	
TS,k,LoS	Temporal lag of the link between the kth (users) and ‘IRS system LoS during time t	
TU,S,LoS	Temporal lag of the link between the kth user, IRS-AI LoS during time t	
Dk	The dimensional separation in the “XY-plane” between the AI and the kth user	
DS	The dimensional separation in the “XY-plane” between the AI and the IRS	
DS,k	The dimensional separation in the “XY-plane” between the (IRS) and the kth user	
Ωk,m	The attenuation coefficient connecting the mth on the AI and the individual antenna of the kth user.	
Ωk,n	The attenuation coefficient connecting the nth on the IRS and the individual antenna of the kth user.	
Ωm,n	The attenuation coefficient connecting the AI mth (antenna element) and the IRS nth reflectionu element	
Lk,m	The spatial separation between the mth (antenna element) on the AI and the singular kind of antenna of the kth users	
Lk,n	The spatial separation between the nth (antenna element) on the IRS and the singular kind of antenna of the kth user.	
Lm,n	The spatial separation the AI mth (antennas element) and the IRS nth reflection of element.	

‘Sub-link at the time t on the IRS-AI is Gk(t)=[gm,n(t,τ)]MN with Eq 5(5) gm,n(t,τ)=Ωm,nⅇj2πfcτm,nδ(τ−τU,S,LoS)×ⅇj2πfUt[cos(αU,S−γU,α)cosβU,ScosγU,β+sinβU,SsinγU,β]

Within this framework, Ω(m,n) signifies the attenuation coefficient characterizing the link between the mth antenna element on the UAV and the nth element on the IRS. Meanwhile, τU,S,LoS is the parameter encapsulating the temporal lag intrinsic to the LoS’ sub-link interconnecting the IRS and AI at a given time instance t. Furthermore, α(U,S) and β(U,S) embody the angular azimuthj and increment orientations respectively, describing the spatial relationship between the AI and IRS. On a parallel note, τm,n represents the temporal delay attributed to wave propagation between the mth on the AI and the nth element on the IRS. Here, L(m,n) reduces the spatial separation amid these components. The constant c0 symbolizes the speed of light. The temporal lag inherent to two distinct sub-links during time t is delineated as follows Eq (6):(6) τU,k,LoS=DS,Kc0cosβS,k

and Eq 7(7) τU,S,LoS=DS/(c0cosβU,S),

The virtual LoS linking the kth user, IRS, and UAV at time t could be represented as G(t)Φ(t)uk(t)∈CM×1. In this equation, Φ(t)=diag(φ(t))∈CN×N stands for the “Phase shift matrix” attributed to the IRS, with φ(t)=[βt,1ejφt,1,⋯,βt,nejφt,n,⋯,βt,Nejφt,N]TϵCN×1, where βt,n∈[0,1]andφt,n∈[0,2π]. The investigation into the reflection amplitude and phase shift of IRS's subsurface component at time slot t has been explored.

Consequently, the AI-assisted uplink with IRS at time t can be represented as the amalgamation of the virtual LoS connection and the LoS link. This is succinctly expressed as follows in Eq 8.Image 1

The cascaded channel between the kthj user, IRS, and AI during time slot t, denoted as HC,k(t)∈CM×N, is governed by the blockage parameter η∈{0,1}M×1. This parameter follows a Bernoulli distribution [26], wherein the blockage probabilities for the LoS connection are represented as pk.

The signal received by the UAV from the K user during interval slot t can be mathematically articulated as in Eq 9.Image 2

The signal Y(t)′∈CM′×Np symbolizes MU signal, while Hk(t))′∈CM×(N+1) represents the channel matrix demanding estimation. In parallel, r(t)∈C(N+1)×1 embodies a vector, and sk∈C1×Np constitutes the pilot with its value being 8k8kH. The equation H=PNp8ka8kb=0 stablishes a mathematical correlation, where p shows the power of user, and ka,andkb are integers spanning from 1toK, with the proviso that ka is not equivalent to kb. The matrix ka≠kb.N′b(t)∼CN(0,σ2N,I) stands for the Additive White Gaussian Noise (AWGN) integrated within the system.

In scenarios involving multiple users, it is evident that the pilot sequences of any two users exhibit orthogonally. As a result, the received signal vectors pertaining to the kth user can be effectively disentangled by conducting a multiplication operation using the conjugate transpose of the sequence skH in Eq 10.Image 3

The signal vector received by the AI from the kth user is indicated as k(t)∈CM×Np. The channel matrix necessitating estimation is denoted as Hk(t)∈CM×(N+1). The noise component is expressed as r(t)∈C(N+1)×1, while the random variable Nk(t) follows a complex Gaussian distribution with a mean of zero and a variance of (0,σ2NI).

The estimation of the channel Hk(t) is performed using a channel tracker, represented as F(·), which relies on the received signal Yˆ′(t),r(t)Ysk. The channel H∼k(t) is approximated as a function F(Yk(t);r(t),sk). Therefore, the issue of pilot-aided channel estimation may be formulated as in Eq (11).(11) MinE[‖Hk(t)−Hk(t)‖],s.ttr(skskH)=Es,

The energy limitation is represented as Es=NpTsP, where Np represents the length of pilot overheads, Ts defines the duration of a single time slot, and P indicates the transmit power.

In order to attract attention, the dynamic nature of both the UAV and the user from the (KTH) results in continuous fluctuations in the relative azimuth and elevation angles, as well as the relative distance, over time. The assumed starting location of the UAV is denoted as (xU,yU,zU)=(0,0,HU). The kth user's position is represented as (xk,yk,zk) = (DkcosαU,k,DkSinαU,k,0), where Dk is the distance and αU,k is the angle with respect to the AI. The position of the IRS is given as (xS,yS,zS) = (DScosαU,k, DSSinαU,kHS). The speed of the UAV, denoted as vU, is characterized by its traveling direction, which may be represented by the angles γU,αandγU,β. The velocity of the user, denoted as vk, is characterized by the directional angle γ_k,α. Therefore, it is necessary to revise the position for the tth time slot. Specifically, the coordinates of the AI may be expressed as (0,0,HU−vUtsinγU,β), while the coordinates of the kth user can be represented as (DkcosαU,k+vktcosγk,α,DksinαU,k+vktsinγk,α,0). Therefore, the revised values for the relative azimuth, elevation angles, and distances in equations (1), (2), (3), (4), (5), (6), (7) may be computed using the updated coordinates. Additionally, it was postulated that the UAV had an antenna with a constant physical flat position angle denoted as ψU. Likewise, the reflective surface of the IRS has a predetermined, physically flat position angle denoted as ψS. The distance between the antenna and the reflecting surface is denoted as Δ and is equal to half the wavelength (Δ=λ/2). Hence, the calculation of the propagation delay of the waves τk,m,τk,n,andτm,n may be performed accordingly.

The separations are evaluated as follows: the distance between the mth I element and the center OU, indicated as Δm=(M+1−2m)Δ, and the distance in the nth element and the center O_S, denoted as Δn=1/2(N+1−2n)Δ. Equally, the distances encompassing the kth user and the mth on the AI antenna (Lk,m), the kth user and the nth on the IRS (Lk,n), and the mth element on the AI antenna and the n-th element on the IRS (L) are computed in accordance with equations (12), (13), (14).

3.1 Proposed channel modeling algorithm based on artificial intelligence

The utilization of a data-driven deep learning framework has emerged as a prominent strategy in the design and implementation of channel estimates. This trend is attributed to the innate capability of deep learning algorithms to extract intricate features from environmental information embedded in received signals, all without necessitating prior knowledge about channel statistics (Ma & Sun, 2020). Moreover, it's noteworthy to recognize that deep learning algorithms exhibit relatively modest computational complexity owing to their reliance on fundamental operations such as multiplications.

However, it is imperative to acknowledge a notable limitation of current deep learning-driven channel estimation approaches: the omission of the temporal dimension of CSI. Specifically, the incorporation of neighboring observations of the time-evolving CSI could potentially enhance prediction precision. To address this, efforts should be directed towards augmenting the deep learning models to encompass temporal correlation patterns in CSI dynamics.

In order to effectively monitor dynamic channel conditions, it becomes imperative to equip neural networks with the capability to acquire knowledge about these temporal correlation patterns. This enhancement would not only improve the accuracy of channel estimation but also enable more robust and adaptive communication systems. There are two well-recognized approaches known as recurrent neural network (RNN) see Fig. 2.Fig. 2 The illustration framework.

Fig. 2

Long Short-Term Memory (LSTM) networks have gained widespread adoption for tackling time-varying problems, encompassing various domains such as natural language processing. Both methodologies consider both past and current input data to make predictions. Recurrent Neural Networks (RNNs), designed with feedback loops, retain and propagate information over sequential data. However, RNNs encounter difficulties in learning long-term temporal relationships primarily due to the vanishing gradient issue. In contrast, the LSTM model integrates input and forget gates to bolster the retention of long-term dependencies while mitigating the problem of gradient flow [27].

Within this section, we introduce a framework that synergizes the benefits of Deep Neural Networks (DNN) and a multilayer perception mechanism for discerning intricacies within intricate environments. Moreover, we integrate LSTM with diverse input/output layers to facilitate the temporal passage of information. This framework, known as DNN and then by Bi-LSTM, is meticulously tailored for temporal tracking of CSI within communication systems involving UAVs and IRS. Fig. 2 visually delineates the comprehensive structure of the algorithm at hand. This configuration encompasses two principal modules: a DNN for reducing pre-estimation, relying on a pre-programmed offline model, and a Bi-LSTM for tracking, capitalizing on historical sequence insights. To express the channel tracking challenge in vector notation, we employ the symbols yk(t)=vec(Yk(t)CM(N+1)×1 and hk(t)=vec(Hk(t))∈CM(N+1)×1.

3.2 Module 1: DNNs channel description for estimation framework

The DNN is a variant of the artificial network that has numerous hidden layers positioned between the layers. In particular, it should be noted that within the neural network architecture, each layer has several neurons, the resulting output is derived from the weighted summation of these neurons, which are subject to the operation of a non-linear function. The Sigmoid function, denoted as Sigmoid(x)=11+ⅇ−x, and the Rectified Linear Unit (ReLU) function, denoted as fReLU(x)=max(0,x) are often used nonlinear activation functions in DNNs. The pre-estimation DNN ith LD−2 hidden layers out of a total of LD layers. The lth hidden layer of the network is composed of Ne neurons, where 2≤l≤LD−1 and 1≤ne≤Ne. The input vector yk(t) in the deep neural network (DNN) is represented as [R(yk(t);I(yk(t))]εRMNP×2, yk(t) as R(yk(t)=[Ryk,1(t)),….R(yk,M,Np(t))],and I(yk(t)=[Iyk,1(t)),….I(yk,M,Np(t))] respectively. The number of neurons in the input layer is equal to 2MNp. In a similar manner, the output vector Hˆk(t) of the DNN may be represented as R(hˆk(t);I(hˆk(t)]εRM(N+1)×2. The number of neurons in the output layer is determined by the equation 2M(N+1). The quantity denoted as 16MNp represents the total count of neurons present on each hidden layer.Algorithm 1: Training of Module 1: DNN-based Pre-estimation of Channel	
Input: Training received Signal yk(1),…,yk(T), training true channel information Hk(1),…,Hk(T).
Output: Trained DNN for pre-estimation
Initialization: Randomized initial weights θ.1 Generate a set of Training sequences yk(1),…,yk(T), and Hk(1),…,Hk(T) with selected SNRs and pilot overheads size NP.

2 Design the DNN-based Pre-estimation Framework with LD layers and Ne neurons in each hidden layer. Set the learning rate and batch size.

3 While not convergence do.

4 Update weights θ by minimizing loss function in (17).

End while.	

In order to articulate the transmission principle of DNNs, the notation ith is used to denote the input of neurons in the lth layer see Fig. 3. The variable neth denotes the output of the neth neuron at the lth layer. The weight matrix and bias vector of the lth layer are denoted as Wl(DNN) and bl(DNN), respectively. Therefore, the output of each neuron may be represented as see in Eqs (12), (13), (14), (15).(12) Lk,m=(|DksinαU,k|−ΔmSinψU)2+(|DkcosαU,k|−ΔmcosψU)2zU2,

(13) Lk,n=(|Ds,ksinαS,k|−ΔnSinψs)2+(|Ds,kcosαS,k|+ΔncosψU)2zS2,

(14) Lm,n=(|DscosαU,K|‐Δmcosψs)2+Δncosψs)2+(|DssinαU,S‐ΔmSinψU|)2+zU‐zS)2

(15) ol,ne=fl,ne(bl,ne(DNN)+ω(DNN)l,neTil),

Fig. 3 The structure of Bi-LSTM.

Fig. 3

The activation for the lth layer and the neth neuron is denoted as flne During the training phase, when the total batch size is denoted as B, the output of the DNN with the bth orthogonal batch may be mathematically represented as Eq (16).(16) Ĥk(b,.t)=fLD(…f2(yk(b,.t);θ2)…;θLD).

During the training phase for the development of a deep neural network (DNN), the parameter set θl=(wl(DNN),bl(DNN)) - representing the DNN model at the lth layer - can be obtained through the process of changing descent. This entails iteratively minimizing the loss function until result is attained. Formally, the loss function that spans all layers is defined as follows Eq (17):(17) Loss(Θ)=12M(N+1)ß∑b,.ß(Ĥk(b,.t)−HK(b,.,t))2,

Let θ denote the comprehensive collection of parameters across all levels, where Hk(b,. t)=[R(hk(b,.t));I(hk(b,.t))] indicates the actual value of channel in the bth batch. The procedural details for training of channel pre-calculation deep neural network (DNN) are outlined in Algorithm 1.

3.3 Module 2: channel tracking based on Bi-LSTM

The Bi-LSTM serves as the second component in the algorithm framework. It is responsible for monitoring the temporal sequence of Channel State Information (CSI) by using pre-estimated denoised channel information Hˆk(t−T) to Hˆk(t) and the prior output of the channel tracking process H∼k(t−T)toH∼k(t−1). In the model, the variable T represents the whole duration of the historical time slot that is used.

3.4 Long and Short-Term Memory (LSTM)

RNN, an extension of the recurrent neural network, is a learning algorithm that utilizes gradients to establish connections between past information and the present task [28]. Typically, temporal data is inputted into LSTM models in a sequential manner, following a forward trajectory through the chain-like architecture. This example specifically highlights the functioning of the first layer of the forward LSTM in the given illustration structure.

LSTM models offer several advantages over traditional RNNs. Firstly, LSTM models address the vanishing gradient problem inherent in RNNs, allowing them to effectively capture long-term dependencies in sequential data. This is achieved through the integration of input and forget gates, which enable the model to selectively retain or discard information over extended sequences. Additionally, LSTM models exhibit improved performance in tasks involving sequential data processing, such as natural language processing and time-series forecasting, due to their ability to preserve context information across multiple time steps.

However, despite their advantages, LSTM models also have limitations. One notable drawback is their increased computational complexity compared to simpler recurrent architectures like vanilla RNNs. This complexity arises from the additional gating mechanisms incorporated within the LSTM units, leading to higher training and inference times. Moreover, LSTM models may still struggle with capturing very long-term dependencies or contextual nuances in highly complex sequential data, particularly in scenarios where the data exhibits irregular or unpredictable patterns.

One notable distinction between LSTM and conventional neurals networks (CNN) is in the composition of hidden layers inside each LSTM cell. The first layer is referred to as the "forget layer," sometimes recognized as the fg,t. The neural network architecture includes the incorporation of data from the preceding layer H∼(t−1) and the current denoised input Hˆ(t) using weights wˆf, wˆf, and bias bf. Additionally, an activation function is applied to this combination of inputs in Eq (18).(18) fg,t=σ(wˆfHˆk(t)+w∼fH∼k(t−1)+bf).

The second layer can be written as in Eq (19).(19) ig,t=σ(wˆiHˆk(t)+w∼iH∼k(t−1)+bi).

The third layer is the cell input state Cg,t that can be calculated as Eq in 20(20) cg,t=tanh(wˆcHˆk(t)+w∼cH∼k(t−1)+bc).

final layer is called output gate Og,t, which can be calculated as Eq in 21:(21) og,t=tanh(wˆoHˆk(t)+w∼oH∼k(t−1)+bo).

In summary, the construction of the hidden layers discussed above involves the use of matrix W and biasness vector b as respective frameworks. Symbol σ is often used to denote the activation function of a gate, typically implemented as a sigmoid function.

In addition to the cell Cg,t inside the layers, the structure also includes two additional cell states: the previous output state c(t−1) which is sent to the LSTM cell, and the current cell output state c(t) which is transmitted to the subsequent LSTM cell. The status of the output at the present moment t may be modified in Eq (22).(22) c(t)=fg,t⊗tanh(c(t)).

Significantly, the traditional input layer refers to the better time sequence Hˆk(t) at slot t that is sent from DNN. Ultimately, the computation of the output layer may be determined as Eq 23(23) H∼k(t)′=og,t⊗tanh(c(t)).

In order to address the limitation of a single LSTM cell, which is only capable of capturing historical information, researchers have introduced a bidirectional structure. This structure combines both the forward and backward directions, enabling the use of both past and future information. Consequently.Algorithm 2: Training of Module 2: Stacked Bi-LSTM-based Channel Tracking	
Input: Pre-estimation Hˆk(1),…,Hˆk(T), training sequence, true channel information Hk(1),…,Hk(T).
Output: Trained model for tracking current sequence.
Initialization: Randomized initial weights W and bias b.1 Generate a new set of Training sequences Hˆk(1),…,Hˆk(T), and Hk(1),…,Hk(T) with selected SNRs and pilot overheads size NP and T historic time step.

2 Design the bi-directional tracking Framework with LS stacked layers and T historic time step in each layer. Set the learning rate and batched size.

3 While not convergence do.

4 Update weights W and bias b by minimizing the loss function in (17).

End while.	

Algorithm 3: Proposed Algorithm for overall Channel Tracking	
Input: Received Signal yk(1),…,yk(T).
Output: Channel tracking information Hk(T).
Initialization: Randomized initial weights W and bias b.
Module 1 channel pre-estimation:1 Construct the LD layers DNN framework.

2 Load the DNN-optimized parameters that have been trained in Algorithm 1.

3 Pre-estimate the channel information Hˆk(1),…,Hˆk(T).

Module 2 Tracking channel:1 Train the channel tracking model as in Algorithm 2 with (T−1) sequence data and T historic time step.

2 Use time sequence T−T to T−1 as input data to track T channel information H˜k(T) based on the trained tracking model.

	

The coming output H∼k(t)′(f) and backward response H∼k(t)′(f) of each cell are computed using the input relative to the output layer function as described in equation (23). The output of the forward layer is computed repeatedly using the time slots from t−Ttot−1. In a similar manner, the output of the backward layer is computed by using the reversed time sequence from t−1tot−T. The expression of a bidirectional structure may be stated as Eq (24).(24) H∼k(t)′=σf,b(H∼k(t)′(f)⊕H∼k(t)′(b)

Research has shown that the gradual improvement of performance may be achieved by using numerous hierarchical models in a stacked manner [29].

Therefore, a stacked structure is used in which the output is afterward utilized as input to top layer, with the condition that the number of Bi-LSTM layers, denoted as Ls be more than or equal to 2. The Bi-LSTM model incorporates bidirectional information and a deeper structure with T time slots in its process see Fig. 4. The resultant tracking output subsequent to the Lsth layer of Bi-LSTM may be expressed as Eq (25).(25) H∼k(t)=σf,b(H∼k(t)′(f)Ls⊕H∼k(t)′(b)

Fig. 4 Illustrates the loss function for various sizes of pilot overheads.

Fig. 4

denoted as Np ranging from 10 to 20. Additionally, the DNN is characterized by different total layers, denoted as LD, which vary from 3 to 6.

The training procedure for the Stacked Bi-LSTM channel tracking model may be shown in Algorithm 2. The technique for tracking the whole channel is presented in Algorithm 3.

4 Results and discussion

In this section, we delve into the evaluation of the loss, channel tracking performance, and complexity of different methods within our established framework comprising two modules. Our analysis primarily centers on comparing the channel tracking performance of four models: DNN, DNN with LSTM, DNN with Bi-LSTM, and our recommended approach of using DNN followed by a Stacked Bi-LSTM model. The fundamental parameters are established in the following manner: The carrier frequency, denoted as fc is equal to 5.2 GHz. The speed of the UAV, represented as vU is 5 m/s. The azimuth angle of the AI speed, denoted as r⋃,∝ is π/6, while the elevation angle, represented as r⋃,β is also π/6. The speed of the kth user, denoted as vk is equal to 5 m/s, whereas the azimuth angle of the user's speed, represented as r⋃,∝ is π/24. In order to demonstrate the higher tracking capability of our suggested method, we conducted a simulation where we focused on a single user inside the system. The elements in the IRS system is denoted as N, and it is equal to 8. Similarly, the total number of antenna elements on the kth UAV is denoted as M, and it is also equal to 8. The angle of the antenna on the UAV is denoted as ψU and is equal to π/6. Similarly, the surfaces on the IRS has a set flat angle denoted as ψU and is also equal to π/6. The vertical altitude of the UAV, denoted as HU, is measured to be 200 m. Similarly, the vertical altitude of the infrared sensor (IRS), denoted as HS is determined to be 100 m. IRS, and the kth user. The IRS is located at coordinates (−600 m, −600 m, 100 m), while the AI is positioned at (500 m, 600 m). The sequence consists of 200-time slots, with a train-test split rate of 0.8 used for evaluating the effectiveness of channel tracking.

The loss function is a fundamental component in machine learning algorithms, particularly in the context of supervised learning. It quantifies the discrepancy between Fig. 4 illustrates the loss function of the channel pre-estimation DNN with various pilot overhead sizes Np and hidden layers ND. The whole batch size is denoted as B see Fig. 5 (a) and (b).Fig. 5 (a) presents the loss of several tracking algorithms with varying time steps. In this context, T represents a set of discrete time instances, namely T=2,3,4. The letter b denotes the batch size, which is a parameter that varies across different channel tracking techniques.

Fig. 5

The term "loss function" refers to a mathematical measure used to quantify the discrepancy between predicted and actual channel tracking outcomes. It is worth noting that the loss function may fluctuate across multiple channel tracking methods due to the influence of different batch sizes. The pre-estimation DNN is trained using a learning rate of 0.001 and a predefined value of 512 for ε. The whole training dataset is derived from a variety of signal-to-noise ratios (SNR) including −5, 0, 5, 10, 15, and 20 dB, as well as blockage probabilities Pk of 0.3, 0.4, 0.5, and 0.6. The dataset consists of T=200 sequences. It is evident that when the learning rate LD is set to 3, both Np=10 and Np=20 need a greater number of epochs in order to get converged result. There is no difference seen in the convergence of function between LD values of 4, 5, and 6. The convergence loss with a pilot overhead size of Np=10 is smaller compared to Np=20. The rationale for this phenomenon is that when the number of processing units (NPs) rises, both the input and the number of neurals in every layer are correspondingly augmented, leading to a more intricate architecture. Based on empirical evidence, our approach demonstrates the ability to produce significant performance improvements with a very modest value of Np. Therefore, the values LD=4 and Np=10 are chosen for the subsequent simulations.

In addition, Fig. 5 presents a comparison of the loss function across several channel tracking techniques, including LSTM, Bi-LSTM, and the suggested algorithm. The method under consideration exhibits a cumulative number of stacked layers denoted as Ls, which has a value of 3. The training channel sequence for difference tracking techniques is configured with a signal-to-noise ratio (SNR) of 20 dB and a probability value of Pk=0.3. The overall length of the sequence is T=200. Fig. 5 (a) presents a comparison of several historical time steps (T) including T=2,T=3, and T=4. The comparison is based on a fixed value of B=64 and ε=0.02. In comparison to the other two techniques, the proposed algorithm demonstrates a faster convergence towards a loss value close to zero for certain epochs of the dynamic channel sequence. It is important to highlight that the suitable hyper-parameter T can be chosen through various methods, contingent on factors like distinct values of vU and vk. In Fig. 5 (b), a comparison is made between two batch sizes, namely 64 and 128, with respect to the values of T=2 and ε=0.02. The algorithm under consideration has comparable convergence performance.

Furthermore, Fig. 6 illustrates the loss function of the method presented in this study with various hyper-parameters. The technique is designed for channel tracking in a dynamic channel scenario with a total duration of T=200. The SNR is established at 20 dB, while the pilot overhead size is indicated as NP=10. For the subsequent evaluation of channel tracking performance, the hyper-parameter set that converges the loss function in a slightly lesser number of epochs is selected see Fig. 7 (a) and (b). This selection is made by comparing various learning rates in Fig. 6(a) and examining the values of T and Ls in Fig. 6(b) with ε=0.01, B=64, T=2. and Ls=3.Fig. 6 Illustrates the loss function behavior of the proposed algorithm under different batch sizes B and learning rates in (a), while (b) showcases the loss function variation with distinct historical time steps (T=2,4) and stacked layers Ls=(3,4).

Fig. 6

Fig. 7 Fig. 7 displays the normalized mean square error (NMSE) performance of several techniques. (a) Np=10. (b) Np=25.

Fig. 7

4.1 Performance of channel tracking

The normalized mean square error (NMSE) has been selected as the statistic to assess the tracking performance of the algorithms [30] in Eq (26).(26) NMSE=E(‖H∼k−Hk‖2E(‖Hk‖)2

The variable H∼k represents the estimated tracking channel, whereas Hk denotes the genuine channel. In order to assess the performance of the algorithms in terms of NMSE, the whole sequence of T=200 is partitioned into two sets: a training set and a testing set. In our evaluation process, we divided the dataset into a training set comprising time slots 1 to 160, used for training the LSTM, Bi-LSTM, and our suggested algorithms. The testing set, encompassing time slots 161 to 200, was then utilized to assess tracking performance. This evaluation was conducted by calculating the average throughout a total of 500 rounds. Additionally, we employed a traditional least square (LS) method as a benchmark in our system.

Fig. 7 illustrates a noticeable reduction in the NMSE performance of all algorithms as the SNR increases. Notably, our investigated algorithm demonstrates significantly enhanced performance compared to alternative algorithms, even when pilot overheads are minimal. It's important to highlight that LS and DNN are stationary estimation techniques, analyzing incoming signals solely for estimation purposes. In contrast, the subsequent three algorithms exhibit improved performance by considering correlations across the temporal domain.

Our proposed approach showcases adeptness in extracting information from past and future contexts, as well as from intricate network structures, particularly through the utilization of bi-directional and layered architectures. This highlights the effectiveness of our method in leveraging temporal correlations and network complexity to achieve superior tracking performance see Table 2.Table 2 Recorded operation time, measured in milliseconds, for both channel pre-estimation and tracking.

Table 2Module 1: Pre-Estimation DNN Layers	
M=9,N=9	M=8,N=4	
	Np=11	Np=16	Np=21	Np=12	
DNNLD=3	0.210	0.342	0.328	0.067	
DNNLD=4	0.335	0.559	0.577	0.117	
DNNLD=5	0.422	0.713	0.724	0.144	
DNNLD=6	0.552	0.886	0.925	0.182	
Module 2: Channel Tracking Algorithms	
M=9,N=9	M=4,N=8	
Np=11	T=3	T=6	T=3	T=6	
LongShortTermMemory(LSTM)	2.957	2.986	0.288	0.394	
Bi−LSTM	4.635	5.217	0.458	0.712	
StackedBi−LSTMLs=2	8.777	10.549	0.734	1.445	
StackedBi−LSTMLs=3	12.818	15.478	1.223	2.166	

4.2 Complexity

This section presents an analysis of algorithmic complexity and computational time across different methods. The complexity of the pre-estimation DNN, excluding the bias term, can be represented as the summation of products of neuron counts in each layer, given as Ꝺ(∑l=1LD−1(NelNel+1)) 1), where Nel signifies the number of neurons in each layer. Specifically, the input layer (l=1) comprises 2MNp neurons, while each hidden layer (l=2),….,(LD−1)) contains 16MNp neurons. The output layer l=LD consists of 2M(N+1) neurons. The computational complexity of a single LSTM cell can be calculated using the expression Ꝺ(NC(4NC+4N2+4No+3)) [31].

In this context, NC,Ni,No represent the quantities of memory cells, input units, and output units, respectively. It is worth noting that both NiandNo are equal to 2M(N+1). Furthermore, in the case of LSTM, the number of cells is denoted as LSTM NC=1τ, while for Bi-LSTM, it is represented as NC=2τ. Similarly, for Stacked Bi-LSTM, the number of cells is denoted as NC=2τLs. The use of Bi-LSTM involves the estimate of both forward and backward directions, resulting in a total of NC=2τ. The equation NC=2τLs holds true for Stacked Bi-LSTM, where Ls is the number of layers of Bi-LSTM that are stacked together.

As indicated in Table 2, the runtime of the Python Jupyter Notebook escalates with the augmentation of parameters such as ND (number of layers), Np (number of parameters), and M (model complexity) for DNNs with multiple layers. This increase in runtime is expected due to the higher computational demands associated with deeper networks and increased model complexity.

Moreover, it's noteworthy that the Stacked Bi-LSTM model requires a longer computational time compared to other models due to its intricate architecture. Despite this longer runtime, the model demonstrates significantly improved performance in terms of NMSE when applied to dynamic channel sequences, as evidenced in the preceding paragraph.

In essence, while the Stacked Bi-LSTM model may necessitate more computational resources and time for processing, its enhanced performance in accurately modeling dynamic channel behaviors justifies the investment, highlighting its efficacy in capturing temporal dependencies and improving predictive accuracy.

5 Conclusion

In this study, the researchers developed a dynamic channel model in 3D geometry tailored for a communication system leveraging an Intelligent Reflecting Surface (IRS) to enhance UAV-enabled communication. They paid close attention to the intricate movement patterns of mobile users and navigation trajectories of UAVs when formulating the time-varying channel framework.

The channel model revolves around two primary connectivity components: a dynamic Line-of-Sight (LoS) link connecting users and UAVs, and a dynamic virtual LoS connection linking users and Infrared Small Unmanned Aerial Vehicles (IRSUAVs). Additionally, they introduced an innovative deep learning-driven methodology for channel tracking.

This methodology comprises two integrated modules: an initial channel estimation process using a DNN to mitigate noise effects, and a Stacked Bidirectional Long Short-Term Memory (Bi-LSTM) network dedicated to tracking the evolving channel. The architecture of the Stacked Bi-LSTM network is carefully designed with a bidirectional structure spanning multiple stacked layers, enabling effective capture and analysis of temporal information from past instances.

Simulation results indicate that the proposed approach for channel tracking outperforms several benchmarks while maintaining minimal pilot overheads and equal computing complexity. This suggests that the developed methodology holds promise for enhancing communication systems in UAV-enabled scenarios.

One limitation of this study is the reliance on simulation-based evaluations, which may not fully capture real-world complexities and variations. Additionally, the proposed deep learning-driven methodology for channel tracking may require extensive computational resources and training data, limiting its practical applicability in resource-constrained environments.

Ethics approval and consent to participate

Not applicable.

Consent for publication

All of the authors consented to publish this manuscript.

Data availability

All relevant data in form of figures and results have been included in this paper. Corresponding author (qiang999xiaohu@163.com) may be contacted for any further query regarding data availability.

CRediT authorship contribution statement

Chongyang Liu: Conceptualization, Formal analysis, Visualization, Writing – original draft, Writing – review & editing. Xiaohu Qiang: Conceptualization, Data curation, Formal analysis, Visualization, Writing – original draft, Writing – review & editing.

Declaration of competing interest

The authors declare that they have no known competing financial interests or personal relationships that could have appeared to influence the work reported in this paper.

Funding

This article is supported by the Scientific Research Project of Hunan Provincial Department of Education: Exploration and Practice of the Construction Model of Science and Technology Innovation Platform in Higher Vocational Colleges from the Perspective of Industry Institute (Project Number: 22C1215).
==== Refs
References

1 Mathis M. Overview and clinical applications of artificial intelligence and machine learning in cardiac anesthesiology J. Cardiothorac. Vasc. Anesth. 2024 10.1053/j.jvca.2024.02.004
2 Fan H. Research on innovation and application of 5G using artificial intelligence-based image and speech recognition technologies J. King Saud Univ. Sci. 35 4 2023 102626 10.1016/j.jksus.2023.102626
3 Marquez R. A perspective on the synergistic potential of artificial intelligence and product-based learning strategies in biobased materials education Educ. Chem. Eng. 44 2023 164 180 10.1016/j.ece.2023.05.005
4 Abdel Aziz M.H. Rowe C. Southwood R. Nogid A. Berman S. Gustafson K. A scoping review of artificial intelligence within pharmacy education Am. J. Pharm. Educ. 88 1 2024 100615 10.1016/j.ajpe.2023.100615
5 Hall O. Ohlsson M. Rögnvaldsson T. A review of explainable AI in the satellite data, deep machine learning, and human poverty domain Patterns 3 10 2022 100600 10.1016/j.patter.2022.100600
6 Parimbelli E. Buonocore T.M. Nicora G. Michalowski W. Wilk S. Bellazzi R. Why did AI get this one wrong? — Tree-based explanations of machine learning model predictions Artif. Intell. Med. 135 2023 102471 10.1016/j.artmed.2022.102471
7 Celik T.B. Ican O. Bulut E. Extending machine learning prediction capabilities by explainable AI in financial time series prediction Appl. Soft Comput. 132 2023 109876 10.1016/j.asoc.2022.109876
8 Radianti J. Majchrzak T.A. Fromm J. Wohlgenannt I. A systematic review of immersive virtual reality applications for higher education: design elements, lessons learned, and research agenda Comput. Educ. 147 2020 103778 10.1016/j.compedu.2019.103778
9 Memarian B. Doleck T. ChatGPT in education: methods, potentials, and limitations Comput. Hum. Behav. Artif. Humans 1 2 2023 100022 10.1016/j.chbah.2023.100022
10 Moghaddam M. Wilson N.C. Modestino A.S. Jona K. Marsella S.C. Exploring augmented reality for worker assistance versus training Adv. Eng. Inf. 50 2021 101410 10.1016/j.aei.2021.101410
11 Chang A.C. Limon A. “Chapter 1 - introduction to artificial intelligence for cardiovascular clinicians,” in intelligence-based cardiology and cardiac surgery Chang A.C. Limon A. Intelligence-Based Medicine: Subspecialty Series 2024 Academic Press 3 120 10.1016/B978-0-323-90534-3.00010-X
12 Lehtonen M.J. Gustafsson R. Hassan L. The multiplex of value creation and capture logics in the video game industry: an integrative review of 20 years of studies and a future research agenda Technol. Forecast. Soc. Change 195 2023 122756 10.1016/j.techfore.2023.122756
13 Jathar L.D. A comprehensive analysis of the emerging modern trends in research on photovoltaic systems and desalination in the era of artificial intelligence and machine learning Heliyon 10 3 2024 e25407 10.1016/j.heliyon.2024.e25407
14 Gulevich D.G. Nabiev I.R. Samokhvalov P.S. Machine learning–assisted colloidal synthesis: a review Mater. Today Chem. 35 2024 101837 10.1016/j.mtchem.2023.101837
15 Dunsin D. Ghanem M.C. Ouazzane K. Vassilev V. A comprehensive analysis of the role of artificial intelligence and machine learning in modern digital forensics and incident response Forensic Sci. Int. Digit. Investig. 48 2024 301675 10.1016/j.fsidi.2023.301675
16 Thisovithan P. Aththanayake H. Meddage D.P.P. Ekanayake I.U. Rathnayake U. A novel explainable AI-based approach to estimate the natural period of vibration of masonry infill reinforced concrete frame structures using different machine learning techniques Results Eng 19 2023 101388 10.1016/j.rineng.2023.101388
17 Schmitt M. Automated machine learning: AI-driven decision making in business analytics Intell. Syst. with Appl. 18 2023 200188 10.1016/j.iswa.2023.200188
18 Liu J. Cao X. Empowering autonomous systems with AI-enabled V2X communication based signal analysis using sliding window integrated ensemble machine learning model Comput. Electr. Eng. 111 2023 108936 10.1016/j.compeleceng.2023.108936
19 Cherblanc J. Gaboury S. Maître J. Côté I. Cadell S. Bergeron-Leclerc C. Predicting levels of prolonged grief disorder symptoms during the COVID-19 pandemic: an integrated approach of classical data exploration, predictive machine learning, and explainable AI J. Affect. Disord. 351 2024 746 754 10.1016/j.jad.2024.01.236 38290589
20 Mohammadi S.S. Nguyen Q.D. A user-friendly approach for the diagnosis of diabetic retinopathy using ChatGPT and automated machine learning Ophthalmol. Sci. 2024 100495 10.1016/j.xops.2024.100495
21 Kulasekararaj A.G. AI for AA: machine learning makes an entry Blood 141 17 2023 2040 2042 10.1182/blood.2022019444 37103950
22 Penate-Sanchez A. Peña Alonso C. Perez-Chacon Espino E. Falcon Martel A. A machine learning approach to design a DPSIR model: a real case implementation of evidence-based policy creation using AI Adv. Eng. Inf. 57 2023 102042 10.1016/j.aei.2023.102042
23 Muruganandam S. Salameh A.A. Pozin M.A.A. Manikanthan S.V. Padmapriya T. Sensors and machine learning and AI operation-constrained process control method for sensor-aided industrial internet of things and smart factories Meas. Sensors 25 2023 100668 10.1016/j.measen.2023.100668
24 Mittal P. Goyal R. Kapoor R. Gautam R.K. Chapter 4 - artificial intelligence (AI) and machine learning in the treatment of various diseases Gautam R.K. Kamal M.A. Mittal P. Computational Approaches in Drug Discovery, Development and Systems Pharmacology 2023 Academic Press 139 158 10.1016/B978-0-323-99137-7.00010-1
25 Nozari H. Ghahremani-Nahr J. Szmelter-Jarosz A. “Chapter one - AI and machine learning for real-world problems,” in artificial intelligence and machine learning for open-world novelty Kim S. Deka G.C. Advances in Computers vol. 134 2024 Elsevier 1 12 10.1016/bs.adcom.2023.02.001
26 Khan A. Naeem M. Asghar M.Z. Ud Din A. Khan A. Playing first-person shooter games with machine learning techniques and methods using the VizDoom Game-AI research platform Entertain. Comput. 34 2020 100357 10.1016/j.entcom.2020.100357
27 Castiglioni I. AI applications to medical images: from machine learning to deep learning Phys. Medica 83 2021 9 24 10.1016/j.ejmp.2021.02.006
28 Sharma A. Singh U.K. Modelling of smart risk assessment approach for cloud computing environment using AI & supervised machine learning algorithms Glob. Transitions Proc. 3 1 2022 243 250 10.1016/j.gltp.2022.03.030
29 Mazzi F. CMOs and AI: can trained machine learning be justified with the concept of know–how? World Pat. Inf. 65 2021 102036 10.1016/j.wpi.2021.102036
30 Precioso D. TUN-AI: tuna biomass estimation with Machine Learning models trained on oceanography and echosounder FAD data Fish. Res. 250 2022 106263 10.1016/j.fishres.2022.106263
31 DeAngelis M. 876 using an artificial intelligence (AI) and machine learning (ml) platform to identify mast cell focused therapeutic targets and associated gut-liver-brain AXIS indications Gastroenterology 164 6 2023 S 194 10.1016/S0016-5085(23)01428-2 Supplement
