
==== Front
Sensors (Basel)
Sensors (Basel)
sensors
Sensors (Basel, Switzerland)
1424-8220
MDPI

10.3390/s24113563
sensors-24-03563
Article
Deep Learning Approach for Pitting Corrosion Detection in Gas Pipelines
https://orcid.org/0009-0008-8986-402X
Malashin Ivan Conceptualization Software Resources Writing – original draft Writing – review & editing 1*
https://orcid.org/0000-0002-3959-2969
Tynchenko Vadim Methodology Validation Resources Supervision 1*
https://orcid.org/0000-0003-4263-2367
Nelyub Vladimir Formal analysis Resources Data curation Writing – original draft Project administration Funding acquisition 12
https://orcid.org/0000-0002-9648-2395
Borodulin Aleksei Methodology Validation Investigation Writing – review & editing Project administration Funding acquisition 1
Gantimurov Andrei Investigation Resources Writing – review & editing Supervision Project administration Funding acquisition 1
https://orcid.org/0000-0002-7025-6795
Krysko Nikolay V. 1
Shchipakov Nikita A. 1
https://orcid.org/0000-0001-7067-1959
Kozlov Denis M. 1
Kusyy Andrey G. 1
https://orcid.org/0000-0002-1563-4036
Martysyuk Dmitry 1
Galinovsky Andrey Software Validation Formal analysis Writing – review & editing Supervision 1
Li Huafeng Academic Editor
Liu Yu Academic Editor
Qi Guanqiu Academic Editor
Zhu Zhiqin Academic Editor
1 Artificial Intelligence Technology Scientific and Education Center, Department of Welding, Diagnostics and Special Robotics, Bauman Moscow State Technical University, 105005 Moscow, Russia
2 Scientific Department, Far Eastern Federal University, 690922 Vladivostok, Russia
* Correspondence: ivan.p.malashin@gmail.com (I.M.); vadimond@mail.ru (V.T.); Tel.: +7-926-875-7128 (I.M.)
31 5 2024
6 2024
24 11 356311 5 2024
25 5 2024
28 5 2024
© 2024 by the authors.
2024
https://creativecommons.org/licenses/by/4.0/ Licensee MDPI, Basel, Switzerland. This article is an open access article distributed under the terms and conditions of the Creative Commons Attribution (CC BY) license (https://creativecommons.org/licenses/by/4.0/).
The paper introduces a computer vision methodology for detecting pitting corrosion in gas pipelines. To achieve this, a dataset comprising 576,000 images of pipelines with and without pitting corrosion was curated. A custom-designed and optimized convolutional neural network (CNN) was employed for binary classification, distinguishing between corroded and non-corroded images. This CNN architecture, despite having relatively few parameters compared to existing CNN classifiers, achieved a notably high classification accuracy of 98.44%. The proposed CNN outperformed many contemporary classifiers in its efficacy. By leveraging deep learning, this approach effectively eliminates the need for manual inspection of pipelines for pitting corrosion, thus streamlining what was previously a time-consuming and cost-ineffective process.

pitting corrosion
deep neural network
gas pipelines
This research received no external funding.
==== Body
pmc1. Introduction

In the realm of gas industry, pipelines assume an essential role in the transportation of raw materials. However, corrosion poses a significant threat to their reliability and safety. Corrosion damage can lead to structural defects, potentially resulting in gas leaks [1], accidents [2], and even emergencies. Moreover, the corrosion process is exacerbated by the operational conditions of pipelines, which are subject to aggressive environments and physical stresses. In light of this, effective methods for detecting and monitoring corrosion in gas pipelines are essential for maintaining their functionality and safety. This article explores a deep learning (DNN) approach specifically targeted at detecting pitting corrosion in gas pipelines, focusing on the identification of deep-seated depressions or holes in images of surfaces rather than overall rust levels in images. It examines the potential application of this method in enhancing the reliability and safety of gas transportation systems.

Benign gas pipeline surface alterations refer to minor, non-corrosive irregularities [3,4] or imperfections that may occur naturally or as a result of external factors, such as handling or environmental exposure (Figure 1a,b). These alterations typically do not pose a threat [5] to the integrity or safety of the pipeline and may include surface discoloration [6], scratches [7], or minor dents [8]. On the other hand, surfaces exhibiting pitting corrosion display localized, deeper depressions [9] (Figure 1c,d) or cavities caused by chemical [10] or electrochemical [11] reactions, potentially leading to structural weakening and leaks if left untreated. Distinguishing between benign surface alterations and pitting corrosion is crucial for accurately assessing the condition of pipeline surfaces and for prioritizing maintenance and repair efforts to ensure the continued safe operation of the infrastructure.

One of the main challenges in classifying pitting corrosion, as opposed to rust levels, is the need for precise identification of deep-seated depressions [12] or holes [13] in the pipeline surface. Pitting corrosion can manifest as small but deep defects, which can be difficult to distinguish from ordinary surface irregularities or roughness. This requires image processing algorithms to be exceptionally sensitive [14] and capable of detecting even the slightest signs of pitting corrosion amid other types of defects or background noise. Additionally, minimizing false positives and ensuring high accuracy and reliability in detecting pitting corrosion are essential for the safety and reliability of pipeline systems.

The proliferation of gas pipelines, both existing and under construction, is a significant aspect of modern infrastructure development. The works in [15,16] highlighted surface corrosion as the predominant operational issue arising from external environmental factors. Such defects typically manifest as either planar, such as stress-corrosion cracks, or volumetric, notably local pitting corrosion [17]. Various non-destructive testing (NDT) methodologies are employed in the industry to identify these defects automatically. Common techniques encompass visual inspection [18], magnetic flux leakage [19], eddy-current [20], and ultrasonic methods [21]. However, a singular NDT method often fails to gather sufficient data for accurate defect classification, necessitating data fusion of multiple NDT modalities [22]. Despite advancements, these NDT methods may yield false positives, where large pitting corrosion may be erroneously identified as areas lacking transducer coupling. While pitting corrosion is visually discernible, manual inspection of pipeline surfaces via television cameras [23] proves to be data-intensive and laborious. Thus, integrating computer vision models into television inspection systems becomes imperative for efficient classification of corrosion types.

Numerous efforts have emerged in recent years focusing on external corrosion detection through television camera inspections coupled with computer vision processing. Traditional computer vision algorithms, machine learning techniques, and deep learning architectures have been employed for this purpose [24,25]. Notably, convolutional neural networks (CNNs) have gained prominence in image classification tasks [26,27]. CNNs leverage convolutions as a key mathematical operation, facilitating pixel data processing for image recognition and analysis [28]. Their efficacy spans various industries, including corrosion detection, where CNNs have been integrated into image processing workflows [29]. Recent studies have evaluated state-of-the-art CNN architectures such as ZF Net [30] and VGG16 [31] for corrosion detection, with sliding window approaches proving effective for inference [32]. DNN methods have also been compared to traditional OpenCV techniques for metal corrosion detection, demonstrating superior performance in real-world scenarios [33]. Additionally, CNN-based models have outperformed other supervised methods in corrosion grade identification, achieving high accuracy rates [34]. Deep learning approaches have been extended to corrosion segmentation tasks, with models such as FCN, U-Net, and Mask R-CNN exhibiting promising results [35].

Ossai [36] employed various machine learning techniques, including principal component analysis (PCA) [37], particle swarm optimization (PSO) [38], feed-forward artificial neural network (FFANN) [39], gradient boosting machine [40] (GBM), random forest (RF), and deep neural network (DNN) algorithms, to assess the corrosion defect depth growth in aged pipelines. By adjusting FFANN hyperparameters with PSO and utilizing PCA to transform pipeline operating variables, different ML models were developed and tested for X52-grade pipelines. Comparative analysis revealed that ML modeling with PCA-transformed data yielded a significantly higher accuracy (3.52 to 5.32 times) compared to models without PCA transformation.

To automate pipeline inspection and prioritize maintenance, a machine vision-based methodology was proposed by Bondada et al. [41]. This approach identifies and quantifies corrosion damage, aiding in the effective management of pipeline integrity and remedial measures.

Transmission pipelines, vital in the oil and gas industry, face various risks, including corrosion, with offshore pipelines particularly susceptible to pitting corrosion. Akhlagh et al. [42] investigated the efficacy of DL models, specifically generalization and generalization–memorization models, in predicting the maximum depth of pitting corrosion in these pipelines. Trained on diverse soil characteristics and pipe coating types, the deep neural networks achieved a mean squared error of 0.0055 on training data and 0.0037 on test data.

Chen et al. [43] utilized an artificial neural network (ANN) to predict the residual strength of corroded natural gas pipelines. Overcoming challenges like limited training data and overfitting, innovative techniques such as ReLU activation and dropout methods were employed. THe results showed that the multilayer perceptron (MLP) with dropout method outperformed simpler feedforward neural network (FFNN) structures and FFNN optimized by PSO, especially in scenarios with limited sample data.

Shaik et al. [44] developed an intelligent model to predict crude oil pipeline conditions based on factors like metal loss anomalies, wall thickness, weld anomalies, and pressure flow. Using a feed-forward back propagation network (FFBPN) trained with historical inspection data, the model achieved a high accuracy. Validation against other models confirmed its robustness, outperforming previous approaches.

This paper contributes to the field by developing a CNN model specifically tailored for identifying corrosion on gas pipeline external surfaces, focusing on classifying images with and without pitting corrosion. Notably, surface rust and other color variations are considered acceptable and are categorized as non-corrosion instances. The proposed model aims to distinguish images exhibiting pitting corrosion, indicative of real metal loss, from those with benign surface alterations. To the best of our knowledge, existing models primarily focus on detecting various grades of rust and other forms of damage [30,45,46], highlighting a gap in the literature. Thus, the objective of this work was to curate relevant data, develop an appropriate model, train it, and rigorously evaluate its performance.

2. Materials and Methods

2.1. Dataset

The dataset serves as a cornerstone in the CNN training regimen. Acquiring a sufficiently extensive dataset of pipeline surfaces afflicted with pitting corrosion poses a formidable challenge, compounded by the absence of publicly available datasets tailored for pitting corrosion and non-corrosion image classification. Our team conducted comprehensive site visits to various oil and gas facilities, to execute NDT procedures and capture photographs of surface flaws from diverse perspectives. These images were subsequently standardized to dimensions of 224 × 224 pixels. Additionally, our dataset was enriched with frames extracted from pipeline television inspection videos, each resized to match the aforementioned dimensions. The finalized dataset consisted of 576,000 images, with 427,000 depicting non-corrosion instances and 149,000 portraying pitting corrosion. Examples of images from both categories are depicted in Figure 2.

Throughout model development, the dataset underwent partitioning into training, validation, and test sets via randomized image shuffling, preserving a balanced distribution of image classes across all partitions. Table 1 presents a comprehensive breakdown of the image distribution within each class across the aforementioned partitions.

Table 1 indicates a notable class imbalance within the dataset. Specifically, the number of non-corrosion images surpasses that of pitting corrosion images. This imbalance introduced additional complexity into the classification task, necessitating careful consideration during model training and evaluation.

Unlike the training dataset, which is utilized for parameter optimization, a validation dataset remains untouched during training and serves as an independent measure of a model’s generalization capability. This ensures that the model’s performance is evaluated on unseen data, thereby providing a reliable estimate of its effectiveness in real-world scenarios.

2.2. Model Synthesis

CNNs have emerged as powerful tools for image data analysis, dominating key tasks in image classification, object detection, and computer vision [47]. They leverage convolution processes within their architecture, allowing the efficient feature extraction that is essential for precise classification. In the realm of nNDT, CNN utilization enables the automation of defect detection on various surfaces, including metallic structures and pipelines within industrial settings. In the context of gas pipelines, where even minor defects can have serious consequences, CNNs are capable of analyzing large volumes of image data, considering factors such as lighting and texture, thereby ensuring a high accuracy in defect classification and localization.

To assess the efficacy of various CNN architectures, including AlexNet [48], ZFNet [49], VGGNet [50], Inception [51], ResNet [52], and Xception [53], we attempted to train these networks from scratch using our dataset. Feature extraction or fine-tuning of pre-trained models on the ImageNet dataset was not recommended, due to significant dissimilarities between our images and those in the ImageNet classes [54,55]. This decision was based on the significant differences between our images and those in the ImageNet dataset, which may struggle to distinguish pitting corrosion from typical rust [56,57], given its broad categories. Consequently, relying on ImageNet could have led to inaccurate results in detecting pitting corrosion, compromising the effectiveness of our classification system.

Training was performed using the RMSprop optimization algorithm, with a learning rate of 1×10−5, incorporating L2 regularization with a weight decay parameter of 1×10−4, and dropout with a probability of 0.5 for fully connected layers to prevent overfitting. Given the class imbalance in our dataset, the loss function included class weights of 1 for non-corrosion images and 2.5 for pitting corrosion images, along with label smoothing (parameter = 0.3). The CNN training process utilized a GPU Nvidia RTX 3090 with 24 GB memory and a batch size of 64 (Nvidia, Santa Clara, CA, USA). Implementation was carried out using Python 3.9 with TensorFlow 2.5.0 (Google, Mountain View, CA, USA) and OpenCV 4.5.1 (Intel, Santa Clara, CA, USA) libraries. The accuracy plots across each epoch, essential for evaluating CNN architectures, are depicted in Figure 3.

Performance evaluation on the test set involved utilizing multiple metrics, including the confusion matrix, accuracy, F1 score, area under receiver operating characteristic curve (ROC AUC), and area under precision–recall curve (P–R AUC).

The accuracy was calculated as the number of correctly classified examples divided by the total number of examples, expressed by Equation (1):(1) Accuracy=TP+TNTP+TN+FP+FN

The F1 score is the harmonic mean of precision and recall. Precision measures the proportion of positive identifications that were actually correct, indicating fewer false positives. Recall assesses the classifier’s ability to identify all relevant instances, signifying fewer false negatives. Precision, recall, and the F1 Score were computed as shown in Equations (2), (3) and (4) respectively: (2) Precision=TPTP+FP

(3) Recall=TPTP+FN

(4) F1Score=2×Recall×PrecisionRecall+Precision

The ROC curve plots the true positive rate (TPR) against the false positive rate (FPR) at various classifier threshold values. The area under the ROC curve (ROC AUC) indicates the classifier’s ability to discriminate between positive and negative classes across all possible thresholds. TPR and FPR are computed as follows: (5) TPR(Recall)=TPTP+FN

(6) FPR=FPFP+TN

Similarly, the precision–recall (P–R) curve assesses binary classification model performance, particularly in situations with imbalanced classes. The area under the P-R curve (P-R AUC) serves as a performance metric, with higher values indicating a better classifier performance.

Table 2 presents the accuracy, F1 Score, ROC AUC, and P-R AUC metrics. The F1 score was computed at the best threshold determined from the P-R curve.

ROC curves and precision–recall (P–R) curves for all the provided CNN architectures are illustrated in Figure 4. Analyzing the results from Table 2 and Figure 3 and Figure 4, it is evident that the ZFNet architecture exhibited the best performance metrics. Deep, large networks such as VGG, ResNet, Inception, and Xception showed slight signs of overfitting on this dataset, likely due to its relatively small size compared to the ImageNet dataset. Despite this, the ZFNet architecture, a modified version of AlexNet, achieved an accuracy of 96.7% and an F1 Score of 95.3%. However, it should be noted that this network had a large number of trainable parameters. Therefore, the objective of this study was to develop a custom CNN using convolutional and fully connected layers with fewer trainable parameters, while maintaining high accuracy and other performance metrics on the test set.

Understanding the growth curves of accuracy over epochs (Figure 3) is important in assessing the performance and convergence of DNN models, by providing insights into how quickly and steadily a model learns from the training data, as well as its ability to generalize to unseen data. By analyzing these curves, it is possible to identify potential issues such as overfitting [58] or underfitting [59] and make informed decisions about the model architecture, optimization techniques, and training parameters. Comparison of accuracy across all models [60] (Table 2) allows pinpointing the most promising approaches and focusing further efforts on refining and optimizing those models for practical deployment.

3. Results

3.1. Custom Model Design and Development

The original ZFNet architecture includes a flattened layer and two fully connected layers, totaling 4096 parameters. However, fully connected layers are prone to overfitting. To address this issue, our proposed Custom CNN incorporates a global average pooling (GAP) layer [61] to reduce the number of parameters and mitigate overfitting. Additionally, the Custom CNN features a reduced number of kernels: 64 in the first two convolutional layers and 128 kernels in the subsequent convolutional layers. Through manual testing of various modifications, this configuration demonstrated optimal performance. The complete structure of the Custom CNN is outlined in Table 3.

Determining the optimal CNN architecture for this task required careful tuning of the hyper-parameters. However, conventional methods such as grid search and random search were not suitable, due to the computational expense and high iteration count involved in training complex architectures. Instead, Bayesian optimization [62] was employed in this study.

Bayesian optimization operates under the assumption of a predefined number of samples provided by the function f, representing various hyper-parameter combinations and their corresponding performances. Denoted as Dt={(x1,f(x1)),(x2,f(x2)),…,(xt,f(xt))}, where t is the number of samples, and each xi corresponds to a specific hyper-parameter configuration. The method assumes a prior distribution P(f), leading to a posterior distribution given by P(f|Dt)∝P(Dt|f)P(f)

This posterior distribution aids in making informed estimates of hyper-parameter configurations based on observed performance [62]. In practice, the objective function f is evaluated using a surrogate function, and the next evaluation point at t+1 is determined using an acquisition function. The acquisition function balances exploration and exploitation, seeking regions where the objective function is uncertain, while exploiting areas with minimal values of f. Common surrogate functions include Gaussian process (GP), sequential model-based algorithm configuration (SMAC) using random forest, and tree Parzen estimators (TPE) [63].

To initiate Bayesian hyper-parameter optimization, the hyper-parameter space needs to be defined. The search space involves varying the number of kernels and kernel sizes for the convolutional layers. The hyper-parameter space for Bayesian optimization is presented in Table 4.

The initial parameters for the search were based on the Custom CNN architecture outlined in Table 3. Bayesian optimization was conducted using GP and SMAC with 30 trials. The optimization process was implemented using the Skopt library. Figure 5 illustrates the convergence plots for GP and SMAC, demonstrating the convergence of both algorithms. The objective function was minimized to optimize for the F1 score, due to the class imbalance in the dataset. The best architectures obtained using GP and SMAC are presented in Table 5 and Table 6 along with its performance testing compared to ZFNet (Table 7).

The custom CNN architecture also boasts a reduced parameter count compared to other established architectures, as delineated in Table 8. This streamlined parameterization not only facilitates faster predictions but also minimizes memory consumption, optimizing computational efficiency and resource utilization (See Figure 6, Figure 7 and Figure 8).

3.2. Custom Model Performance Analysis

A validation set performance confusion matrix of the Custom GP optimized model is illustrated in Figure 9.

As evident from Figure 9, the model correctly predicted most parts of images (56,678 images). However, there were certain misclassifications: 592 pitting corrosion images were predicted as non-corrosion, and 330 non-corrosion images were predicted as pitting corrosion. Examples of correctly predicted images are shown in Figure 10a,c, while incorrectly predicted images are shown in Figure 10b,d.

The developed model utilizes the sigmoid activation function in the final layer, resulting in the model output as a probability (a real number between 0 and 1). If the probability is higher or equal to the threshold value (0.5), the image prediction status is labeled as “pitting corrosion”; otherwise, it is labeled as “non-corrosion”. As observed in Figure 10, pitting corrosion images consistently exhibited high probability values (more than 0.75), whereas non-corrosion images tended to have lower probabilities (not exceeding 0.4). Incorrect predictions were often associated with probabilities close to the threshold, as well as with highly cropped pit areas or extraneous elements in the image.

Figure 11 displays the output of each convolutional layer in the developed model. Notably, feature maps in the initial layers capture fine details, whereas subsequent layers exhibit progressively less detailed representations. Ultimately, the model outputs the probability of pitting corrosion, enabling predictions based on a defined threshold of 0.5.

4. Discussion

Detection of corrosion using neural networks is a well-explored area in the scientific literature. For instance, Bastian et al. [30] presented a computer vision approach for corrosion detection in water, oil, and gas pipelines. We curated a dataset comprising over 140,000 optical pipeline images with varying corrosion levels. Employing a custom-designed CNN, we classified pipeline images based on corrosion levels. Despite its streamlined architecture, our CNN achieved a remarkable classification accuracy of 98.8%, surpassing many existing classifiers. Moreover, our proposed algorithm for corrosion localization, leveraging recursive region-based methods, had enhanced precision in identifying corroded regions within images. This deep learning methodology obviates the need for costly and disruptive manual inspections and non-vision-based evaluation techniques, significantly streamlining pipeline maintenance processes.

Unlike their approach, we focused exclusively on processing images of pitting corrosion in gas pipelines, leveraging a significantly larger dataset. This approach allowed for a more comprehensive and detailed analysis of corrosion patterns and enabled the model to learn a wider variety of features associated with corrosion, ultimately leading to more accurate and robust detection results.

Binary classification for pitting corrosion detection in images of gas pipelines presents several potential limitations. Firstly, the effectiveness of binary classification heavily relies on the quality and diversity of the training data [64]. Insufficient or biased training data may result in a poor generalization performance [65], leading to inaccurate classification outcomes, especially in real-world scenarios where environmental conditions and corrosion patterns can vary significantly.

Pitting corrosion often exhibits subtle and localized damage, making it challenging to distinguish from other types of corrosion [66] or surface irregularities. This complexity can lead to misclassifications [67] or false positives/negatives, reducing the reliability of the classification system.

Furthermore, the binary classification approach may overlook important nuances in pitting corrosion severity and progression. Pitting corrosion can occur across a spectrum of sizes and depths, each posing different levels of risk for the integrity of the pipeline [68]. Failing to account for these nuances in binary classification could result in inadequate prioritization of maintenance or repair efforts, potentially leading to safety hazards or economic losses.

Lastly, the binary classification approach may struggle to adapt to evolving corrosion patterns or conditions over time [69]. Pitting corrosion mechanisms can be influenced by various factors, such as environmental changes, pipeline material degradation, or operational parameters. A static binary classification model may lack the flexibility to adapt to such changes, necessitating periodic retraining or fine-tuning to maintain optimal performance [70].

In summary, while binary classification offers a straightforward approach to pitting corrosion detection, it is not without its limitations. Addressing these limitations requires careful consideration of factors such as training data quality, classification model robustness, and adaptability to changing corrosion conditions, to ensure reliable and effective corrosion detection in gas pipelines.

5. Conclusions

Oil and gas pipelines are susceptible to surface defects like pitting corrosion during their operational lifespan. While such defects are detectable through visual inspection, automating this process with television cameras can significantly enhance efficiency. However, the manual analysis of camera frames covering the entire pipeline surface is both resource-intensive and time-consuming. To address this challenge, we proposed the integration of a computer vision model within a television inspection system capable of identifying images exhibiting pitting corrosion. This study addressed the classification of 576,000 images, encompassing instances of both pitting corrosion and non-corrosion in gas pipelines. Initially, conventional CNN architectures, including AlexNet, ZFNet, VGG, ResNet, Inception, and Xception were trained on this dataset. Subsequently, a custom architecture was developed and optimized using a Gaussian process (GP) and sequential model-Based algorithm configuration (SMAC). The optimized custom architecture achieved an accuracy of 98.4%, surpassing the performance of the established CNN architectures, while exhibiting fewer parameters.

Further research directions in this domain could explore continuing to augment the dataset [71] with a more diverse range of pipeline surface images, including various types of corrosion and non-corrosion instances, which could improve the model’s robustness and generalization capabilities. Additionally, exploring novel CNN architectures or adapting [72] existing ones specifically tailored to the characteristics of pipeline surface defect detection could lead to further performance improvements. Architectures designed to handle imbalanced datasets more effectively could also be investigated. Investigating the effectiveness of transfer learning techniques [73] by fine-tuning pre-trained models on the dataset could accelerate model convergence and enhance performance, especially in scenarios with limited labeled data. Delving deeper into feature extraction methods [74] or integrating additional domain-specific features into the model pipeline could potentially enhance the model’s ability to discriminate between different types of surface defects. Exploring the fusion of information from multiple modalities [75], such as thermal imaging or ultrasonic data, alongside visual data from television inspection systems, could provide a more comprehensive understanding of surface conditions and improve the overall detection accuracy. Investigating methods for deploying the developed model in real-time television inspection systems [76], considering computational efficiency and latency constraints, would be crucial for practical deployment.

Author Contributions

Conceptualization, I.M. and D.M.; Data curation, V.N., N.V.K., D.M.K. and A.G.K.; Formal analysis, V.N., N.V.K., N.A.S., D.M.K., A.G.K. and D.M.; Funding acquisition, V.N., A.B. and A.G. (Andrei Gantimurov); Investigation, A.B., A.G. (Andrei Gantimurov), N.V.K., N.A.S., A.G. (Andrey Galinovsky), D.M.K. and D.M.; Methodology, V.T., A.B., N.A.S., A.G.K. and A.G. (Andrey Galinovsky); Project administration, V.N., A.B., A.G. (Andrey Galinovsky) and A.G. (Andrei Gantimurov); Resources, I.M., V.T., V.N. and A.G. (Andrei Gantimurov), A.G. (Andrey Galinovsky), D.M.K. and A.G.K.; Software, I.M., N.V.K. and N.A.S.; Supervision, V.T. and A.G. (Andrei Gantimurov); Validation, V.T., A.B., N.V.K., N.A.S., D.M.K., A.G.K. and D.M.; Visualization, N.V.K., N.A.S. and D.M.; Writing—original draft, I.M., V.N. and N.V.K.; Writing—review and editing, I.M., A.B., V.T., A.G. (Andrei Gantimurov) and N.A.S. All authors have read and agreed to the published version of the manuscript.

Institutional Review Board Statement

Not applicable.

Informed Consent Statement

Not applicable.

Data Availability Statement

Data are contained within the article.

Conflicts of Interest

The authors declare no conflicts of interest.

Figure 1 Examples of gas pipeline surfaces: (a,b) without and (c,d) with pitting corrosion.

Figure 2 Dataset image examples.

Figure 3 Accuracy of the given CNN architectures on the training and validation sets: (a) AlexNet and ZFNet; (b) VGG16 and VGG19; (c) ResNet18 and ResNet50; (d) Inception V3 and Xception.

Figure 4 ROC (a) and P–R (b) curves of the provided architectures.

Figure 5 GP and SMAC convergence plots.

Figure 6 Developed CNN architecture training and validation set accuracy.

Figure 7 ROC and P–R curves of developed architectures and ZFNet.

Figure 8 Partial dependence plot of the GP objective function.

Figure 9 Confusion matrix of the Custom GP optimized model test set performance.

Figure 10 Examples of the Custom GP optimized model test set predictions with the probability values after the sigmoid activation function: (a) correctly predicted pitting corrosion images examples, (b) incorrectly predicted non-corrosion images, (c) incorrectly predicted non-corrosion images examples, (d) incorrectly predicted pitting corrosion images.

Figure 11 Convolutional layer output in the Custom GP optimized model.

sensors-24-03563-t001_Table 1 Table 1 Number of images in the dataset splits.

Class	Train Set	Test Set	Validation Set	Total	
Non-corrosion	341,600	42,232	43,168	427,000	
Pitting corrosion	119,200	15,368	14,432	149,000	
Total	460,800	57,600	57,600	576,000	
Percentage	80%	10%	10%		

sensors-24-03563-t002_Table 2 Table 2 Performance metrics of CNN architectures.

Architecture	Accuracy (%)	F1 Score (%)	ROC AUC	P-R AUC	
AlexNet	95.83	92.81	0.98	0.97	
ZFNet	96.70	95.30	0.98	0.98	
VGG16	94.10	90.48	0.97	0.95	
VGG19	94.62	92.20	0.98	0.96	
ResNet18	96.18	93.52	0.99	0.98	
ResNet50	91.49	84.64	0.95	0.91	
Inception V3	95.66	92.05	0.98	0.97	
Xception	95.31	91.84	0.98	0.97	

sensors-24-03563-t003_Table 3 Table 3 Custom CNN architecture.

No	Layer	Input	Kernel Size	Kernels	Stride	Output	
1	Conv1	224 × 224 × 3	7 × 7 × 3	64	2	109 × 109 × 64	
2	Pool1	109 × 109 × 64	3 × 3 × 1	-	2	54 × 54 × 64	
3	Conv2	54 × 54 × 64	5 × 5 × 64	64	2	25 × 25 × 64	
4	Pool2	25 × 25 × 64	3 × 3 × 1	-	2	12 × 12 × 64	
5	Conv3	12 × 12 × 64	3 × 3 × 128	128	1	10 × 10 × 128	
6	Conv4	10 × 10 × 128	3 × 3 × 128	128	1	8 × 8 × 128	
7	Conv5	7 × 7 × 384	3 × 3 × 128	128	1	6 × 6 × 128	
8	Pool3	6 × 6 × 128	3 × 3 × 1	-	2	2 × 2 × 128	
9	GAP	2 × 2 × 128	-	-	-	128	
10	FC	128	-	1	-	1	

sensors-24-03563-t004_Table 4 Table 4 Hyper-parameter space for Bayesian optimization.

No	Hyper-Parameter	Values	
1	1st Convolution Layer Kernels	16, 32, 64, 96	
2	1st Convolution Layer Kernel Sizes	3 × 3, 5 × 5, 7 × 7, 9 × 9	
3	2nd Convolution Layer Kernels	32, 64, 96, 128, 256	
4	2nd Convolution Layer Kernel Sizes	3 × 3, 5 × 5, 7 × 7, 9 × 9	
5	3rd and 4th Convolution Layer Kernels	32, 64, 128, 256, 384	
6	5th Convolution Layer Kernels	32, 64, 128, 256, 384	

sensors-24-03563-t005_Table 5 Table 5 Custom CNN architecture with GP optimization.

No	Layer	Input	Kernel Size	Kernels	Stride	Output	Parameters	
1	Conv1	224 × 224 × 3	7 × 7 × 3	32	2	109 × 109 × 32	4736	
2	Pool1	109 × 109 × 32	3 × 3 × 1	-	2	54 × 54 × 32	-	
3	Conv2	54 × 54 × 32	7 × 7 × 32	128	2	24 × 24 × 128	200,832	
4	Pool2	24 × 24 × 128	3 × 3 × 1	-	2	11 × 11 × 128	-	
5	Conv3	11 × 11 × 128	3 × 3 × 128	384	1	9 × 9 × 384	442,752	
6	Conv4	9 × 9 × 384	3 × 3 × 384	384	1	7 × 7 × 384	1,327,488	
7	Conv5	7 × 7 × 384	3 × 3 × 384	128	1	5 × 5 × 128	442,496	
8	Pool3	5 × 5 × 128	3 × 3 × 1	-	2	2 × 2 × 128	-	
9	GAP	2 × 2 × 128	-	-	-	128	-	
10	FC	128	-	1	-	1	129	

sensors-24-03563-t006_Table 6 Table 6 Custom CNN architecture with SMAC optimization.

No	Layer	Input	Kernel Size	Kernels	Stride	Output	Parameters	
1	Conv1	224 × 224 × 3	7 × 7 × 3	16	2	109 × 109 × 16	2368	
2	Pool1	109 × 109 × 16	3 × 3 × 1	-	2	54 × 54 × 16	-	
3	Conv2	54 × 54 × 16	9 × 9 × 16	64	2	23 × 23 × 64	83,008	
4	Pool2	23 × 23 × 64	3 × 3 × 1	-	2	11 × 11 × 64	-	
5	Conv3	11 × 11 × 64	3 × 3 × 64	384	1	9 × 9 × 384	221,568	
6	Conv4	9 × 9 × 384	3 × 3 × 384	384	1	7 × 7 × 384	1,327,488	
7	Conv5	7 × 7 × 384	3 × 3 × 384	128	1	5 × 5 × 128	442,496	
8	Pool3	5 × 5 × 128	3 × 3 × 1	-	2	2 × 2 × 128	-	
9	GAP	2 × 2 × 128	-	-	-	128	-	
10	FC	128	-	1	-	1	129	

sensors-24-03563-t007_Table 7 Table 7 Test set performance of the newly developed architectures compared to ZFNet.

Architecture	Accuracy (%)	F1 Score (%)	ROC AUC	P-R AUC	
ZFNet	96.70	95.30	0.98	0.98	
Custom	97.40	96.97	0.99	0.99	
Custom GP Optimized	98.44	97.30	0.99	0.99	
Custom SMAC Optimized	97.40	96.30	0.99	0.98	

sensors-24-03563-t008_Table 8 Table 8 Amount of trainable parameters in the CNN architectures.

Architecture	Amount of Trainable Parameters	
ZFNet	about 30 million	
VGG16	about 138 million	
ResNet50	about 25.6 million	
InceptionV3	about 25 million	
Xception	about 22.8 million	
Custom GP Optimized	about 2.4 million	

Disclaimer/Publisher’s Note: The statements, opinions and data contained in all publications are solely those of the individual author(s) and contributor(s) and not of MDPI and/or the editor(s). MDPI and/or the editor(s) disclaim responsibility for any injury to people or property resulting from any ideas, methods, instructions or products referred to in the content.
==== Refs
References

1. Jackson R.B. Down A. Phillips N.G. Ackley R.C. Cook C.W. Plata D.L. Zhao K. Natural gas pipeline leaks across Washington, DC Environ. Sci. Technol. 2014 48 2051 2058 10.1021/es404474x 24432903
2. Papadakis G.A. Major hazard pipelines: A comparative study of onshore transmission accidents J. Loss Prev. Process Ind. 1999 12 91 107 10.1016/S0950-4230(98)00048-5
3. Kaseem M. Fatimah S. Nashrah N. Ko Y.G. Recent progress in surface modification of metals coated by plasma electrolytic oxidation: Principle, structure, and performance Prog. Mater. Sci. 2021 117 100735 10.1016/j.pmatsci.2020.100735
4. Obot I.B. Under-deposit corrosion on steel pipeline surfaces: Mechanism, mitigation and current challenges J. Bio-Tribo-Corros. 2021 7 49 10.1007/s40735-021-00485-9
5. Alamri A.H. Localized corrosion and mitigation approach of steel materials used in oil and gas pipelines—An overview Eng. Fail. Anal. 2020 116 104735 10.1016/j.engfailanal.2020.104735
6. Amend W. Quickel G. Bruce W. Beavers J. Hydrogen Assisted Cracking Failures of Girth Welds in Oil and Gas Pipelines Proceedings of the International Pipeline Conference Calgary, AB, Canada 24–28 September 2012 American Society of Mechanical Engineers New York, NY, USA 2012 Volume 45141 17 30
7. MacLean M. Farhat Z. Jarjoura G. Fayyad E. Abdullah A. Hassan M. Fabrication and investigation of the scratch and indentation behaviour of new generation Ni-P-nano-NiTi composite coating for oil and gas pipelines Wear 2019 426 265 276 10.1016/j.wear.2019.01.058
8. Debnath S. Roy K. Wickie R. Kohandehghan A. A Comprehensive Fitness for Service Engineering Assessment of Gas Pipeline Dents Proceedings of the International Pipeline Conference Calgary, AB, Canada 26–30 September 2022 American Society of Mechanical Engineers New York, NY, USA 2022 Volume 86571 V002T03A040
9. Yang Y. Xu T. Qin J. He Z. Yu Q. Su J. Zhou X. Experimental study on the compression mechanical behaviour of steel pipes with mechanically induced pitting corrosion Appl. Ocean. Res. 2021 116 102880 10.1016/j.apor.2021.102880
10. Velázquez J.C. Hernández-Sánchez E. Terán G. Capula-Colindres S. Diaz-Cruz M. Cervantes-Tobón A. Probabilistic and statistical techniques to study the impact of localized corrosion defects in oil and gas pipelines: A review Metals 2022 12 576 10.3390/met12040576
11. Ghosh D. Ghosh D. Analysis of pit and its effect on electrochemical corrosion reaction in oil and gas pipelines Indian J. Chem. Technol. IJCT 2022 29 88 94
12. Seghier M.E.A.B. Keshtegar B. Taleb-Berrouane M. Abbassi R. Trung N.T. Advanced intelligence frameworks for predicting maximum pitting corrosion depth in oil and gas pipelines Process Saf. Environ. Prot. 2021 147 818 833 10.1016/j.psep.2021.01.008
13. Bagheri M. Sari A. Study of natural gas emission from a hole on underground pipelines using optimal design-based CFD simulations: Developing comprehensive soil classified leakage models J. Nat. Gas Sci. Eng. 2022 102 104583 10.1016/j.jngse.2022.104583
14. Wang J. Ren L. Jia Z. Jiang T. Wang G.X. Pipeline leak detection and corrosion monitoring based on a novel FBG pipe-fixture sensor Struct. Health Monit. 2022 21 1819 1832 10.1177/14759217211044966
15. Davydova D. Defects in process pipelines: Typology, assessment of the impact on operation Prombezopasnost-Priural. 2012 8 24 28
16. Yerekhinsky B. Maslakov S. Shustov N. Mitrofanov A. Baryshov S. Zaryaev M. Kravtsov A. Yegorov S. Cracking of metal housings of Christmas-tree gate valves of northern fields gas producers Territ. Neft. 2014 2 31 36
17. Kalinichenko N. Vasiliev M. Atlas of Defects in Welded Joints and Base Metal: Teaching Aid Publishing House of Tomsk Polytechnic University Moscow, Russia 2006
18. Shafeek H. Gadelmawla E. Abdel-Shafy A. Elewa I. Automatic inspection of gas pipeline welding defects using an expert vision system NDT E Int. 2004 37 301 307 10.1016/j.ndteint.2003.10.004
19. Feng B. Wu J. Tu H. Tang J. Kang Y. A review of magnetic flux leakage nondestructive testing Materials 2022 15 7362 10.3390/ma15207362 36295427
20. Piao G. Guo J. Hu T. Deng Y. Leung H. A novel pulsed eddy current method for high-speed pipeline inline inspection Sens. Actuators A Phys. 2019 295 244 258 10.1016/j.sna.2019.05.026
21. Brassier P. Hosten B. Vulovic F. High-frequency transducers and correlation method to enhance ultrasonic gas flow metering Flow Meas. Instrum. 2001 12 201 211 10.1016/S0955-5986(01)00013-9
22. Aleshin N. Skrynnikov S. Krysko N. Shchipakov N. Kusyy A. Classification of surface defects in the base metal of pipelines based on complex diagnostics results Comput. Opt. 2023 47 170 178 10.18287/2412-6179-CO-1185
23. Hawari A. Alamin M. Alkadour F. Elmasry M. Zayed T. Automated defect detection tool for closed circuit television (cctv) inspected sewer pipelines Autom. Constr. 2018 89 99 109 10.1016/j.autcon.2018.01.004
24. Choi K.Y. Kim S. Morphological analysis and classification of types of surface corrosion damage by digital image processing Corros. Sci. 2005 47 1 15 10.1016/j.corsci.2004.05.007
25. Medeiros F. Ramalho G. Bento M. Medeiros L. On the evaluation of texture and color features for nondestructive corrosion detection EURASIP J. Appl. Signal Process. 2010 2010 817473 10.1155/2010/817473
26. He K. Zhang X. Ren S. Sun J. Deep residual learning for image recognition arXiv 2015 1512.03385
27. Chollet F. Xception: Deep Learning with Depthwise Separable Convolutions arXiv 2017 1610.02357
28. Yu L. Yang E. Luo C. Ren P. AMCD: An accurate deep learning-based metallic corrosion detector for MAV-based real-time visual inspection J. Ambient. Intell. Humaniz. Comput. 2023 14 8087 8098 10.1007/s12652-021-03580-4
29. Wang L. Liu Y. Fu L. Wang Y. Tang N. Functional Intelligence-Based Scene Recognition Scheme for MAV Environment-Adaptive Navigation Drones 2022 6 120 10.3390/drones6050120
30. Bastian B.T. Jaspreeth N. Ranjith S.K. Jiji C. Visual inspection and characterization of external corrosion in pipelines using deep neural network NDT E Int. 2019 107 102134 10.1016/j.ndteint.2019.102134
31. Gapsari F. Utaminingrum F. Lai C.W. Anam K. Sulaiman A.M. Haidar M.F. Julian T.S. Ebenso E.E. A convolutional neural network-VGG16 method for corrosion inhibition of 304SS in sulfuric acid solution by timoho leaf extract J. Mater. Res. Technol. 2024 30 1116 1127 10.1016/j.jmrt.2024.03.156
32. Atha D. Jahanshahi M. Evaluation of deep learning approaches based on convolutional neural networks for corrosion detection Struct. Health Monit. 2017 17 1110 1128 10.1177/1475921717737051
33. Petricca L. Moss T. Figueroa G. Broen S. Corrosion Detection Using AI: A Comparison of Standard Computer Vision Techniques and Deep Learning Model AIRCC Publishing Corporation Chennai, India 2016 91 99
34. Ahuja S.K. Surface Corrosion Detection and Classification for Steel Alloy using Image Processing and Machine Learning Helix 2018 8 3822 3827 10.29042/2018-3822-3827
35. Katsamenis I. Protopapadakis E. Doulamis A. Doulamis N. Voulodimos A. Pixel-level Corrosion Detection on Metal Constructions by Fusion of Deep Learning Semantic and Contour Segmentation arXiv 2020 2008.05204
36. Ossai C.I. A data-driven machine learning approach for corrosion risk assessment—A comparative study Big Data Cogn. Comput. 2019 3 28 10.3390/bdcc3020028
37. Greenacre M. Groenen P.J. Hastie T. d’Enza A.I. Markos A. Tuzhilina E. Principal component analysis Nat. Rev. Methods Prim. 2022 2 100 10.1038/s43586-022-00184-w
38. Wang D. Tan D. Liu L. Particle swarm optimization algorithm: An overview Soft Comput. 2018 22 387 408 10.1007/s00500-016-2474-6
39. Bebis G. Georgiopoulos M. Feed-forward neural networks IEEE Potentials 1994 13 27 31 10.1109/45.329294
40. Touzani S. Granderson J. Fernandes S. Gradient boosting machine for modeling the energy consumption of commercial buildings Energy Build. 2018 158 1533 1543 10.1016/j.enbuild.2017.11.039
41. Bondada V. Pratihar D.K. Kumar C.S. Detection and quantitative assessment of corrosion on pipelines through image analysis Procedia Comput. Sci. 2018 133 804 811 10.1016/j.procs.2018.07.115
42. Akhlaghi B. Mesghali H. Ehteshami M. Mohammadpour J. Salehi F. Abbassi R. Predictive deep learning for pitting corrosion modeling in buried transmission pipelines Process Saf. Environ. Prot. 2023 174 320 327 10.1016/j.psep.2023.04.010
43. Chen Z. Li X. Wang W. Li Y. Shi L. Li Y. Residual strength prediction of corroded pipelines using multilayer perceptron and modified feedforward neural network Reliab. Eng. Syst. Saf. 2023 231 108980 10.1016/j.ress.2022.108980
44. Shaik N.B. Pedapati S.R. Taqvi S.A.A. Othman A. Dzubir F.A.A. A feed-forward back propagation neural network approach to predict the life condition of crude oil pipeline Processes 2020 8 661 10.3390/pr8060661
45. Wang B. Mu Y. Shen F. Zhu R. Li Y. Liu C. Cheng X. Zhang D. Li X. Identification of Corrosion Factors in Blast Furnace Gas Pipe Network with Corrosion Big Data Online Monitoring Technology Corros. Sci. 2024 230 111906 10.1016/j.corsci.2024.111906
46. Soomro A.A. Mokhtar A.A. Kurnia J.C. Lashari N. Sarwar U. Jameel S.M. Inayat M. Oladosu T.L. A review on Bayesian modeling approach to quantify failure risk assessment of oil and gas pipelines due to corrosion Int. J. Press. Vessel. Pip. 2022 200 104841 10.1016/j.ijpvp.2022.104841
47. Forkan A.R.M. Kang Y.B. Jayaraman P.P. Liao K. Kaul R. Morgan G. Ranjan R. Sinha S. CorrDetector: A framework for structural corrosion detection from drone images using ensemble deep learning Expert Syst. Appl. 2022 193 116461 10.1016/j.eswa.2021.116461
48. Thalagala S. Walgampaya C. Application of AlexNet convolutional neural network architecture-based transfer learning for automated recognition of casting surface defects Proceedings of the 2021 International Research Conference on Smart Computing and Systems Engineering (SCSE) Colombo, Sri Lanka 16 September 2021 Volume 4 129 136
49. Zhu H. Ge W. Liu Z. Deep learning-based classification of weld surface defects Appl. Sci. 2019 9 3312 10.3390/app9163312
50. Huang X. Peng L. Mukherjee S. Hamilton C. Shi X. Srinivasan V. Davis E. Deng Y. Fast VGG: An Advanced Pre-Trained Deep Learning Framework for Multi-Layered Composite NDE via Multifrequency Near-Field Microwave Imaging Res. Nondestruct. Eval. 2024 35 102 118 10.1080/09349847.2024.2319765
51. Gong Y. Luo J. Shao H. He K. Zeng W. Automatic defect detection for small metal cylindrical shell using transfer learning and logistic regression J. Nondestruct. Eval. 2020 39 24 10.1007/s10921-020-0668-4
52. Shipway N. Huthwaite P. Lowe M. Barden T. Using ResNets to perform automated defect detection for Fluorescent Penetrant Inspection NDT E Int. 2021 119 102400 10.1016/j.ndteint.2020.102400
53. Wu B. Zhou J. Yang H. Huang Z. Ji X. Peng D. Yin Y. Shen X. An ameliorated deep dense convolutional neural network for accurate recognition of casting defects in X-ray images Knowl.-Based Syst. 2021 226 107096 10.1016/j.knosys.2021.107096
54. Holm E. Transeth A.A. Knudsen O.Ø. Stahl A. Classification of corrosion and coating damages on bridge constructions from images using convolutional neural networks Proceedings of the Twelfth International Conference on Machine Vision (ICMV 2019) Amsterdam, The Netherlands 16–18 November 2019 Volume 11433 549 556
55. Yin B. Josselyn N. Considine T.A. Kelley J.V. Rinderspacher B. Jensen R.E. Snyder J.F. Zhang Z. Rundensteiner E.A. Corrosion Image Data Set for Automating Scientific Assessment of Materials Proceedings of the BMVC Online 22–25 November 2021 102
56. Li A. Ma H. Xu S. Three-dimensional morphology and watershed-algorithm-based method for pitting corrosion evaluation Buildings 2022 12 1908 10.3390/buildings12111908
57. Zhang X. Jiang C. Chen Y. Memon S.A. Lun P. Sun H. Ren J. Wang J. Study on the non-uniformity of rust layer and residual rebar caused by pitting corrosion in mortar Constr. Build. Mater. 2023 406 133442
58. Chen T. Zhang Z. Liu S. Chang S. Wang Z. Robust overfitting may be mitigated by properly learned smoothening Proceedings of the International Conference on Learning Representations Addis Ababa, Ethiopia 26–30 April 2020
59. Li Z. Liu L. Dong C. Shang J. Overfitting or underfitting? understand robustness drop in adversarial training arXiv 2020 2010.08034
60. Zhou Q. Ooka R. Comparison of different deep neural network architectures for isothermal indoor airflow prediction Proceedings of the Building Simulation Springer Berlin/Heidelberg, Germany 2020 Volume 13 1409 1423
61. Hsiao T.Y. Chang Y.C. Chou H.H. Chiu C.T. Filter-based deep-compression with global average pooling for convolutional networks J. Syst. Archit. 2019 95 9 18 10.1016/j.sysarc.2019.02.008
62. Doke P. Shrivastava D. Pan C. Zhou Q. Zhang Y.D. Using CNN with Bayesian optimization to identify cerebral micro-bleeds Mach. Vis. Appl. 2020 31 36 10.1007/s00138-020-01087-0
63. Ozaki Y. Tanigaki Y. Watanabe S. Nomura M. Onishi M. Multiobjective tree-structured Parzen estimator J. Artif. Intell. Res. 2022 73 1209 1250 10.1613/jair.1.13188
64. Nawshin F. Gad R. Unal D. Al-Ali A.K. Suganthan P.N. Malware detection for mobile computing using secure and privacy-preserving machine learning approaches: A comprehensive survey Comput. Electr. Eng. 2024 117 109233 10.1016/j.compeleceng.2024.109233
65. Yang Y. Gan E. Dziugaite G.K. Mirzasoleiman B. Identifying spurious biases early in training through the lens of simplicity bias Proceedings of the International Conference on Artificial Intelligence and Statistics, PMLR Valencia, Spain 2–4 May 2024 2953 2961
66. Jian L. Weikang K. Jiangbo S. Ke W. Weikui W. Weipu Z. Zhoumo Z. Determination of corrosion types from electrochemical noise by artificial neural networks Int. J. Electrochem. Sci. 2013 8 2365 2377 10.1016/S1452-3981(23)14315-X
67. Trangucci R. Chen Y. Zelner J. Identified vaccine efficacy for binary post-infection outcomes under misclassification without monotonicity arXiv 2022 2211.16502
68. Mesghali H. Akhlaghi B. Gozalpour N. Mohammadpour J. Salehi F. Abbassi R. Predicting Maximum Pitting Corrosion Depth in Buried Transmission Pipelines: Insights from Tree-Based Machine Learning and Identification of Influential Factors Process Saf. Environ. Prot. 2024 187 1269 1285 10.1016/j.psep.2024.05.014
69. Vangrunderbeek V. Coelho L.B. Zhang D. Li Y. Van Ingelgem Y. Terryn H. Exploring the potential of transfer learning in extrapolating accelerated corrosion test data for long-term atmospheric corrosion forecasting Corros. Sci. 2023 225 111619 10.1016/j.corsci.2023.111619
70. Jayakumar S.P. Conte A. Framework: Clustering-Driven Approach for Base Station Parameter Optimization and Automation (CeDA-BatOp) Proceedings of the 2024 IEEE 21st Consumer Communications & Networking Conference (CCNC) Las Vegas, NV, USA 6–9 January 2024 1026 1029
71. Gururangan S. Marasović A. Swayamdipta S. Lo K. Beltagy I. Downey D. Smith N.A. Don’t stop pretraining: Adapt language models to domains and tasks arXiv 2020 2004.10964
72. Scarpa G. Vitale S. Cozzolino D. Target-adaptive CNN-based pansharpening IEEE Trans. Geosci. Remote Sens. 2018 56 5443 5457 10.1109/TGRS.2018.2817393
73. Kora P. Ooi C.P. Faust O. Raghavendra U. Gudigar A. Chan W.Y. Meenakshi K. Swaraja K. Plawiak P. Acharya U.R. Transfer learning techniques for medical image analysis: A review Biocybern. Biomed. Eng. 2022 42 79 107 10.1016/j.bbe.2021.11.004
74. Hira Z.M. Gillies D.F. A review of feature selection and feature extraction methods applied on microarray data Adv. Bioinform. 2015 2015 198363 10.1155/2015/198363 26170834
75. Zhu Z. Yin H. Chai Y. Li Y. Qi G. A novel multi-modality image fusion method based on image decomposition and sparse representation Inf. Sci. 2018 432 516 529 10.1016/j.ins.2017.09.010
76. Moradi S. Zayed T. Real-time defect detection in sewer closed circuit television inspection videos Pipelines 2017 American Society of Civil Engineers Reston, VA, USA 2017 295 307
